{"version":3,"file":"js/209.69f6c39b6a60468bf2bd.js","mappings":"ubAkBA,MAqBA,IAAwBA,WAAAA,EAAYC,iBAAAA,KAAmC,OAAD,6BACpE,MAAOC,EAAOC,GAAcH,EAAWI,MAAM,KAC7C,IACIC,EADAC,EAAgB,GAEpB,IACEA,QA1BmD,OAAD,6BACpD,aACQC,QAAQC,IACZ,aAA6BC,GAAuB,OAAD,6B,MACjD,MAAM,WAAEC,UAAsF,QAAhE,QAAOC,MAAM,gBAAgBF,iCAAmC,eAAEG,SAAW,GAC3G,OAAOF,SAGXG,UAmBAR,EAhBqC,GAAEH,EAAOC,GAAaF,EAAkBS,IACxEA,EACJI,QAAO,EAAGC,KAAAA,EAAMC,WAAAA,KAA8BD,EAAKE,SAAS,4BAA8BD,EAAWE,UAAYf,IACjHgB,KAAKC,IAA2B,CAC/BlB,MAAAA,EACAmB,KAAM,IAAIpB,IAAmBE,EAAa,IAAIA,IAAe,KAAKiB,EAAUJ,WAAWK,OACvFC,MAAOF,EAAUJ,WAAWO,SAUrBC,CAAgB,CAACtB,EAAOC,GAAaF,EAAkBK,GAChE,SACAD,EAAS,CAAC,CAAEoB,UAAU,IAExB,MAAQT,WAAYU,GAClBpB,EAAcqB,MAAK,EAAGZ,KAAAA,EAAMC,WAAAA,KAAsC,+BAATD,GAAyCC,EAAWY,KAAOzB,KAAe,GACrI,OAAOuB,EACH,CACEG,YAAY,EACZP,MAAOI,EAAYH,KACnBlB,OAAAA,GAEFA","sources":["webpack:///./src/Navigation.ts"],"sourcesContent":["import { activePlugins } from './Utils/constants';\nimport { HrefNavItem, NavSection } from '@console/dynamic-plugin-sdk/src';\n\nexport interface RouteProps {\n  isHidden?: boolean;\n  appId?: string;\n  href?: string;\n  title?: string;\n}\n\nexport interface DynamicNav {\n  dynamicNav: string;\n  currentNamespace: string;\n}\n\nexport type GetAllExtensions = () => Promise<(HrefNavItem | NavSection)[]>;\nexport type CalculateRoutes = (navIdentifier: [string, string], currentNamespace: string, extensions: (HrefNavItem | NavSection)[]) => RouteProps[];\n\nconst getAllExtensions: GetAllExtensions = async () => {\n  return (\n    await Promise.all(\n      activePlugins.flatMap(async (pluginName: string) => {\n        const { extensions } = (await (await fetch(`/api/plugins/${pluginName}/plugin-manifest.json`))?.json()) || {};\n        return extensions;\n      }),\n    )\n  ).flat();\n};\n\nconst calculateRoutes: CalculateRoutes = ([appId, navSection], currentNamespace, extensions) => {\n  return extensions\n    .filter(({ type, properties }: HrefNavItem) => type.includes('console.navigation/href') && properties.section === navSection)\n    .map((extension: HrefNavItem) => ({\n      appId,\n      href: `/${currentNamespace}${navSection ? `/${navSection}` : ''}${extension.properties.href}`,\n      title: extension.properties.name,\n    }));\n};\n\nexport default async ({ dynamicNav, currentNamespace }: DynamicNav) => {\n  const [appId, navSection] = dynamicNav.split('/');\n  let allExtensions = [];\n  let routes: RouteProps | RouteProps[];\n  try {\n    allExtensions = await getAllExtensions();\n    routes = calculateRoutes([appId, navSection], currentNamespace, allExtensions);\n  } catch {\n    routes = [{ isHidden: true }];\n  }\n  const { properties: currSection } =\n    allExtensions.find(({ type, properties }: NavSection) => type === 'console.navigation/section' && properties.id === navSection) || {};\n  return currSection\n    ? {\n        expandable: true,\n        title: currSection.name,\n        routes,\n      }\n    : routes;\n};\n"],"names":["dynamicNav","currentNamespace","appId","navSection","split","routes","allExtensions","Promise","all","pluginName","extensions","fetch","json","flat","filter","type","properties","includes","section","map","extension","href","title","name","calculateRoutes","isHidden","currSection","find","id","expandable"],"sourceRoot":""}