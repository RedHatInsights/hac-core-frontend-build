{"version":3,"file":"js/722.2df824b4641adaea1ea6.js","mappings":"gFACAA,EAAOC,QAAU,I,wFCKV,SAASC,IAAoB,2BAAZC,EAAY,yBAAZA,EAAY,gBAMlC,OALWC,EAAAA,EAAAA,IAAY,GAAD,CACpBC,KACAC,EAAAA,EAAAA,IAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAFtC,OAGjBJ,M,wFCLP,MAAMK,GAAa,IAAAC,OAAK,IACtB,0EAGWC,EAAmB,IAC9B,kBAAC,EAAAC,SAAQ,CACPC,SACE,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,QAAO,QAIZ,kBAAC,EAAAC,OAAM,KACL,kBAAC,EAAAC,MAAK,CAACC,KAAK,IAAIC,UAAWV,IAC3B,kBAAC,EAAAQ,MAAK,KACJ,kBAAC,EAAAG,SAAQ,CAACC,GAAG,S,kCCXrB,MAyBA,EAzBsB,KACpB,MAAMC,GAAU,IAAAC,cAgBhB,OAdA,IAAAC,YAAU,K,aACS,UACRC,SAAS,CAAEC,cAAe,OACZ,QAAvB,EAAe,QAAf,EAAAC,OAAOC,gBAAQ,eAAEC,cAAM,SAAE1B,OAEV,QAAf,EAAAwB,OAAOC,gBAAQ,SAAEC,OAAOC,YAAY,OACpC,MAAMC,EAA4B,QAAf,EAAAJ,OAAOC,gBAAQ,eAAEC,OAAOG,GAAG,kBAAmBC,GAC/DX,EAAQY,KAAK,IAAID,EAAME,WAEzB,MAAO,KACLJ,OAED,IAGD,kBAAC,EAAAK,SAAQ,KACP,kBAAC,KAAmB,MACpB,kBAACzB,EAAM","sources":["webpack:///./config/empty.js","webpack:///./src/store/index.js","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst SamplePage = lazy(() =>\n  import(/* webpackChunkName: \"SamplePage\" */ './Routes/SamplePage/SamplePage')\n);\n\nexport const Routes: React.FC = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path=\"/\" component={SamplePage} />\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  </Suspense>\n);\n","import React, { Fragment, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst App: React.FC = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n    window.insights?.chrome?.init();\n\n    window.insights?.chrome.identifyApp('hac');\n    const unregister = window.insights?.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n    return () => {\n      unregister();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes  />\n    </Fragment>\n  );\n};\n\nexport default App;\n"],"names":["module","exports","init","middleware","getRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","SamplePage","lazy","Routes","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","component","Redirect","to","history","useHistory","useEffect","register","notifications","window","insights","chrome","identifyApp","unregister","on","event","push","navId","Fragment"],"sourceRoot":""}