{"version":3,"file":"js/260.b65eff6f6abb3f7a710a.js","mappings":"4PAaA,MCTMA,EAAOC,SAASC,eAAe,SAErC,IAAAC,QAAO,iBDOU,KACf,MAAM,OAAEC,IAAW,EAAAC,EAAA,MACZC,EAASC,GAAc,WAA6B,IAW3D,OAVA,aAAgB,KACVH,IACF,OAAiBA,IAAU,QAA8BI,MAAMC,IAC7DF,EAAWE,GACXC,OAAOC,aAAe,CACpBC,eAAgBH,EAAKI,KAAI,EAAGC,KAAAA,KAAWA,UAI5C,CAACV,IAEF,gBAAC,KAAQ,CAACW,OAAO,SAAK,GAAiDC,YACrE,gBAAC,gBAAM,CAACC,UAAU,QAAYP,OAAOQ,SAASC,SAAU,IACrDb,EAAQc,OAAS,EAChB,gBAAC,WAAc,KACb,gBAAC,IAAc,CAACC,eAAgBf,EAASgB,MAAMlB,MAAAA,OAAM,EAANA,KAAa,QAAU,KACtE,gBAACmB,EAAA,EAAG,OAGN,gBAACC,EAAA,EAAM,UC7BD,MAAKxB,GAAM,IAAMA,EAAKyB,aAAa,iBAAkB","sources":["webpack:///./src/AppEntry.tsx","webpack:///./src/bootstrap.tsx"],"sourcesContent":["import * as React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\nimport { IncludePlugins } from '@console/mount/src/components/plugins';\nimport { getActivePlugins, PluginType } from './Utils/plugins';\nimport Loader from './Utils/Loader';\nimport packageInfo from '../package.json';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst AppEntry = () => {\n  const { isBeta } = useChrome();\n  const [plugins, setPlugins] = React.useState<PluginType[]>([]);\n  React.useEffect(() => {\n    if (isBeta) {\n      getActivePlugins(isBeta(), packageInfo.insights.appname).then((data) => {\n        setPlugins(data);\n        window.SERVER_FLAGS = {\n          consolePlugins: data.map(({ name }) => name),\n        };\n      });\n    }\n  }, [isBeta]);\n  return (\n    <Provider store={init(process.env.NODE_ENV !== 'production' && logger).getStore()}>\n      <Router basename={getBaseName(window.location.pathname, 1)}>\n        {plugins.length > 0 ? (\n          <React.Fragment>\n            <IncludePlugins enabledPlugins={plugins} base={isBeta?.() ? '/beta' : ''} />\n            <App />\n          </React.Fragment>\n        ) : (\n          <Loader />\n        )}\n      </Router>\n    </Provider>\n  );\n};\n\nexport default AppEntry;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\n\nrender(<AppEntry />, root, () => root.setAttribute('data-ouia-safe', 'true'));\n"],"names":["root","document","getElementById","render","isBeta","useChrome","plugins","setPlugins","then","data","window","SERVER_FLAGS","consolePlugins","map","name","store","getStore","basename","location","pathname","length","enabledPlugins","base","App","Loader","setAttribute"],"sourceRoot":""}