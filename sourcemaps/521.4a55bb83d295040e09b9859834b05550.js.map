{"version":3,"file":"js/521.14eb32f83e6b8a580450.js","mappings":"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","sources":["webpack:///./config/empty.js","webpack:///./src/poc-code/console-mount/src/components/foundation/static-routes/EmptyRoute.tsx","webpack:///./src/poc-code/testK8s/ws/ws-utils.ts","webpack:///./src/poc-code/testK8s/ws/WSFactory.ts","webpack:///./src/poc-code/testK8s/PrintObject.tsx","webpack:///./src/poc-code/testK8s/WSLoadingState.tsx","webpack:///./src/poc-code/testK8s/WSTest.tsx","webpack:///./src/poc-code/testK8s/FetchTest.tsx","webpack:///./src/poc-code/testK8s/TestK8s.tsx","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/Utils/Loader.tsx","webpack:///./src/Utils/customError.ts","webpack:///./src/Utils/httpError.ts","webpack:///./src/Utils/commonFetch.ts","webpack:///./src/Utils/plugins.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/api/useResolvedExtensions.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/coderefs/coderef-resolver.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/add-actions.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/catalog.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/cluster-settings.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/context-providers.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/dashboards.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/feature-flags.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/file-upload.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/navigation.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/pages.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/perspectives.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/pvc.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/redux.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/resource-metadata.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/telemetry.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/yaml-templates.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/notification-alert.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/console-types.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/storage-provider.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/actions.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/topology-details.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/topology.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/create-resource.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/user-preferences.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/horizontal-nav-tabs.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s-ref.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/api/core-api.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/perspective/perspective-context.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/perspective/useActivePerspective.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/error/custom-error.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/error/http-error.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/fetch/console-fetch-utils.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/fetch/console-fetch.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s-utils.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s-resource.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/object.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/promise.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/shared-modules-init.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/runtime/plugin-loader.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/runtime/plugin-init.ts","webpack:///./src/poc-code/console-mount/src/redux/middleware/thunk.ts","webpack:///./src/poc-code/console-mount/src/redux/reducers/index.ts","webpack:///./src/poc-code/console-mount/src/redux/reducers/flags.ts","webpack:///./src/poc-code/console-mount/src/redux/useReduxStore.ts","webpack:///./src/poc-code/console-mount/src/components/plugins/IncludePlugins.tsx","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/url.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/constants.ts","webpack:///./src/poc-code/console-mount/src/components/plugins/utils.ts","webpack:///./src/poc-code/console-plugin-sdk/src/api/pluginSubscriptionService.ts","webpack:///./src/poc-code/console-plugin-sdk/src/utils/extension-i18n.ts","webpack:///./src/poc-code/console-plugin-sdk/src/api/useExtensions.ts","webpack:///./src/poc-code/console-plugin-sdk/src/store.ts","webpack:///./src/store/index.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/generated/schema/plugin-manifest.cjs"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import * as React from 'react';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\n\nconst EmptyRoute: React.FC = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        Empty Route\n      </Title>\n      <EmptyStateBody>\n        <p>Nothing to see here.</p>\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default EmptyRoute;\n","const getToken = (): string | null => {\n  const cookieToken = document.cookie.split('; ').find((val) => val.startsWith('cs_jwt='));\n  if (!cookieToken) {\n    // eslint-disable-next-line no-console\n    console.error('token loading issues', typeof cookieToken, cookieToken);\n    return null;\n  }\n  const [, token] = cookieToken.split('=');\n\n  return token;\n};\nconst base64 = (data: string): string => {\n  return btoa(data).replace(/\\+/g, '-').replace(/\\//g, '_').split('=', 1)[0];\n};\n\nconst getUtilsConfig = () => {\n  const token = getToken();\n  const base64Token = base64(token);\n\n  return {\n    wsConfigs: {\n      host: K8S_WS_TARGET_URL,\n      subProtocols: [`base64url.bearer.authorization.k8s.io.${base64Token}`, 'base64.binary.k8s.io'],\n    },\n  };\n};\n\nexport const createURL = (host: string, path: string): string => {\n  let url;\n\n  if (host === 'auto') {\n    if (window.location.protocol === 'https:') {\n      url = 'wss://';\n    } else {\n      url = 'ws://';\n    }\n    url += window.location.host;\n  } else {\n    url = host;\n  }\n\n  if (path) {\n    url += path;\n  }\n\n  return url;\n};\n\nexport const applyConfigHost = (overrideHost?: string): string => {\n  return overrideHost ?? getUtilsConfig().wsConfigs.host;\n};\n\nexport const applyConfigSubProtocols = (overridableProtocols?: string[]): string[] => {\n  return overridableProtocols ?? getUtilsConfig().wsConfigs.subProtocols;\n};\n","import type {\n  EventHandlers,\n  EventHandlerTypes,\n  CloseHandler,\n  MessageHandler,\n  BulkMessageHandler,\n  MessageDataType,\n  DestroyHandler,\n  OpenHandler,\n  ErrorHandler,\n} from './types';\nimport { applyConfigSubProtocols, applyConfigHost, createURL } from './ws-utils';\n\nexport type WSOptions = {\n  /**\n   * The path to the resource you wish to watch.\n   */\n  path: string;\n  /**\n   * Overridable ws host url for Plugins. Normally set by the application.\n   */\n  host?: string;\n  /**\n   * Overridable ws sub protocols for Plugins. Normally set by the application.\n   * Is ignored if `host` is not set.\n   */\n  subProtocols?: string[];\n  // TODO: document\n  reconnect?: boolean;\n  jsonParse?: boolean;\n  bufferMax?: number;\n  bufferFlushInterval?: number;\n  timeout?: number;\n};\n\n/**\n * @class WebSocket factory and utility wrapper.\n */\nexport class WSFactory {\n  private readonly handlers: EventHandlers;\n\n  private readonly flushCanceler: ReturnType<typeof setInterval>;\n\n  private readonly bufferMax: number;\n\n  private paused = false;\n\n  private state = '';\n\n  private messageBuffer: MessageDataType[] = [];\n\n  private connectionAttempt: ReturnType<typeof setTimeout>;\n\n  private ws: WebSocket | null = null;\n\n  /**\n   * @param id - unique id for the WebSocket.\n   * @param options - websocket options to initate the WebSocket with.\n   */\n  constructor(private readonly id: string, private readonly options: WSOptions) {\n    this.bufferMax = options.bufferMax || 0;\n    this.handlers = {\n      open: [],\n      close: [],\n      error: [],\n      message: [],\n      destroy: [],\n      bulkMessage: [],\n    };\n    this.connect();\n\n    if (this.bufferMax) {\n      this.flushCanceler = setInterval(this.flushMessageBuffer.bind(this), this.options.bufferFlushInterval || 500);\n    }\n  }\n\n  private reconnect() {\n    if (this.connectionAttempt || this.state === 'destroyed') {\n      return;\n    }\n\n    let delay = 1000;\n\n    const attempt = () => {\n      if (!this.options.reconnect || this.state === 'open') {\n        clearTimeout(this.connectionAttempt);\n        this.connectionAttempt = null;\n        return;\n      }\n      if (this.options.timeout && delay > this.options.timeout) {\n        clearTimeout(this.connectionAttempt);\n        this.connectionAttempt = null;\n        this.destroy();\n        return;\n      }\n\n      this.connect();\n      delay = Math.round(Math.min(1.5 * delay, 60000));\n      this.connectionAttempt = setTimeout(attempt, delay);\n      // eslint-disable-next-line no-console\n      console.log(`attempting reconnect in ${delay / 1000} seconds...`);\n    };\n\n    this.connectionAttempt = setTimeout(attempt, delay);\n  }\n\n  private connect() {\n    this.state = 'init';\n    this.messageBuffer = [];\n\n    const url = createURL(applyConfigHost(this.options.host), this.options.path);\n    const subProtocols = applyConfigSubProtocols(this.options.host ? this.options.subProtocols : undefined);\n    try {\n      this.ws = new WebSocket(url, subProtocols);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Error creating websocket:', e);\n      this.reconnect();\n      return;\n    }\n\n    this.ws.onopen = () => {\n      // eslint-disable-next-line no-console\n      console.log(`websocket open: ${this.id}`);\n      this.state = 'open';\n      this.triggerEvent('open', undefined);\n      if (this.connectionAttempt) {\n        clearTimeout(this.connectionAttempt);\n        this.connectionAttempt = null;\n      }\n    };\n    this.ws.onclose = (evt) => {\n      // eslint-disable-next-line no-console\n      console.log(`websocket closed: ${this.id}`, evt);\n      this.state = 'closed';\n      this.triggerEvent('close', evt);\n      this.reconnect();\n    };\n    this.ws.onerror = (evt) => {\n      // eslint-disable-next-line no-console\n      console.log(`websocket error: ${this.id}`);\n      this.state = 'error';\n      this.triggerEvent('error', evt);\n    };\n    this.ws.onmessage = (evt) => {\n      const msg = this.options?.jsonParse ? JSON.parse(evt.data) : evt.data;\n      // In some browsers, onmessage can fire after onclose/error. Don't update state to be incorrect.\n      if (this.state !== 'destroyed' && this.state !== 'closed') {\n        this.state = 'open';\n      }\n      this.triggerEvent('message', msg);\n    };\n  }\n\n  /**\n   * Invoke all registered handler callbacks for a given data.\n   */\n  private invokeHandlers(type: EventHandlerTypes, data?: unknown) {\n    const handlers = this.handlers[type];\n    if (!handlers) {\n      return;\n    }\n    handlers.forEach((h) => {\n      try {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        h(data); // typescript is having an issue with passing the data, muting for now\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error('WS handling failed:', e);\n      }\n    });\n  }\n\n  /**\n   * Triggers event to be buffered or invoked depending on config.\n   */\n  private triggerEvent(type: EventHandlerTypes, data?: unknown) {\n    if (this.state === 'destroyed') {\n      return;\n    }\n\n    const isMessageEvent = (t: string, e: unknown): e is MessageDataType => {\n      return t === 'message' && !!e;\n    };\n\n    // Only buffer \"message\" events, so \"error\" and \"close\" etc can pass thru.\n    if (this.bufferMax && isMessageEvent(type, data)) {\n      this.messageBuffer.push(data);\n\n      if (this.messageBuffer.length > this.bufferMax) {\n        this.messageBuffer.shift();\n      }\n\n      return;\n    }\n\n    this.invokeHandlers(type, data);\n  }\n\n  onMessage(fn: MessageHandler): WSFactory {\n    if (this.state === 'destroyed') {\n      return this;\n    }\n    this.handlers.message.push(fn);\n    return this;\n  }\n\n  onBulkMessage(fn: BulkMessageHandler): WSFactory {\n    if (this.state === 'destroyed') {\n      return this;\n    }\n    this.handlers.bulkMessage.push(fn);\n    return this;\n  }\n\n  onError(fn: ErrorHandler): WSFactory {\n    if (this.state === 'destroyed') {\n      return this;\n    }\n    this.handlers.error.push(fn);\n    return this;\n  }\n\n  onOpen(fn: OpenHandler): WSFactory {\n    if (this.state === 'destroyed') {\n      return this;\n    }\n    this.handlers.open.push(fn);\n    return this;\n  }\n\n  onClose(fn: CloseHandler): WSFactory {\n    if (this.state === 'destroyed') {\n      return this;\n    }\n    this.handlers.close.push(fn);\n    return this;\n  }\n\n  onDestroy(fn: DestroyHandler): WSFactory {\n    if (this.state === 'destroyed') {\n      return this;\n    }\n    this.handlers.destroy.push(fn);\n    return this;\n  }\n\n  flushMessageBuffer() {\n    if (this.paused) {\n      return;\n    }\n\n    if (!this.messageBuffer.length) {\n      return;\n    }\n\n    if (this.handlers.bulkMessage.length) {\n      this.invokeHandlers('bulkMessage', this.messageBuffer);\n    } else {\n      this.messageBuffer.forEach((e) => this.invokeHandlers('message', e));\n    }\n\n    this.messageBuffer = [];\n  }\n\n  /**\n   *  Pausing prevents any buffer flushing until unpaused.\n   */\n  pause() {\n    this.paused = true;\n  }\n\n  unpause() {\n    this.paused = false;\n    this.flushMessageBuffer();\n  }\n\n  isPaused() {\n    return this.paused;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  bufferSize() {\n    return this.messageBuffer.length;\n  }\n\n  destroy() {\n    // eslint-disable-next-line no-console\n    console.log(`destroying websocket: ${this.id}`);\n    if (this.state === 'destroyed') {\n      return;\n    }\n\n    try {\n      if (this.ws) {\n        this.ws.close();\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Error while close WS socket', e);\n    }\n\n    clearInterval(this.flushCanceler);\n    clearTimeout(this.connectionAttempt);\n\n    if (this.ws) {\n      this.ws.onopen = null;\n      this.ws.onclose = null;\n      this.ws.onerror = null;\n      this.ws.onmessage = null;\n      this.ws = null;\n    }\n\n    try {\n      this.triggerEvent('destroy');\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('Error while trigger destroy event for WS socket', e);\n    }\n\n    this.state = 'destroyed';\n\n    this.messageBuffer = [];\n  }\n\n  send(data: Parameters<typeof WebSocket.prototype.send>[0]) {\n    this.ws?.send(data);\n  }\n}\n","import * as React from 'react';\nimport { K8sResourceCommon } from './dynamic-plugin-sdk';\n\ntype PrintObjectProps = {\n  object: K8sResourceCommon;\n};\n\nconst PrintObject: React.FC<PrintObjectProps> = ({ object }) => {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const sanitize = (resourceOrResourceList) => {\n    if (Array.isArray(resourceOrResourceList)) {\n      return resourceOrResourceList.map(sanitize);\n    }\n\n    const {\n      apiVersion,\n      kind,\n      apiGroup,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      metadata: { managedFields, ...metadata }, // drop managedFields\n      ...resource\n    } = resourceOrResourceList;\n\n    return {\n      apiVersion,\n      kind,\n      apiGroup,\n      metadata,\n      ...resource,\n    };\n  };\n\n  if (!object) {\n    return <div>No Object to Report</div>;\n  }\n\n  return (\n    <pre style={{ overflow: 'hidden', maxHeight: expanded ? undefined : 150, position: 'relative', paddingTop: 25 }}>\n      {JSON.stringify(sanitize(object), null, 2)}\n      {expanded ? (\n        <div onClick={() => setExpanded(false)} style={{ cursor: 'pointer', top: 0, width: '100%', position: 'absolute', textAlign: 'center' }}>\n          (Click to collapse)\n        </div>\n      ) : (\n        <div\n          onClick={() => setExpanded(true)}\n          style={{\n            cursor: 'pointer',\n            background: 'linear-gradient(transparent, gray)',\n            bottom: 0,\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            textAlign: 'center',\n          }}\n        >\n          (Click to expand)\n        </div>\n      )}\n    </pre>\n  );\n};\n\nexport default PrintObject;\n","import * as React from 'react';\nimport { Spinner } from '@patternfly/react-core';\n\ntype WSLoadingStateProps = {\n  socketBeingCreated: boolean;\n  socketOpen: boolean;\n  resourceLoaded: boolean;\n};\n\nconst WSLoadingState: React.FC<WSLoadingStateProps> = ({ socketBeingCreated, socketOpen, resourceLoaded }) => {\n  if (!socketBeingCreated) {\n    return null;\n  }\n  if (socketOpen) {\n    if (resourceLoaded) {\n      return null;\n    }\n\n    return <p>Socket Open.</p>;\n  }\n\n  return <Spinner />;\n};\n\nexport default WSLoadingState;\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport { WSFactory } from './ws';\nimport PrintObject from './PrintObject';\nimport { Alert, Button, Title } from '@patternfly/react-core';\nimport WSLoadingState from './WSLoadingState';\n\nconst WSTest = () => {\n  const [r, setR] = React.useState(null);\n  const [createSocket, setCreateSocket] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [isOpen, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    let ws: WSFactory;\n    if (createSocket) {\n      ws = new WSFactory('sample websocket', {\n        path: `/apis/appstudio.redhat.com/v1alpha1/namespaces/aballantyne/applications?watch=true`,\n      });\n      ws.onOpen(() => {\n        setOpen(true);\n      });\n      ws.onError((data) => {\n        console.debug('error', data);\n      });\n      ws.onMessage((dataStringOrObject) => {\n        try {\n          let data;\n          if (typeof dataStringOrObject === 'string') {\n            data = JSON.parse(dataStringOrObject);\n          } else {\n            data = dataStringOrObject;\n          }\n          const { type, object } = data || {}; // current structure\n          switch (type) {\n            case 'DELETED':\n              setR(null);\n              break;\n            default:\n              setR(object);\n          }\n          console.debug('message', type, object);\n        } catch (e) {\n          console.error('>>> Web Socket Data Bad', e);\n          setError('Web Socket data unknown structure');\n          return;\n        }\n      });\n      ws.onClose((data) => {\n        setOpen(false);\n        setR(null);\n        setCreateSocket(null);\n        // https://www.rfc-editor.org/rfc/rfc6455#section-11.7\n        // 1006: https://stackoverflow.com/a/19305172\n        console.debug('close', data, 'code:', data.code);\n      });\n    }\n\n    return () => {\n      ws?.destroy();\n      ws = null;\n    };\n  }, [createSocket]);\n\n  return (\n    <>\n      <Title headingLevel=\"h2\" size=\"xl\">\n        Websockets\n      </Title>\n      <p>Needs a created Application to successfully return details.</p>\n      {!createSocket && (\n        <Button onClick={() => setCreateSocket(true)} variant=\"primary\">\n          Create Socket Connection\n        </Button>\n      )}\n      <WSLoadingState socketBeingCreated={createSocket} socketOpen={isOpen} resourceLoaded={!!r} />\n      {isOpen && !r && <p>No response -- did you create the Application?</p>}\n      {error && (\n        <Alert variant=\"danger\" title=\"Websocket Error\">\n          {error}\n        </Alert>\n      )}\n      {r && <PrintObject object={r} />}\n    </>\n  );\n};\n\nexport default WSTest;\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport { Button, TextInput, Title } from '@patternfly/react-core';\nimport {\n  k8sCreateResource,\n  k8sDeleteResource,\n  k8sGetResource,\n  k8sListResource,\n  // K8sModel,\n  k8sPatchResource,\n  // K8sResourceCommon,\n  k8sUpdateResource,\n} from '@openshift/dynamic-plugin-sdk-utils';\n\nimport type { K8sModel, K8sResourceCommon } from './dynamic-plugin-sdk';\nimport PrintObject from './PrintObject';\n\nconst ProjectModel: K8sModel = {\n  apiVersion: 'v1',\n  apiGroup: 'project.openshift.io',\n  kind: 'Project',\n  abbr: 'PR',\n  label: 'Project',\n  labelPlural: 'Projects',\n  plural: 'projects',\n};\n\nconst ApplicationModel: K8sModel = {\n  apiVersion: 'v1alpha1',\n  kind: 'Application',\n  apiGroup: 'appstudio.redhat.com',\n  abbr: 'A',\n  label: 'Application',\n  labelPlural: 'Applications',\n  plural: 'applications',\n};\n\n// eslint-disable-next-line no-shadow\nenum ActionType {\n  LIST = 'list projects',\n  CREATE = 'create',\n  GET = 'get',\n  PATCH = 'patch',\n  PUT = 'put',\n  DELETE = 'delete',\n}\n\nconst FetchTest: React.FC = () => {\n  const [r, setR] = React.useState(null);\n  const [namespace, setNamespace] = React.useState<string>('default');\n  const [name, setName] = React.useState<string>('test');\n  const [status, setStatus] = React.useState<string>('');\n  const [action, setAction] = React.useState<ActionType | null>(null);\n  const [resourceVersion, setResourceVersion] = React.useState<string>(null);\n\n  React.useEffect(() => {\n    const testApplicationMetadata = {\n      name,\n      ns: namespace,\n    };\n    const testApplicationData: K8sResourceCommon & { [key: string]: any } = {\n      apiVersion: `${ApplicationModel.apiGroup}/${ApplicationModel.apiVersion}`,\n      kind: ApplicationModel.kind,\n      metadata: {\n        name,\n        namespace,\n      },\n    };\n\n    let promise = null;\n    switch (action) {\n      case ActionType.LIST:\n        promise = k8sListResource({\n          model: ProjectModel,\n        }).then(({ items }: any) => {\n          let ns = null;\n          if (Array.isArray(items)) {\n            const namespaces = items.map((dataResource) => dataResource.metadata.name);\n            console.debug('++++available namespaces:', namespaces);\n            ns = namespaces[0];\n          } else if (items?.metadata?.namespace) {\n            ns = items.metadata.namespace;\n          }\n\n          if (ns) {\n            setAction(null); // prevent re-invoking this effect/call\n            setNamespace(ns);\n          } else {\n            // eslint-disable-next-line no-alert\n            alert('Could not find namespace; you are likely not able to do much as we are targeting \"default\"');\n          }\n          return items;\n        });\n        break;\n      case ActionType.CREATE:\n        promise = k8sCreateResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n          resource: testApplicationData,\n        });\n        break;\n      case ActionType.GET:\n        promise = k8sGetResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n        }).then((data) => {\n          setResourceVersion(data?.metadata?.resourceVersion);\n          return data;\n        });\n        break;\n      case ActionType.PATCH:\n        promise = k8sPatchResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n          patches: [\n            {\n              op: 'replace',\n              path: '/test',\n              value: 'false',\n            },\n          ],\n        });\n        break;\n      case ActionType.PUT:\n        promise = k8sUpdateResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n          resource: {\n            ...testApplicationData,\n            metadata: {\n              ...testApplicationData.metadata,\n              resourceVersion,\n            },\n          },\n        }).then((data) => {\n          setResourceVersion(data?.metadata?.resourceVersion);\n          return data;\n        });\n        break;\n      case ActionType.DELETE:\n        promise = k8sDeleteResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n        });\n        break;\n      case null:\n        // ignore effect\n        break;\n      default:\n        // this shouldn't happen, catch state for missed cases\n        throw new Error('uh oh!');\n    }\n    promise\n      ?.then((data) => {\n        setStatus(`${action} response:`);\n        setR(data);\n        console.debug(`++++${action}!`, data);\n      })\n      .catch((err) => {\n        console.error(`++++failed ${action}`, err);\n        setStatus(`failed call: ${err.message}`);\n        setR(null);\n      })\n      .finally(() => {\n        setAction(null); // prevent the hook for re-firing on name change\n      });\n  }, [action, name, namespace, resourceVersion]);\n\n  return (\n    <>\n      <Title headingLevel=\"h2\" size=\"xl\">\n        Fetch Calls\n      </Title>\n      <TextInput placeholder=\"Application name\" onChange={(v) => setName(v)} value={name} />\n      <div>\n        <p>Test calls -- predefined data; use the above input to make/update/get multiple Applications</p>\n        {Object.values(ActionType).map((v) => (\n          <React.Fragment key={v}>\n            <Button\n              isDisabled={(v !== ActionType.LIST && namespace === 'default') || (v === ActionType.PUT && resourceVersion === null)}\n              onClick={() => setAction(v)}\n            >\n              {v}\n            </Button>{' '}\n          </React.Fragment>\n        ))}\n        In `{namespace}` namespace\n      </div>\n      <div>{status}</div>\n      {r && <PrintObject object={r} />}\n    </>\n  );\n};\n\nexport default FetchTest;\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport { PageSection } from '@patternfly/react-core';\nimport WSTest from './WSTest';\nimport FetchTest from './FetchTest';\n\nconst TestK8s: React.FC = () => {\n  return (\n    <PageSection>\n      <FetchTest />\n      <hr style={{ margin: 20 }} />\n      <WSTest />\n    </PageSection>\n  );\n};\n\nexport default TestK8s;\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport EmptyRoute from '@console/mount/src/components/foundation/static-routes/EmptyRoute';\nimport TestK8s from './poc-code/testK8s/TestK8s';\n\nconst DynamicRoute = React.lazy(() => import(/* webpackChunkName: \"DynamicRoute\" */ './Routes/DynamicRoute/DynamicRoute'));\n\nexport const Routes: React.FC = () => (\n  <React.Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route exact path=\"/testK8s\" component={TestK8s} />\n      <Route path=\"/:dynamicPath\" component={DynamicRoute} />\n      <Route exact path=\"/\" component={EmptyRoute} />\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  </React.Suspense>\n);\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useStore } from 'react-redux';\n\nconst App: React.FC = () => {\n  const history = useHistory();\n\n  const chrome = useChrome();\n  const store = useStore();\n\n  React.useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n    const { on: onChromeEvent } = chrome?.init();\n\n    const unregister = onChromeEvent('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`${event.domEvent.href.replace('/hac', '')}`);\n      }\n    });\n    return () => {\n      unregister();\n    };\n  }, [history, chrome]);\n\n  return (\n    <React.Fragment>\n      <NotificationsPortal store={store} />\n      <Routes />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Loader = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n\nexport default Loader;\n","/**\n * Allows to easily extend a base class to create custom applicative errors.\n *\n * example:\n * ```\n * class HttpError extends CustomError {\n * \tpublic constructor(\n * \t\tpublic code: number,\n * \t\tmessage?: string,\n * \t) {\n * \t\tsuper(message)\n * \t}\n * }\n *\n * new HttpError(404, 'Not found')\n * ```\n */\nexport class CustomError extends Error {\n  name: string;\n\n  constructor(message?: string) {\n    super(message);\n    // set error name as constructor name, make it not enumerable to keep native Error behavior\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n    Object.defineProperty(this, 'name', {\n      value: new.target.name,\n      enumerable: false,\n      configurable: true,\n    });\n    // Use captureStackTrace when available to remove contructor from stack trace\n    // Add message to the stack trace\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n    // fix the extended error prototype chain\n    // because typescript __extends implementation can't\n    // see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { CustomError } from './customError';\n\n/**\n * Http error\n *\n * Usage: throw HttpError.fromCode(404)\n */\nexport class HttpError extends CustomError {\n  protected static messages = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required', // RFC 7235\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed', // RFC 7232\n    413: 'Payload Too Large', // RFC 7231\n    414: 'URI Too Long', // RFC 7231\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable', // RFC 7233\n    417: 'Expectation Failed',\n    418: \"I'm a teapot\", // RFC 2324\n    421: 'Misdirected Request', // RFC 7540\n    426: 'Upgrade Required',\n    428: 'Precondition Required', // RFC 6585\n    429: 'Too Many Requests', // RFC 6585\n    431: 'Request Header Fields Too Large', // RFC 6585\n    451: 'Unavailable For Legal Reasons', // RFC 7725\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n    506: 'Variant Also Negotiates', // RFC 2295\n    510: 'Not Extended', // RFC 2774\n    511: 'Network Authentication Required', // RFC 6585\n  };\n\n  public constructor(message: string, public code?: number, public response?: Response, public json?: any) {\n    super(message);\n  }\n\n  public static fromCode(code: number) {\n    return new HttpError(HttpError.messages[code], code);\n  }\n}\n\nexport class TimeoutError extends CustomError {\n  public constructor(public url: string, public ms: number) {\n    super(`Call to ${url} timed out after ${ms}ms.`);\n  }\n}\n\nexport class RetryError extends CustomError {}\n","import { HttpError } from './httpError';\n\nconst k8sBasePath = location.host.includes('foo.redhat.com:1337') ? `/api/k8s` : K8S_TARGET_URL;\n\nexport const validateStatus = async (response: Response) => {\n  if (response.ok) {\n    return response;\n  }\n\n  if (response.status === 401) {\n    throw new HttpError('Invalid token. Are you working with Prod SSO token?', response.status, response);\n  }\n\n  const contentType = response.headers.get('content-type');\n  if (!contentType || contentType.indexOf('json') === -1) {\n    throw new HttpError(response.statusText, response.status, response);\n  }\n\n  if (response.status === 403) {\n    return response.json().then((json) => {\n      throw new HttpError(json.message || 'Access denied due to cluster policy.', response.status, response, json);\n    });\n  }\n\n  return response.json().then((json) => {\n    const cause = json.details?.causes?.[0];\n    let reason;\n    if (cause) {\n      reason = `Error \"${cause.message}\" for field \"${cause.field}\".`;\n    }\n    if (!reason) {\n      reason = json.message;\n    }\n    if (!reason) {\n      reason = json.error;\n    }\n    if (!reason) {\n      reason = response.statusText;\n    }\n\n    throw new HttpError(reason, response.status, response, json);\n  });\n};\n\nexport const commonFetch =\n  (token: Promise<string>) =>\n  async (url: string, options: RequestInit): Promise<Response> => {\n    if (!(await token)) {\n      return Promise.reject('Could not make k8s call. Unable to find token.');\n    }\n\n    const allOptions = {\n      ...options,\n      headers: {\n        ...options.headers,\n        Accept: 'application/json',\n        Authorization: `Bearer ${await token}`,\n      },\n    };\n\n    try {\n      return validateStatus(await fetch(new Request(`${k8sBasePath}${url}`, { credentials: 'include' }), allOptions));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n","export type PluginType = {\n  name: string;\n  pathPrefix?: string;\n};\n\ntype GetActivePlugins = (isBeta: boolean, appName: string) => Promise<PluginType[]>;\n\nexport const getActivePlugins: GetActivePlugins = async (isBeta, appName) => {\n  try {\n    return (await fetch(`${isBeta ? '/beta' : ''}/apps/${appName}/plugins.json`)).json();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Failed to fetch plugin data', e);\n    return [];\n  }\n};\n","import * as React from 'react';\nimport { useExtensions } from '@console/plugin-sdk/src/api/useExtensions';\nimport { resolveExtension } from '../coderefs/coderef-resolver';\nimport { UseResolvedExtensions } from '../extensions/console-types';\nimport { Extension, ExtensionTypeGuard, ResolvedExtension } from '../types';\nimport { settleAllPromises } from '../utils/promise';\n\n/**\n * React hook for consuming Console extensions with resolved `CodeRef` properties.\n *\n * This hook accepts the same argument(s) as `useExtensions` hook and returns an\n * adapted list of extension instances, resolving all code references within each\n * extension's properties.\n *\n * Initially, the hook returns an empty array. Once the resolution is complete,\n * the React component is re-rendered with the hook returning an adapted list of\n * extensions.\n *\n * When the list of matching extensions changes, the resolution is restarted. The\n * hook will continue to return the previous result until the resolution completes.\n *\n * Example usage:\n *\n * ```ts\n * const [navItemExtensions, navItemsResolved] = useResolvedExtensions<NavItem>(isNavItem);\n * // process adapted extensions and render your component\n * ```\n *\n * The hook's result elements are guaranteed to be referentially stable across re-renders.\n *\n * @param typeGuards Type guard(s) used to narrow the extension instances.\n *\n * @returns Tuple containing a list of adapted extension instances with resolved code\n * references, boolean flag indicating whether the resolution is complete, and a list\n * of errors detected during the resolution.\n */\nexport const useResolvedExtensions: UseResolvedExtensions = <E extends Extension>(\n  ...typeGuards: ExtensionTypeGuard<E>[]\n): [ResolvedExtension<E>[], boolean, any[]] => {\n  const extensions = useExtensions<E>(...typeGuards);\n\n  const [resolvedExtensions, setResolvedExtensions] = React.useState<ResolvedExtension<E>[]>([]);\n  const [resolved, setResolved] = React.useState<boolean>(false);\n  const [errors, setErrors] = React.useState<any[]>([]);\n\n  React.useEffect(() => {\n    let disposed = false;\n\n    // eslint-disable-next-line promise/catch-or-return\n    settleAllPromises(\n      extensions.map((e) => resolveExtension<typeof e, any, ResolvedExtension<E>>(e)),\n    ).then(([fulfilledValues, rejectedReasons]) => {\n      if (!disposed) {\n        setResolvedExtensions(fulfilledValues);\n        setErrors(rejectedReasons);\n        setResolved(true);\n\n        if (rejectedReasons.length > 0) {\n          // eslint-disable-next-line no-console\n          console.error('Detected errors while resolving Console extensions', rejectedReasons);\n        }\n      }\n    });\n\n    return () => {\n      disposed = true;\n    };\n  }, [extensions]);\n\n  return [resolvedExtensions, resolved, errors];\n};\n","/* eslint-disable no-console */\n\nimport * as _ from 'lodash';\nimport {\n  Extension,\n  RemoteEntryModule,\n  EncodedCodeRef,\n  CodeRef,\n  ResolvedCodeRefProperties,\n  ExtensionProperties,\n  UpdateExtensionProperties,\n} from '../types';\nimport { deepForOwn } from '../utils/object';\nimport { settleAllPromises } from '../utils/promise';\n\nconst codeRefSymbol = Symbol('CodeRef');\n\nexport const applyCodeRefSymbol = <T = any>(ref: CodeRef<T>) => {\n  ref[codeRefSymbol] = true;\n  return ref;\n};\n\nexport const isEncodedCodeRef = (obj): obj is EncodedCodeRef =>\n  _.isPlainObject(obj) &&\n  _.isEqual(Object.getOwnPropertyNames(obj), ['$codeRef']) &&\n  typeof (obj as EncodedCodeRef).$codeRef === 'string';\n\nexport const isExecutableCodeRef = (obj): obj is CodeRef =>\n  _.isFunction(obj) &&\n  _.isEqual(Object.getOwnPropertySymbols(obj), [codeRefSymbol]) &&\n  obj[codeRefSymbol] === true;\n\nconst codeRefErrorSymbol = Symbol('error');\nexport const isCodeRefError = (ref: CodeRef) => !!ref[codeRefErrorSymbol];\nexport const getCodeRefError = (ref: CodeRef) => ref[codeRefErrorSymbol];\nexport const setCodeRefError = (ref: CodeRef, e: any) => {\n  ref[codeRefErrorSymbol] = e;\n  return ref;\n};\n\n/**\n * Parse the `EncodedCodeRef` value into `[moduleName, exportName]` tuple.\n *\n * Returns an empty array if the value doesn't match the expected format.\n */\nexport const parseEncodedCodeRefValue = (value: string): [string, string] | [] => {\n  const match = value.match(/^([^.]+)(?:\\.(.+)){0,1}$/);\n  return match ? [match[1], match[2] || 'default'] : [];\n};\n\n/**\n * Returns the object referenced by the `EncodedCodeRef`.\n *\n * If an error occurs, calls `errorCallback` and returns `null`.\n *\n * _Does not throw errors by design._\n */\nexport const loadReferencedObject = async <TExport = any>(\n  ref: EncodedCodeRef,\n  entryModule: RemoteEntryModule,\n  pluginID: string,\n  errorCallback: VoidFunction,\n): Promise<TExport> => {\n  const [moduleName, exportName] = parseEncodedCodeRefValue(ref.$codeRef);\n  let requestedModule: {};\n\n  if (!moduleName) {\n    console.error(`Malformed code reference '${ref.$codeRef}' of plugin ${pluginID}`);\n    errorCallback();\n    return null;\n  }\n\n  try {\n    const moduleFactory = await entryModule.get(moduleName);\n    requestedModule = moduleFactory();\n  } catch (error) {\n    console.error(`Failed to load module '${moduleName}' of plugin ${pluginID}`, error);\n    errorCallback();\n    return null;\n  }\n\n  if (!requestedModule[exportName]) {\n    console.error(`Missing module export '${moduleName}.${exportName}' of plugin ${pluginID}`);\n    errorCallback();\n    return null;\n  }\n\n  return requestedModule[exportName];\n};\n\n/**\n * Returns new `extensions` array, resolving `EncodedCodeRef` values into `CodeRef` functions.\n *\n * _Does not execute `CodeRef` functions to load the referenced objects._\n */\nexport const resolveEncodedCodeRefs = (\n  extensions: Extension[],\n  entryModule: RemoteEntryModule,\n  pluginID: string,\n  errorCallback: VoidFunction,\n): Extension[] =>\n  _.cloneDeep(extensions).map((e) => {\n    deepForOwn<EncodedCodeRef>(e.properties, isEncodedCodeRef, (ref, key, obj) => {\n      const loader = applyCodeRefSymbol(async () =>\n        loadReferencedObject(ref, entryModule, pluginID, errorCallback),\n      );\n      obj[key] = Object.defineProperty(loader, 'name', { value: `${pluginID}-${ref.$codeRef}` });\n    });\n\n    return e;\n  });\n\n/**\n * Returns an extension with its `CodeRef` properties replaced with referenced objects.\n */\nexport const resolveExtension = async <\n  E extends Extension<P>,\n  P = ExtensionProperties<E>,\n  R = UpdateExtensionProperties<E, ResolvedCodeRefProperties<P>, P>\n>(\n  extension: E,\n): Promise<R> => {\n  const valueResolutions: Promise<void>[] = [];\n\n  deepForOwn<CodeRef>(extension.properties, isExecutableCodeRef, (ref, key, obj) => {\n    if (isCodeRefError(ref)) {\n      throw getCodeRefError(ref);\n    }\n    valueResolutions.push(\n      ref()\n        .then((resolvedValue) => {\n          obj[key] = resolvedValue;\n        })\n        .catch((e) => {\n          setCodeRefError(ref, e ?? true);\n          return e;\n        }),\n    );\n  });\n\n  await settleAllPromises(valueResolutions);\n\n  return (extension as unknown) as R;\n};\n","import * as React from 'react';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { AccessReviewResourceAttributes } from './console-types';\n\nexport type AddAction = ExtensionDeclaration<\n  'dev-console.add/action',\n  {\n    /** ID used to identify the action. */\n    id: string;\n    /** IDs used to identify the action groups the action would belong to. */\n    groupId?: string;\n    /** The label of the action */\n    label: string;\n    /** The description of the action. */\n    description: string;\n    /** The href to navigate to. */\n    href: string;\n    /** The perspective display icon. */\n    icon?: CodeRef<React.ReactNode>;\n    /** Optional access review to control visibility / enablement of the action. */\n    accessReview?: AccessReviewResourceAttributes[];\n  }\n>;\n\nexport type AddActionGroup = ExtensionDeclaration<\n  'dev-console.add/action-group',\n  {\n    /** ID used to identify the action group. */\n    id: string;\n    /** The title of the action group */\n    name: string;\n    /** ID of action group before which this group should be placed */\n    insertBefore?: string;\n    /** ID of action group after which this group should be placed */\n    insertAfter?: string;\n  }\n>;\n\n// Type guards\n\nexport const isAddAction = (e: Extension): e is AddAction => {\n  return e.type === 'dev-console.add/action';\n};\n\nexport const isAddActionGroup = (e: Extension): e is AddActionGroup => {\n  return e.type === 'dev-console.add/action-group';\n};\n","import * as React from 'react';\nimport { ExtensionHook } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type CatalogItemType = ExtensionDeclaration<\n  'console.catalog/item-type',\n  {\n    /** Type for the catalog item. */\n    type: string;\n    /** Title for the catalog item. */\n    title: string;\n    /** Description for the type specific catalog. */\n    catalogDescription?: string;\n    /** Description for the catalog item type. */\n    typeDescription?: string;\n    /** Custom filters specific to the catalog item.  */\n    filters?: CatalogItemAttribute[];\n    /** Custom groupings specific to the catalog item. */\n    groupings?: CatalogItemAttribute[];\n  }\n>;\n\nexport type CatalogItemProvider = ExtensionDeclaration<\n  'console.catalog/item-provider',\n  {\n    /** The unique identifier for the catalog this provider contributes to. */\n    catalogId: string | string[];\n    /** Type ID for the catalog item type. */\n    type: string;\n    /** Fetch items and normalize it for the catalog. Value is a react effect hook. */\n    provider: CodeRef<ExtensionHook<CatalogItem[], CatalogExtensionHookOptions>>;\n    /** Priority for this provider. Defaults to 0. Higher priority providers may override catalog\n        items provided by other providers. */\n    priority?: number;\n  }\n>;\n\nexport type CatalogItemFilter = ExtensionDeclaration<\n  'console.catalog/item-filter',\n  {\n    /** The unique identifier for the catalog this provider contributes to. */\n    catalogId: string | string[];\n    /** Type ID for the catalog item type. */\n    type: string;\n    /** Filters items of a specific type. Value is a function that takes CatalogItem[] and returns a subset based on the filter criteria. */\n    filter: CodeRef<(item: CatalogItem) => boolean>;\n  }\n>;\n\nexport type SupportedCatalogExtensions = CatalogItemType | CatalogItemProvider | CatalogItemFilter;\n\n// Type guards\n\nexport const isCatalogItemType = (e: Extension): e is CatalogItemType => {\n  return e.type === 'console.catalog/item-type';\n};\n\nexport const isCatalogItemProvider = (e: Extension): e is CatalogItemProvider => {\n  return e.type === 'console.catalog/item-provider';\n};\n\nexport const isCatalogItemFilter = (e: Extension): e is CatalogItemFilter => {\n  return e.type === 'console.catalog/item-filter';\n};\n\n// Support types\n\nexport type CatalogExtensionHookOptions = {\n  namespace: string;\n};\n\nexport type CatalogItem<T extends any = any> = {\n  uid: string;\n  type: string;\n  name: string;\n  /** Optional title to render a custom title using ReactNode.\n   * Rendered in catalog tile and side panel\n   *  */\n  title?: React.ReactNode;\n  // Used as the second label next to the provider label in the list result.\n  secondaryLabel?: React.ReactNode;\n  provider?: string;\n  // Used as the tile description. If provided as a string, the description is truncated to 3 lines.\n  // If provided as a ReactNode, the contents will not be truncated.\n  // This description will also be shown in the side panel if there are no `details.descriptions`.\n  description?: string | React.ReactNode;\n  tags?: string[];\n  creationTimestamp?: string;\n  supportUrl?: string;\n  documentationUrl?: string;\n  attributes?: {\n    [key: string]: any;\n  };\n  cta?: {\n    label: string;\n    href?: string;\n    callback?: (props?: any) => void;\n  };\n  icon?: {\n    url?: string;\n    class?: string;\n    node?: React.ReactNode;\n  };\n  details?: {\n    properties?: CatalogItemDetailsProperty[];\n    descriptions?: CatalogItemDetailsDescription[];\n  };\n  // Optional text only badges for the catalog item which will be rendered on the tile and details panel.\n  badges?: CatalogItemBadge[];\n  // Optional data attached by the provider.\n  // May be consumed by filters.\n  // `data` for each `type` of CatalogItem should implement the same interface.\n  data?: T;\n};\n\nexport type CatalogItemDetailsProperty = {\n  label: string;\n  value: string | React.ReactNode;\n};\n\nexport type CatalogItemDetailsDescription = {\n  label?: string;\n  value: string | React.ReactNode;\n};\n\nexport type CatalogItemAttribute = {\n  label: string;\n  attribute: string;\n};\n\nexport type CatalogItemBadge = {\n  text: string;\n  color?: 'blue' | 'cyan' | 'green' | 'orange' | 'purple' | 'red' | 'grey';\n  icon?: React.ReactNode;\n  variant?: 'outline' | 'filled';\n};\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration } from '../types';\n\nexport type ClusterGlobalConfig = ExtensionDeclaration<\n  'console.global-config',\n  {\n    /** Unique identifier for the cluster config resource instance. */\n    id: string;\n    /** The name of the cluster config resource instance. */\n    name: string;\n    /** The model which refers to a cluster config resource. */\n    model: ExtensionK8sModel;\n    /** The namespace of the cluster config resource instance. */\n    namespace: string;\n  }\n>;\n\n// Type guards\n\nexport const isClusterGlobalConfig = (e: Extension): e is ClusterGlobalConfig =>\n  e.type === 'console.global-config';\n","import { Provider } from 'react';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** Adds new React context provider to Console application root. */\nexport type ContextProvider<T = any> = ExtensionDeclaration<\n  'console.context-provider',\n  {\n    /** Context Provider component. */\n    provider: CodeRef<Provider<T>>;\n    /** Hook for the Context value. */\n    useValueHook: CodeRef<() => T>;\n  }\n>;\n\n// Type guards\n\nexport const isContextProvider = (e: Extension): e is ContextProvider =>\n  e.type === 'console.context-provider';\n","import { K8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef, ResolvedExtension } from '../types';\nimport {\n  K8sResourceCommon,\n  PrometheusResponse,\n  ResourcesObject,\n  StatusGroupMapper,\n  WatchK8sResources,\n  WatchK8sResults,\n  FirehoseResource,\n  FirehoseResult,\n} from './console-types';\nimport {\n  DashboardCardSpan,\n  GetOperatorsWithStatuses,\n  K8sActivityProps,\n  OperatorRowProps,\n  PrometheusActivityProps,\n  PrometheusHealthHandler,\n  PrometheusHealthPopupProps,\n  ResourceHealthHandler,\n  URLHealthHandler,\n} from './dashboard-types';\n\n/** Adds a new dashboard tab, placed after the Overview tab. */\nexport type DashboardsTab = ExtensionDeclaration<\n  'console.dashboards/tab',\n  {\n    /** A unique tab identifier, used as tab link `href` and when adding cards to this tab. */\n    id: string;\n    /** NavSection to which the tab belongs to */\n    navSection: 'home' | 'storage';\n    /** The title of the tab. */\n    title: string;\n  }\n>;\n\n/** Adds a new dashboard card. */\nexport type DashboardsCard = ExtensionDeclaration<\n  'console.dashboards/card',\n  {\n    /** The id of the dashboard tab to which the card will be added. */\n    tab: string;\n    /** The grid position of the card on the dashboard. */\n    position: 'LEFT' | 'RIGHT' | 'MAIN';\n    /** Dashboard card component. */\n    component: CodeRef<React.ComponentType>;\n    /** Card's vertical span in the column. Ignored for small screens, defaults to 12. */\n    span?: DashboardCardSpan;\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is Prometheus. */\nexport type DashboardsOverviewHealthPrometheusSubsystem = ExtensionDeclaration<\n  'console.dashboards/overview/health/prometheus',\n  {\n    /** The display name of the subsystem. */\n    title: string;\n    /** The Prometheus queries */\n    queries: string[];\n    /** Resolve the subsystem's health. */\n    healthHandler: CodeRef<PrometheusHealthHandler>;\n    /** Additional resource which will be fetched and passed to `healthHandler`. */\n    additionalResource?: CodeRef<FirehoseResource>;\n    /** Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content. */\n    popupComponent?: CodeRef<React.ComponentType<PrometheusHealthPopupProps>>;\n    /** The title of the popover. */\n    popupTitle?: string;\n    /** Cloud providers which for which the subsystem should be hidden. */\n    disallowedProviders?: string[];\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API. */\nexport type DashboardsOverviewHealthURLSubsystem<\n  T = any,\n  R extends K8sResourceCommon | K8sResourceCommon[] = K8sResourceCommon | K8sResourceCommon[]\n> = ExtensionDeclaration<\n  'console.dashboards/overview/health/url',\n  {\n    /** The display name of the subsystem. */\n    title: string;\n    /** The URL to fetch data from. It will be prefixed with base k8s URL. */\n    url: string;\n    /** Resolve the subsystem's health. */\n    healthHandler: CodeRef<URLHealthHandler<T>>;\n    /** Additional resource which will be fetched and passed to `healthHandler`. */\n    additionalResource?: CodeRef<FirehoseResource>;\n    /** Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content. */\n    popupComponent?: CodeRef<\n      React.ComponentType<{\n        healthResult?: T;\n        healthResultError?: any;\n        k8sResult?: FirehoseResult<R>;\n      }>\n    >;\n    /** The title of the popover. */\n    popupTitle?: string;\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s Resource. */\nexport type DashboardsOverviewHealthResourceSubsystem<\n  T extends ResourcesObject = ResourcesObject\n> = ExtensionDeclaration<\n  'console.dashboards/overview/health/resource',\n  {\n    /** The display name of the subsystem. */\n    title: string;\n    /** Kubernetes resources which will be fetched and passed to `healthHandler`. */\n    resources: CodeRef<WatchK8sResources<T>>;\n    /** Resolve the subsystem's health. */\n    healthHandler: CodeRef<ResourceHealthHandler<T>>;\n    /** Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content. */\n    popupComponent?: CodeRef<WatchK8sResults<T>>;\n    /** The title of the popover. */\n    popupTitle?: string;\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API. */\nexport type DashboardsOverviewHealthOperator<\n  T extends K8sResourceCommon = K8sResourceCommon\n> = ExtensionDeclaration<\n  'console.dashboards/overview/health/operator',\n  {\n    /** Title of operators section in the popup. */\n    title: string;\n    /** Kubernetes resources which will be fetched and passed to `healthHandler`. */\n    resources: CodeRef<FirehoseResource[]>;\n    /** Resolves status for the operators. */\n    getOperatorsWithStatuses?: CodeRef<GetOperatorsWithStatuses<T>>;\n    /** Loader for popup row component. */\n    operatorRowLoader?: CodeRef<React.ComponentType<OperatorRowProps<T>>>;\n    /** Links to all resources page. If not provided then a list page of the first resource from resources prop is used. */\n    viewAllLink?: string;\n  }\n>;\n\n/** Adds an inventory status group. */\nexport type DashboardsInventoryItemGroup = ExtensionDeclaration<\n  'console.dashboards/overview/inventory/item/group',\n  {\n    /** The id of the status group. */\n    id: string;\n    /** React component representing the status group icon. */\n    icon: CodeRef<React.ReactElement>;\n  }\n>;\n\n/** Adds a resource tile to the overview inventory card. */\nexport type DashboardsOverviewInventoryItem<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = ExtensionDeclaration<\n  'console.dashboards/overview/inventory/item',\n  DashboardsOverviewInventoryItemProperties<T, R> & {}\n>;\n\n/** Replaces an overview inventory card. */\nexport type DashboardsOverviewInventoryItemReplacement<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = ExtensionDeclaration<\n  'console.dashboards/overview/inventory/item/replacement',\n  DashboardsOverviewInventoryItemProperties<T, R> & {}\n>;\n\n/** Adds a resource tile to the project overview inventory card. */\nexport type ProjectDashboardInventoryItem<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = ExtensionDeclaration<\n  'console.dashboards/project/overview/item',\n  DashboardsOverviewInventoryItemProperties<T, R> & {}\n>;\n\n/** Adds an activity to the Activity Card of Overview Dashboard where the triggering of activity is based on watching a K8s resource. */\nexport type DashboardsOverviewResourceActivity<\n  T extends K8sResourceCommon = K8sResourceCommon\n> = ExtensionDeclaration<\n  'console.dashboards/overview/activity/resource',\n  {\n    /** The utilization item to be replaced. */\n    k8sResource: CodeRef<FirehoseResource & { isList: true }>;\n    /** Function which determines if the given resource represents the action. If not defined, every resource represents activity. */\n    isActivity?: CodeRef<(resource: T) => boolean>;\n    /** Timestamp for the given action, which will be used for ordering. */\n    getTimestamp?: CodeRef<(resource: T) => Date>;\n    /** The action component. */\n    component: CodeRef<React.ComponentType<K8sActivityProps<T>>>;\n  }\n>;\n\n/** Adds an activity to the Activity Card of Prometheus Overview Dashboard where the triggering of activity is based on watching a K8s resource. */\nexport type DashboardsOverviewPrometheusActivity = ExtensionDeclaration<\n  'console.dashboards/overview/prometheus/activity/resource',\n  {\n    /** Queries to watch */\n    queries: string[];\n    /** Function which determines if the given resource represents the action. If not defined, every resource represents activity. */\n    isActivity?: CodeRef<(results: PrometheusResponse[]) => boolean>;\n    /** The action component. */\n    component: CodeRef<React.ComponentType<PrometheusActivityProps>>;\n  }\n>;\n\n// Type guards\n\nexport const isDashboardsTab = (e: Extension): e is DashboardsTab =>\n  e.type === 'console.dashboards/tab';\n\nexport const isDashboardsCard = (e: Extension): e is DashboardsCard =>\n  e.type === 'console.dashboards/card';\n\nexport const isDashboardsOverviewHealthPrometheusSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthPrometheusSubsystem =>\n  e.type === 'console.dashboards/overview/health/prometheus';\n\nexport const isResolvedDashboardsOverviewHealthPrometheusSubsystem = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthPrometheusSubsystem> =>\n  e.type === 'console.dashboards/overview/health/prometheus';\n\nexport const isDashboardsOverviewHealthURLSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthURLSubsystem => e.type === 'console.dashboards/overview/health/url';\n\nexport const isResolvedDashboardsOverviewHealthURLSubsystem = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthURLSubsystem> =>\n  e.type === 'console.dashboards/overview/health/url';\n\nexport const isDashboardsOverviewHealthResourceSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthResourceSubsystem =>\n  e.type === 'console.dashboards/overview/health/resource';\n\nexport const isResolvedDashboardsOverviewHealthResourceSubsystem = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthResourceSubsystem> =>\n  e.type === 'console.dashboards/overview/health/resource';\n\nexport const isDashboardsOverviewHealthOperator = (\n  e: Extension,\n): e is DashboardsOverviewHealthOperator =>\n  e.type === 'console.dashboards/overview/health/operator';\n\nexport const isResolvedDashboardsOverviewHealthOperator = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthOperator> =>\n  e.type === 'console.dashboards/overview/health/operator';\n\nexport const isDashboardsInventoryItemGroup = (e: Extension): e is DashboardsInventoryItemGroup =>\n  e.type === 'console.dashboards/overview/inventory/item/group';\n\nexport const isDashboardsOverviewInventoryItem = (\n  e: Extension,\n): e is DashboardsOverviewInventoryItem => e.type === 'console.dashboards/overview/inventory/item';\n\nexport const isDashboardsOverviewInventoryItemReplacement = (\n  e: Extension,\n): e is DashboardsOverviewInventoryItemReplacement =>\n  e.type === 'console.dashboards/overview/inventory/item/replacement';\n\nexport const isProjectDashboardInventoryItem = (e: Extension): e is ProjectDashboardInventoryItem =>\n  e.type === 'console.dashboards/project/overview/item';\n\nexport const isDashboardsOverviewResourceActivity = (\n  e: Extension,\n): e is DashboardsOverviewResourceActivity =>\n  e.type === 'console.dashboards/overview/activity/resource';\n\nexport const isDashboardsOverviewPrometheusActivity = (\n  e: Extension,\n): e is DashboardsOverviewPrometheusActivity =>\n  e.type === 'console.dashboards/overview/prometheus/activity/resource';\n\nexport type DashboardsOverviewHealthSubsystem =\n  | DashboardsOverviewHealthURLSubsystem\n  | DashboardsOverviewHealthPrometheusSubsystem\n  | DashboardsOverviewHealthResourceSubsystem\n  | DashboardsOverviewHealthOperator;\n\nexport const isDashboardsOverviewHealthSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthSubsystem =>\n  isDashboardsOverviewHealthURLSubsystem(e) ||\n  isDashboardsOverviewHealthPrometheusSubsystem(e) ||\n  isDashboardsOverviewHealthResourceSubsystem(e) ||\n  isDashboardsOverviewHealthOperator(e);\n\ntype DashboardsOverviewInventoryItemProperties<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = {\n  /** The model for `resource` which will be fetched. Used to get the model's `label` or `abbr`. */\n  model: CodeRef<T>;\n  /** Function which maps various statuses to groups. */\n  mapper?: CodeRef<StatusGroupMapper<T, R>>;\n  /** Additional resources which will be fetched and passed to the `mapper` function. */\n  additionalResources?: CodeRef<WatchK8sResources<R>>;\n};\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** Gives full control over Console feature flags. */\nexport type FeatureFlag = ExtensionDeclaration<\n  'console.flag',\n  {\n    /** Used to set/unset arbitrary feature flags. */\n    handler: CodeRef<(callback: SetFeatureFlag) => void>;\n  }\n>;\n\n/** Adds new Console feature flag driven by the presence of a CRD on the cluster. */\nexport type ModelFeatureFlag = ExtensionDeclaration<\n  'console.flag/model',\n  {\n    /** The name of the flag to set once the CRD is detected. */\n    flag: string;\n    /** The model which refers to a `CustomResourceDefinition`. */\n    model: ExtensionK8sModel;\n  }\n>;\n\n// Type guards\n\nexport const isFeatureFlag = (e: Extension): e is FeatureFlag => e.type === 'console.flag';\n\nexport const isModelFeatureFlag = (e: Extension): e is ModelFeatureFlag =>\n  e.type === 'console.flag/model';\n\n// Support types\n\nexport type SetFeatureFlag = (flag: string, enabled: boolean) => void;\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type FileUpload = ExtensionDeclaration<\n  'console.file-upload',\n  {\n    /** Supported file extensions. */\n    fileExtensions: string[];\n    /** Function which handles the file drop action. */\n    handler: CodeRef<FileUploadHandler>;\n  }\n>;\n\n// Type guards\n\nexport const isFileUpload = (e: Extension): e is FileUpload => e.type === 'console.file-upload';\n\n// Support types\n\nexport type FileUploadHandler = (file: File, namespace: string) => void;\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration } from '../types';\n\ntype NavItemProperties = {\n  /** A unique identifier for this item. */\n  id: string;\n  /** The perspective ID to which this item belongs to. If not specified, contributes to the default perspective. */\n  perspective?: string;\n  /** Navigation section to which this item belongs to. If not specified, render this item as a top level link. */\n  section?: string;\n  /** Adds data attributes to the DOM. */\n  dataAttributes?: { [key: string]: string };\n  /** Mark this item as active when the URL starts with one of these paths. */\n  startsWith?: string[];\n  /** Insert this item before the item referenced here. For arrays, the first one found in order is used. */\n  insertBefore?: string | string[];\n  /** Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence. */\n  insertAfter?: string | string[];\n};\n\nexport type NavItem = ExtensionDeclaration<\n  'console.navigation/href',\n  NavItemProperties & {\n    name: string;\n  }\n>;\n\nexport type HrefNavItem = ExtensionDeclaration<\n  'console.navigation/href',\n  NavItemProperties & {\n    /** The name of this item. */\n    name: string;\n    /** The link href value. */\n    href: string;\n    /** if true, adds /ns/active-namespace to the end */\n    namespaced?: boolean;\n    /** if true, adds /k8s/ns/active-namespace to the begining */\n    prefixNamespaced?: boolean;\n  }\n>;\n\nexport type ResourceNSNavItem = ExtensionDeclaration<\n  'console.navigation/resource-ns',\n  NavItemProperties & {\n    /** Overrides the default name. If not supplied the name of the link will equal the plural value of the model. */\n    name?: string;\n    /** The model for which this nav item links to. */\n    model: ExtensionK8sModel;\n  }\n>;\n\nexport type ResourceClusterNavItem = ExtensionDeclaration<\n  'console.navigation/resource-cluster',\n  NavItemProperties & {\n    /** Overrides the default name. If not supplied the name of the link will equal the plural value of the model. */\n    name?: string;\n    /** The model for which this nav item links to. */\n    model: ExtensionK8sModel;\n  }\n>;\n\nexport type Separator = ExtensionDeclaration<\n  'console.navigation/separator',\n  Omit<NavItemProperties, 'startsWith'>\n>;\n\nexport type NavSection = ExtensionDeclaration<\n  'console.navigation/section',\n  Omit<NavItemProperties, 'startsWith' | 'section'> & {\n    /** Name of this section. If not supplied, only a separator will be shown above the section. */\n    name?: string;\n  }\n>;\n\n// Type guards\n\nexport const isHrefNavItem = (e: Extension): e is HrefNavItem =>\n  e.type === 'console.navigation/href';\n\nexport const isResourceNSNavItem = (e: Extension): e is ResourceNSNavItem =>\n  e.type === 'console.navigation/resource-ns';\n\nexport const isResourceClusterNavItem = (e: Extension): e is ResourceClusterNavItem =>\n  e.type === 'console.navigation/resource-cluster';\n\nexport const isSeparator = (e: Extension): e is Separator =>\n  e.type === 'console.navigation/separator';\n\nexport const isNavSection = (e: Extension): e is NavSection =>\n  e.type === 'console.navigation/section';\n\nexport const isNavItem = (e: Extension): e is NavItem => {\n  return isHrefNavItem(e) || isResourceNSNavItem(e) || isResourceClusterNavItem(e);\n};\n","import { RouteComponentProps } from 'react-router';\nimport { ExtensionK8sGroupKindModel, ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\ntype ResourcePageProperties = {\n  /** The model for which this resource page links to. */\n  model: ExtensionK8sGroupKindModel;\n  /** The component to be rendered when the route matches. */\n  component: CodeRef<\n    React.ComponentType<{\n      match: RouteComponentProps['match'];\n      /** The namespace for which this resource page links to. */\n      namespace: string;\n      /** The model for which this resource page links to. */\n      model: ExtensionK8sModel;\n    }>\n  >;\n};\n\ntype RoutePageProperties = {\n  /** The perspective to which this page belongs to. If not specified, contributes to all perspectives. */\n  perspective?: string;\n  /** The component to be rendered when the route matches. */\n  component: CodeRef<React.ComponentType<RouteComponentProps>>;\n  /** Valid URL path or array of paths that `path-to-regexp@^1.7.0` understands. */\n  path: string | string[];\n  /** When true, will only match if the path matches the `location.pathname` exactly. */\n  exact?: boolean;\n  /** Option to add custom className to wrapper component */\n  className?: string;\n};\n\n/** Adds new page to Console router. */\nexport type RoutePage = ExtensionDeclaration<'console.page/route', RoutePageProperties>;\n\n/** Adds new resource list page to Console router. */\nexport type ResourceListPage = ExtensionDeclaration<\n  'console.page/resource/list',\n  ResourcePageProperties & {}\n>;\n\n/** Adds new resource details page to Console router. */\nexport type ResourceDetailsPage = ExtensionDeclaration<\n  'console.page/resource/details',\n  ResourcePageProperties & {}\n>;\n\n/** Adds new resource tab page to Console router. */\nexport type ResourceTabPage = ExtensionDeclaration<\n  'console.page/resource/tab',\n  Omit<ResourcePageProperties, 'component'> & {\n    /** The component to be rendered when the route matches. */\n    component: CodeRef<React.ComponentType<RouteComponentProps>>;\n    /** The name of the tab. */\n    name: string;\n    /** The optional href for the tab link. If not provided, the first `path` is used. */\n    href?: string;\n    /** When true, will only match if the path matches the `location.pathname` exactly. */\n    exact?: boolean;\n  }\n>;\n\n/** Adds new standalone page (rendered outside the common page layout) to Console router. */\nexport type StandaloneRoutePage = ExtensionDeclaration<\n  'console.page/route/standalone',\n  Omit<RoutePageProperties, 'perspective'>\n>;\n\n// Type guards\n\nexport const isRoutePage = (e: Extension): e is RoutePage => e.type === 'console.page/route';\n\nexport const isStandaloneRoutePage = (e: Extension): e is StandaloneRoutePage =>\n  e.type === 'console.page/route/standalone';\n\nexport const isResourceListPage = (e: Extension): e is ResourceListPage =>\n  e.type === 'console.page/resource/list';\n\nexport const isResourceDetailsPage = (e: Extension): e is ResourceDetailsPage =>\n  e.type === 'console.page/resource/details';\n\nexport const isResourceTabPage = (e: Extension): e is ResourceTabPage =>\n  e.type === 'console.page/resource/tab';\n","import * as React from 'react';\nimport { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n// Align type with React.lazy\ntype LazyComponent = { default: React.ComponentType };\n\nexport type Perspective = ExtensionDeclaration<\n  'console.perspective',\n  {\n    /** The perspective identifier. */\n    id: string;\n    /** The perspective display name. */\n    name: string;\n    /** The perspective display icon. */\n    icon: CodeRef<LazyComponent>;\n    /** Whether the perspective is the default. There can only be one default. */\n    default?: boolean;\n    /** Default pinned resources on the nav */\n    defaultPins?: ExtensionK8sModel[];\n    /** The function to get perspective landing page URL. */\n    landingPageURL: CodeRef<(flags: { [key: string]: boolean }, isFirstVisit: boolean) => string>;\n    /** The function to get redirect URL for import flow. */\n    importRedirectURL: CodeRef<(namespace: string) => string>;\n    /** The hook to detect default perspective */\n    usePerspectiveDetection?: CodeRef<() => [boolean, boolean]>; // [enablePerspective: boolean, loading: boolean]\n  }\n>;\n\nexport const isPerspective = (e: Extension): e is Perspective => {\n  return e.type === 'console.perspective';\n};\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { K8sResourceCommon } from './console-types';\n\nexport type PVCCreateProp = ExtensionDeclaration<\n  'console.pvc/create-prop',\n  {\n    /** Label for the create prop action. */\n    label: string;\n    /** Path for the create prop action. */\n    path: string;\n  }\n>;\n\nexport type PVCAlert = ExtensionDeclaration<\n  'console.pvc/alert',\n  {\n    /** The alert component. */\n    alert: CodeRef<React.ComponentType<{ pvc: K8sResourceCommon }>>;\n  }\n>;\n\nexport type PVCStatus = ExtensionDeclaration<\n  'console.pvc/status',\n  {\n    /** Priority for the status component. Bigger value means higher priority. */\n    priority: number;\n    /** The status component. */\n    status: CodeRef<React.ComponentType<{ pvc: K8sResourceCommon }>>;\n    /** Predicate that tells whether to render the status component or not. */\n    predicate: CodeRef<(pvc: K8sResourceCommon) => boolean>;\n  }\n>;\n\nexport type PVCDelete = ExtensionDeclaration<\n  'console.pvc/delete',\n  {\n    /** Predicate that tells whether to use the extension or not. */\n    predicate: CodeRef<(pvc: K8sResourceCommon) => boolean>;\n    /** Method for the PVC delete operation. */\n    onPVCKill: CodeRef<(pvc: K8sResourceCommon) => Promise<void>>;\n    /** Alert component to show additional information. */\n    alert: CodeRef<React.ComponentType<{ pvc: K8sResourceCommon }>>;\n  }\n>;\n\n// Type guards\n\nexport const isPVCCreateProp = (e: Extension): e is PVCCreateProp =>\n  e.type === 'console.pvc/create-prop';\n\nexport const isPVCAlert = (e: Extension): e is PVCAlert => e.type === 'console.pvc/alert';\n\nexport const isPVCStatus = (e: Extension): e is PVCStatus => e.type === 'console.pvc/status';\n\nexport const isPVCDelete = (e: Extension): e is PVCDelete => e.type === 'console.pvc/delete';\n","import { Reducer } from 'redux';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** Adds new reducer to Console Redux store which operates on `plugins.<scope>` substate. */\nexport type ReduxReducer = ExtensionDeclaration<\n  'console.redux-reducer',\n  {\n    /** The key to represent the reducer-managed substate within the Redux state object. */\n    scope: string;\n    /** The reducer function, operating on the reducer-managed substate. */\n    reducer: CodeRef<Reducer>;\n  }\n>;\n\n// Type guards\n\nexport const isReduxReducer = (e: Extension): e is ReduxReducer =>\n  e.type === 'console.redux-reducer';\n","import { ExtensionK8sGroupModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration } from '../types';\n\n/** Customize the display of models by overriding values retrieved and generated through API discovery. */\nexport type ModelMetadata = ExtensionDeclaration<\n  'console.resource-metadata',\n  {\n    /** The model to customize. May specify only a group, or optional version and kind. */\n    model: ExtensionK8sGroupModel;\n    /** Whether to consider this model reference as tech preview or dev preview. */\n    badge?: 'tech' | 'dev';\n    /** The color to associate to this model. */\n    color?: string;\n    /** Override the label. Requires `kind` be provided. */\n    label?: string;\n    /** Override the plural label. Requires `kind` be provided. */\n    labelPlural?: string;\n    /** Customize the abbreviation. Defaults to All uppercase chars in the kind up to 4 characters long. Requires `kind` be provided. */\n    abbr?: string;\n  }\n>;\n\n// Type guards\n\nexport const isModelMetadata = (e: Extension): e is ModelMetadata =>\n  e.type === 'console.resource-metadata';\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type TelemetryListener = ExtensionDeclaration<\n  'console.telemetry/listener',\n  {\n    /** Listen for telemetry events */\n    listener: CodeRef<TelemetryEventListener>;\n  }\n>;\n\n// P should be valid JSON\nexport type TelemetryEventListener = <P = any>(eventType: string, properties?: P) => void;\n\n// Type guards\n\nexport const isTelemetryListener = (e: Extension): e is TelemetryListener => {\n  return e.type === 'console.telemetry/listener';\n};\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** YAML templates for editing resources via the yaml editor. */\nexport type YAMLTemplate = ExtensionDeclaration<\n  'console.yaml-template',\n  {\n    /** Model associated with the template. */\n    model: ExtensionK8sModel;\n    /** The YAML template. */\n    template: CodeRef<string>;\n    /** The name of the template. Use the name `default` to mark this as the default template. */\n    name: string | 'default';\n  }\n>;\n\n// Type guards\n\nexport const isYAMLTemplate = (e: Extension): e is YAMLTemplate =>\n  e.type === 'console.yaml-template';\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type AlertAction = ExtensionDeclaration<\n  'console.alert-action',\n  {\n    /* Alert name as defined by `alert.rule.name` property */\n    alert: string;\n    /* Action text */\n    text: string;\n    /* Function to perform side effect */\n    action: CodeRef<(alert) => void>;\n  }\n>;\n\nexport const isAlertAction = (e: Extension): e is AlertAction => e.type === 'console.alert-action';\n","import { ButtonProps } from '@patternfly/react-core';\nimport { TableGridBreakpoint, OnSelect, SortByDirection, ICell } from '@patternfly/react-table';\nimport { RouteComponentProps } from 'react-router';\nimport {\n  ExtensionK8sGroupKindModel,\n  K8sModel,\n  PrometheusLabels,\n  PrometheusValue,\n  ResolvedExtension,\n  Selector,\n} from '../api/common-types';\nimport { Extension, ExtensionTypeGuard } from '../types';\n\nexport type OwnerReference = {\n  name: string;\n  kind: string;\n  uid: string;\n  apiVersion: string;\n  controller?: boolean;\n  blockOwnerDeletion?: boolean;\n};\n\nexport type ObjectReference = {\n  kind?: string;\n  namespace?: string;\n  name?: string;\n  uid?: string;\n  apiVersion?: string;\n  resourceVersion?: string;\n  fieldPath?: string;\n};\n\nexport type ObjectMetadata = {\n  annotations?: { [key: string]: string };\n  clusterName?: string;\n  creationTimestamp?: string;\n  deletionGracePeriodSeconds?: number;\n  deletionTimestamp?: string;\n  finalizers?: string[];\n  generateName?: string;\n  generation?: number;\n  labels?: { [key: string]: string };\n  managedFields?: any[];\n  name?: string;\n  namespace?: string;\n  ownerReferences?: OwnerReference[];\n  resourceVersion?: string;\n  uid?: string;\n};\n\n// Properties common to (almost) all Kubernetes resources.\nexport type K8sResourceCommon = {\n  apiVersion?: string;\n  kind?: string;\n  metadata?: ObjectMetadata;\n};\n\nexport type K8sVerb =\n  | 'create'\n  | 'get'\n  | 'list'\n  | 'update'\n  | 'patch'\n  | 'delete'\n  | 'deletecollection'\n  | 'watch';\n\nexport type AccessReviewResourceAttributes = {\n  group?: string;\n  resource?: string;\n  subresource?: string;\n  verb?: K8sVerb;\n  name?: string;\n  namespace?: string;\n};\n\n/**\n * @deprecated Use K8sGroupVersionKind type instead. Support for type K8sResourceKindReference will be removed in a future release.\n * @see K8sGroupVersionKind\n * GroupVersionKind unambiguously identifies a kind.\n * https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupVersionKind\n * TODO: Change this to a regex-type if it ever becomes a thing (https://github.com/Microsoft/TypeScript/issues/6579)\n */\nexport type GroupVersionKind = string;\n\n/**\n * The canonical, unique identifier for a Kubernetes resource type.\n * Maintains backwards-compatibility with references using the `kind` string field.\n */\nexport type K8sResourceKindReference = GroupVersionKind | string;\n\nexport type K8sGroupVersionKind = { group?: string; version: string; kind: string };\n\nenum InventoryStatusGroup {\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  PROGRESS = 'PROGRESS',\n  NOT_MAPPED = 'NOT_MAPPED',\n  UNKNOWN = 'UNKNOWN',\n}\n\ntype StatusGroup = {\n  [key in InventoryStatusGroup | string]: {\n    filterType?: string;\n    statusIDs: string[];\n    count: number;\n  };\n};\n\nexport type StatusGroupMapper<\n  T extends K8sResourceCommon = K8sResourceCommon,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = (resources: T[], additionalResources?: R) => StatusGroup;\n\nexport enum HealthState {\n  OK = 'OK',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  LOADING = 'LOADING',\n  UNKNOWN = 'UNKNOWN',\n  UPDATING = 'UPDATING',\n  PROGRESS = 'PROGRESS',\n  UPGRADABLE = 'UPGRADABLE',\n  NOT_AVAILABLE = 'NOT_AVAILABLE',\n}\n\n// Only covers range and instant vector responses for now.\nexport type PrometheusResult = {\n  metric: PrometheusLabels;\n  values?: PrometheusValue[];\n  value?: PrometheusValue;\n};\n\nexport type PrometheusData = {\n  resultType: 'matrix' | 'vector' | 'scalar' | 'string';\n  result: PrometheusResult[];\n};\n\nexport type PrometheusResponse = {\n  status: string;\n  data: PrometheusData;\n  errorType?: string;\n  error?: string;\n  warnings?: string[];\n};\n\nexport type WatchK8sResource = {\n  /** @deprecated Use groupVersionKind instead. The kind property will be removed in a future release. */\n  kind?: K8sResourceKindReference;\n  groupVersionKind?: K8sGroupVersionKind;\n  name?: string;\n  namespace?: string;\n  isList?: boolean;\n  selector?: Selector;\n  namespaced?: boolean;\n  limit?: number;\n  fieldSelector?: string;\n  optional?: boolean;\n};\n\nexport type ResourcesObject = { [key: string]: K8sResourceCommon | K8sResourceCommon[] };\n\nexport type WatchK8sResultsObject<R extends K8sResourceCommon | K8sResourceCommon[]> = {\n  data: R;\n  loaded: boolean;\n  loadError: any;\n};\n\nexport type WatchK8sResults<R extends ResourcesObject> = {\n  [k in keyof R]: WatchK8sResultsObject<R[k]>;\n};\n\nexport type WatchK8sResources<R extends ResourcesObject> = {\n  [k in keyof R]: WatchK8sResource;\n};\n\nexport type WatchK8sResourcesGeneric = {\n  [key: string]: {\n    model?: ExtensionK8sGroupKindModel;\n    opts?: Partial<WatchK8sResource>;\n  };\n};\n\nexport type FirehoseResource = {\n  kind: K8sResourceKindReference;\n  name?: string;\n  namespace?: string;\n  isList?: boolean;\n  selector?: Selector;\n  prop: string;\n  namespaced?: boolean;\n  optional?: boolean;\n  limit?: number;\n  fieldSelector?: string;\n};\n\nexport type FirehoseResult<\n  R extends K8sResourceCommon | K8sResourceCommon[] = K8sResourceCommon[]\n> = {\n  loaded: boolean;\n  loadError: string;\n  optional?: boolean;\n  data: R;\n  kind?: string;\n};\n\nexport type FirehoseResourcesResult = {\n  [key: string]: FirehoseResult<K8sResourceCommon | K8sResourceCommon[]>;\n};\n\nexport type WatchK8sResult<R extends K8sResourceCommon | K8sResourceCommon[]> = [R, boolean, any];\n\nexport type UseK8sWatchResource = <R extends K8sResourceCommon | K8sResourceCommon[]>(\n  initResource: WatchK8sResource | null,\n) => WatchK8sResult<R>;\n\nexport type UseK8sWatchResources = <R extends ResourcesObject>(\n  initResources: WatchK8sResources<R>,\n) => WatchK8sResults<R>;\n\nexport type UseResolvedExtensions = <E extends Extension>(\n  ...typeGuards: ExtensionTypeGuard<E>[]\n) => [ResolvedExtension<E>[], boolean, any[]];\n\nexport type ConsoleFetch = (\n  url: string,\n  options?: RequestInit,\n  timeout?: number,\n) => Promise<Response>;\n\nexport type ConsoleFetchJSON<T = any> = {\n  (url: string, method?: string, options?: RequestInit, timeout?: number): Promise<T>;\n  delete(url: string, json?: any, options?: RequestInit, timeout?: number): Promise<T>;\n  post(url: string, json: any, options?: RequestInit, timeout?: number): Promise<T>;\n  put(url: string, json: any, options?: RequestInit, timeout?: number): Promise<T>;\n  patch(url: string, json: any, options?: RequestInit, timeout?: number): Promise<T>;\n};\n\nexport type ConsoleFetchText = (...args: Parameters<ConsoleFetch>) => Promise<string>;\n\n/* Horizontal Nav Types */\nexport type NavPage = {\n  href?: string;\n  path?: string;\n  name: string;\n  component: React.ComponentType<RouteComponentProps>;\n};\n\nexport type HorizontalNavProps = {\n  resource?: K8sResourceCommon;\n  pages: NavPage[];\n};\n\nexport type TableColumn<D> = ICell & {\n  title: string;\n  id: string;\n  additional?: boolean;\n  sort?: ((data: D[], sortDirection: SortByDirection) => D[]) | string;\n};\n\nexport type RowProps<D, R extends any = {}> = {\n  obj: D;\n  rowData: R;\n  activeColumnIDs: Set<string>;\n};\n\ntype VirtualizedTableProps<D, R extends any = {}> = {\n  data: D[];\n  unfilteredData: D[];\n  loaded: boolean;\n  loadError: any;\n  columns: TableColumn<D>[];\n  Row: React.ComponentType<RowProps<D, R>>;\n  NoDataEmptyMsg?: React.ComponentType<{}>;\n  EmptyMsg?: React.ComponentType<{}>;\n  scrollNode?: () => HTMLElement;\n  onSelect?: OnSelect;\n  label?: string;\n  'aria-label'?: string;\n  gridBreakPoint?: TableGridBreakpoint;\n  rowData?: R;\n};\n\nexport type VirtualizedTableFC = <D, R extends any = {}>(\n  props: VirtualizedTableProps<D, R>,\n) => JSX.Element;\n\nexport type TableDataProps = {\n  id: string;\n  activeColumnIDs: Set<string>;\n  className?: string;\n};\n\nexport type UseActiveColumns = <D = any>({\n  columns,\n  showNamespaceOverride,\n  columnManagementID,\n}: {\n  columns: TableColumn<D>[];\n  showNamespaceOverride: boolean;\n  columnManagementID: string;\n}) => [TableColumn<D>[], boolean];\n\nexport type ListPageHeaderProps = {\n  title: string;\n  helpText?: React.ReactNode;\n  badge?: React.ReactNode;\n};\n\nexport type CreateWithPermissionsProps = {\n  createAccessReview?: {\n    groupVersionKind: GroupVersionKind;\n    namespace?: string;\n  };\n};\n\nexport type ListPageCreateProps = CreateWithPermissionsProps & {\n  groupVersionKind: GroupVersionKind;\n};\n\nexport type ListPageCreateLinkProps = CreateWithPermissionsProps & {\n  to: string;\n};\n\nexport type ListPageCreateButtonProps = CreateWithPermissionsProps & ButtonProps;\n\nexport type ListPageCreateDropdownProps = CreateWithPermissionsProps & {\n  items: {\n    [key: string]: React.ReactNode;\n  };\n  onClick: (item: string) => void;\n};\n\nexport type RowFilterItem = {\n  id: string;\n  title: string;\n  hideIfEmpty?: string;\n};\n\nexport type FilterValue = {\n  selected?: string[];\n  all?: string[];\n};\n\ntype RowFilterBase<R> = {\n  filterGroupName: string;\n  type: string;\n  items: RowFilterItem[];\n  filter: (input: FilterValue, obj: R) => boolean;\n  defaultSelected?: string[];\n};\n\nexport type RowMatchFilter<R = any> = RowFilterBase<R> & {\n  isMatch: (obj: R, id: string) => boolean;\n};\n\nexport type RowReducerFilter<R = any> = RowFilterBase<R> & {\n  reducer: (obj: R) => React.ReactText;\n};\n\nexport type RowFilter<R = any> = RowMatchFilter<R> | RowReducerFilter<R>;\n\nexport type ColumnLayout = {\n  id: string;\n  columns: ManagedColumn[];\n  selectedColumns: Set<string>;\n  showNamespaceOverride?: boolean;\n  type: string;\n};\n\nexport type ManagedColumn = {\n  id: string;\n  title: string;\n  additional?: boolean;\n};\n\nexport type OnFilterChange = (type: string, value: FilterValue) => void;\n\nexport type ListPageFilterProps<D = any> = {\n  data: D;\n  loaded: boolean;\n  rowFilters?: RowFilter[];\n  nameFilterPlaceholder?: string;\n  labelFilterPlaceholder?: string;\n  hideNameLabelFilters?: boolean;\n  hideLabelFilter?: boolean;\n  columnLayout?: ColumnLayout;\n  onFilterChange: OnFilterChange;\n  hideColumnManagement?: boolean;\n};\n\nexport type UseListPageFilter = <D, R>(\n  data: D[],\n  rowFilters?: RowFilter<R>[],\n  staticFilters?: { [key: string]: FilterValue },\n) => [D[], D[], OnFilterChange];\n\nexport type ResourceLinkProps = {\n  /** @deprecated Use groupVersionKind instead. The kind property will be removed in a future release. */\n  kind?: K8sResourceKindReference;\n  groupVersionKind?: K8sGroupVersionKind;\n  className?: string;\n  displayName?: string;\n  inline?: boolean;\n  linkTo?: boolean;\n  name?: string;\n  namespace?: string;\n  hideIcon?: boolean;\n  title?: string;\n  dataTest?: string;\n  onClick?: () => void;\n};\n\nexport type UseK8sModel = (\n  // Use K8sGroupVersionKind type instead of K8sResourceKindReference. Support for type K8sResourceKindReference will be removed in a future release.\n  groupVersionKind?: K8sResourceKindReference | K8sGroupVersionKind,\n) => [K8sModel, boolean];\nexport type UseK8sModels = () => [{ [key: string]: K8sModel }, boolean];\n\nexport type PerspectiveType = string;\n\nexport type UseActivePerspective = () => [\n  PerspectiveType,\n  React.Dispatch<React.SetStateAction<PerspectiveType>>,\n];\n\nexport type QueryParams = {\n  watch?: string;\n  labelSelector?: string;\n  fieldSelector?: string;\n  resourceVersion?: string;\n  [key: string]: string;\n};\n\nexport type Patch = {\n  op: string;\n  path: string;\n  value?: any;\n};\n\nexport type Cause = {\n  field: string;\n  message: string;\n  reason: string;\n};\n\nexport type Status = {\n  apiVersion: 'v1';\n  kind: 'Status';\n  details: {\n    causes: Cause[];\n    group: string;\n    kind: string;\n  };\n  message: string;\n  metadata: any;\n  reason: string;\n  status: string;\n};\n","import { RouteComponentProps } from 'react-router';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type StorageProvider = ExtensionDeclaration<\n  'console.storage-provider',\n  {\n    name: string;\n    Component: CodeRef<React.ComponentType<Partial<RouteComponentProps>>>;\n  }\n>;\n\nexport const isStorageProvider = (e: Extension): e is StorageProvider =>\n  e.type === 'console.storage-provider';\n","import * as React from 'react';\nimport { ExtensionHook, ExtensionK8sKindVersionModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { AccessReviewResourceAttributes } from './console-types';\n\n/** ActionProvider contributes a hook that returns list of actions for specific context */\nexport type ActionProvider = ExtensionDeclaration<\n  'console.action/provider',\n  {\n    /** The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm */\n    contextId: string | 'resource';\n    /** A react hook which returns actions for the given scope.\n     * If contextId = `resource` then the scope will always be a K8s resource object\n     * */\n    provider: CodeRef<ExtensionHook<Action[]>>;\n  }\n>;\n\n/** ResourceActionProvider contributes a hook that returns list of actions for specific resource model */\nexport type ResourceActionProvider = ExtensionDeclaration<\n  'console.action/resource-provider',\n  {\n    /** The model for which this provider provides actions for. */\n    model: ExtensionK8sKindVersionModel;\n    /** A react hook which returns actions for the given resource model */\n    provider: CodeRef<ExtensionHook<Action[]>>;\n  }\n>;\n\n/** ActionGroup contributes an action group that can also be a submenu */\nexport type ActionGroup = ExtensionDeclaration<\n  'console.action/group',\n  {\n    /** ID used to identify the action section. */\n    id: string;\n    /** The label to display in the UI.\n     * Required for submenus.\n     * */\n    label?: string;\n    /** Whether this group should be displayed as submenu */\n    submenu?: boolean;\n    /** Insert this item before the item referenced here.\n     * For arrays, the first one found in order is used.\n     * */\n    insertBefore?: string | string[];\n    /** Insert this item after the item referenced here.\n     * For arrays, the first one found in order is used.\n     * insertBefore takes precedence.\n     * */\n    insertAfter?: string | string[];\n  }\n>;\n\n/** ActionFilter can be used to filter an action */\nexport type ActionFilter = ExtensionDeclaration<\n  'console.action/filter',\n  {\n    /** The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm */\n    contextId: string | 'resource';\n    /** A function which will filter actions based on some conditions.\n     * scope: The scope in which actions should be provided for.\n     * Note: hook may be required if we want to remove the ModifyCount action from a deployment with HPA\n     * */\n    filter: CodeRef<(scope: any, action: Action) => boolean>;\n  }\n>;\n\nexport type SupportedActionExtensions =\n  | ActionProvider\n  | ResourceActionProvider\n  | ActionGroup\n  | ActionFilter;\n\n// Type Guards\n\nexport const isActionProvider = (e: Extension): e is ActionProvider => {\n  return e.type === 'console.action/provider';\n};\n\nexport const isResourceActionProvider = (e: Extension): e is ResourceActionProvider => {\n  return e.type === 'console.action/resource-provider';\n};\n\nexport const isActionGroup = (e: Extension): e is ActionGroup => {\n  return e.type === 'console.action/group';\n};\n\nexport const isActionFilter = (e: Extension): e is ActionFilter => {\n  return e.type === 'console.action/filter';\n};\n\n// Support types\n\nexport type Action = {\n  /** A unique identifier for this action. */\n  id: string;\n  /** The label to display in the UI. */\n  label: React.ReactNode;\n  /** Subtext for the menu item */\n  description?: string;\n  /** Executable callback or href.\n   * External links should automatically provide an external link icon on action.\n   * */\n  cta: (() => void) | { href: string; external?: boolean };\n  /** Whether the action is disabled. */\n  disabled?: boolean;\n  /** The tooltip for this action. */\n  tooltip?: string;\n  /** The icon for this action. */\n  icon?: string | React.ReactNode;\n  /** A `/` separated string where each segment denotes\n   * Eg. `add-to-project`, `menu-1/menu-2`\n   * */\n  path?: string;\n  /** Insert this item before the item referenced here.\n   * For arrays, the first one found in order is used.\n   * */\n  insertBefore?: string | string[];\n  /** Insert this item after the item referenced here.\n   * For arrays, the first one found in order is used.\n   * insertBefore takes precedence.\n   * */\n  insertAfter?: string | string[];\n  /** Describes the access check to perform. */\n  accessReview?: AccessReviewResourceAttributes;\n};\n","import * as React from 'react';\n// import { GraphElement } from '@patternfly/react-topology';\nimport { Extension/* , CodeRef */, ExtensionDeclaration } from '../types';\nimport { K8sResourceCommon } from './console-types';\nimport { BuildConfigData } from './topology-types';\n\n/** DetailsTab contributes a tab for the topology details panel. */\nexport type DetailsTab = ExtensionDeclaration<\n  'console.topology/details/tab',\n  {\n    /** A unique identifier for this details tab. */\n    id: string;\n    /** The tab label to display in the UI. */\n    label: string;\n    /** Insert this item before the item referenced here.\n     * For arrays, the first one found in order is used.\n     * */\n    insertBefore?: string | string[];\n    /** Insert this item after the item referenced here.\n     * For arrays, the first one found in order is used.\n     * insertBefore takes precedence.\n     * */\n    insertAfter?: string | string[];\n  }\n>;\n\n/** DetailsTabSection contributes a section for a specific tab in topology details panel. */\n// export type DetailsTabSection = ExtensionDeclaration<\n//   'console.topology/details/tab-section',\n//   {\n//     /** A unique identifier for this details tab section. */\n//     id: string;\n//     /** The parent tab ID that this section should contribute to. */\n//     tab: string;\n//     /** Returns a section for the graph element or undefined if not provided.\n//      * SDK component: <Section title={<optional>}>... padded area </Section>\n//      * @param renderNull should be used for section that defines Adapter to\n//      *  determine if adapter component renders null or not\n//      * */\n//     section: CodeRef<\n//       (element: GraphElement, renderNull?: () => null) => React.Component | undefined\n//     >;\n//     /** Insert this item before the item referenced here.\n//      * For arrays, the first one found in order is used.\n//      * */\n//     insertBefore?: string | string[];\n//     /** Insert this item after the item referenced here.\n//      * For arrays, the first one found in order is used.\n//      * insertBefore takes precedence.\n//      * */\n//     insertAfter?: string | string[];\n//   }\n// >;\n\n/** DetailsResourceLink contributes a link for specific topology context or graph element. */\n// export type DetailsResourceLink = ExtensionDeclaration<\n//   'console.topology/details/resource-link',\n//   {\n//     /** A higher priority factory will get the first chance to create the link. */\n//     priority?: number;\n//     /** Return the resource link if provided, otherwise undefined.\n//      * Use ResourceIcon and ResourceLink for styles.\n//      * */\n//     link: CodeRef<(element: GraphElement) => React.Component | undefined>;\n//   }\n// >;\n\n/** DetailsResourceAlert contributes an alert for specific topology context or graph element. */\n// export type DetailsResourceAlert = ExtensionDeclaration<\n//   'console.topology/details/resource-alert',\n//   {\n//     /** The ID of this alert. Used to save state if the alert shouldn't be shown after dismissed. */\n//     id: string;\n//     /** Hook to return the contents of the Alert. */\n//     contentProvider: CodeRef<(element: GraphElement) => DetailsResourceAlertContent | null>;\n//   }\n// >;\n\n/** PodAdapter contributes an adapter to adapt element to data that can be used by Pod component */\n// export type PodAdapter = ExtensionDeclaration<\n//   'console.topology/adapter/pod',\n//   {\n//     adapt: CodeRef<(element: GraphElement) => AdapterDataType<PodsAdapterDataType> | undefined>;\n//   }\n// >;\n\n/** BuildAdapter contributes an adapter to adapt element to data that can be used by Build component */\n// export type BuildAdapter = ExtensionDeclaration<\n//   'console.topology/adapter/build',\n//   {\n//     adapt: CodeRef<(element: GraphElement) => AdapterDataType<BuildConfigData> | undefined>;\n//   }\n// >;\n\n/** NetworkAdpater contributes an adapter to adapt element to data that can be used by Networking component */\n// export type NetworkAdapter = ExtensionDeclaration<\n//   'console.topology/adapter/network',\n//   {\n//     adapt: CodeRef<(element: GraphElement) => NetworkAdapterType | undefined>;\n//   }\n// >;\n\nexport type SupportedTopologyDetailsExtensions =\n  | DetailsTab\n  // | DetailsTabSection\n  // | DetailsResourceLink\n  // | DetailsResourceAlert\n  // | PodAdapter\n  // | BuildAdapter\n  // | NetworkAdapter;\n\n// Type guards\n\nexport const isDetailsTab = (e: Extension): e is DetailsTab => {\n  return e.type === 'console.topology/details/tab';\n};\n\n// export const isDetailsTabSection = (e: Extension): e is DetailsTabSection => {\n//   return e.type === 'console.topology/details/tab-section';\n// };\n//\n// export const isDetailsResourceLink = (e: Extension): e is DetailsResourceLink => {\n//   return e.type === 'console.topology/details/resource-link';\n// };\n//\n// export const isDetailsResourceAlert = (e: Extension): e is DetailsResourceAlert => {\n//   return e.type === 'console.topology/details/resource-alert';\n// };\n//\n// export const isPodAdapter = (e: Extension): e is PodAdapter => {\n//   return e.type === 'console.topology/adapter/pod';\n// };\n//\n// export const isBuildAdapter = (e: Extension): e is BuildAdapter => {\n//   return e.type === 'console.topology/adapter/build';\n// };\n//\n// export const isNetworkAdapter = (e: Extension): e is NetworkAdapter => {\n//   return e.type === 'console.topology/adapter/network';\n// };\n\nexport type DetailsResourceAlertContent = {\n  /** The title of the alert */\n  title: string;\n  /** Whether to show a dismiss button. false by default.\n   * State will be store in user settings, once dismissed alert won't show up again untill user settings state resets\n   */\n  dismissible?: boolean;\n  content: React.Component | undefined | JSX.Element;\n  variant?: 'success' | 'danger' | 'warning' | 'info' | 'default';\n  actionLinks?: React.ReactNode;\n};\n\nexport type AdapterDataType<D = {}> = {\n  resource: K8sResourceCommon;\n  provider: (resource: K8sResourceCommon) => D;\n};\n\nexport type PodsAdapterDataType<E = K8sResourceCommon> = {\n  pods: E[];\n  loaded: boolean;\n  loadError: string;\n  emptyText?: string;\n  allPodsLink?: string;\n  buildConfigData?: BuildConfigData;\n};\n\nexport type NetworkAdapterType = {\n  resource: K8sResourceCommon;\n};\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n// import { WatchK8sResourcesGeneric } from './console-types';\nimport {\n  // CreateConnectionGetter,\n  RelationshipProviderCreate,\n  RelationshipProviderProvides,\n  // TopologyApplyDisplayOptions,\n  // TopologyDataModelDepicted,\n  // TopologyDataModelGetter,\n  // TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n  TopologyDecoratorQuadrant,\n  // TopologyDisplayOption,\n  // ViewComponentFactory,\n} from './topology-types';\n\n/** Getter for a ViewComponentFactory */\n// export type TopologyComponentFactory = ExtensionDeclaration<\n//   'console.topology/component/factory',\n//   {\n//     /** Getter for a ViewComponentFactory */\n//     getFactory: CodeRef<ViewComponentFactory>;\n//   }\n// >;\n\n/** Getter for the create connector function */\n// export type TopologyCreateConnector = ExtensionDeclaration<\n//   'console.topology/create/connector',\n//   {\n//     /** Getter for the create connector function */\n//     getCreateConnector: CodeRef<CreateConnectionGetter>;\n//   }\n// >;\n\n/** Topology Data Model Factory Extension */\n// export type TopologyDataModelFactory = ExtensionDeclaration<\n//   'console.topology/data/factory',\n//   {\n//     /** Unique ID for the factory. */\n//     id: string;\n//     /** Priority for the factory */\n//     priority: number;\n//     /** Resources to be fetched from useK8sWatchResources hook. */\n//     resources?: WatchK8sResourcesGeneric;\n//     /** Keys in resources containing workloads. */\n//     workloadKeys?: string[];\n//     /** Getter for the data model factory */\n//     getDataModel?: CodeRef<TopologyDataModelGetter>;\n//     /** Getter for function to determine if a resource is depicted by this model factory */\n//     isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n//     /** Getter for function to reconcile data model after all extensions' models have loaded */\n//     getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n//   }\n// >;\n\n/** Topology Display Filters Extension */\n// export type TopologyDisplayFilters = ExtensionDeclaration<\n//   'console.topology/display/filters',\n//   {\n//     // Getter for topology filters specific to the extension\n//     getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n//     // Function to apply filters to the model\n//     applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n//   }\n// >;\n\n/** Topology Decorator Provider Extension */\nexport type TopologyDecoratorProvider = ExtensionDeclaration<\n  'console.topology/decorator/provider',\n  {\n    // id for topology decorator specific to the extension\n    id: string;\n    // priority for topology decorator specific to the extension\n    priority: number;\n    // quadrant for topology decorator specific to the extension\n    quadrant: TopologyDecoratorQuadrant;\n    // decorator specific to the extension\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n>;\n\n/** Topology relationship provider connector extension */\nexport type TopologyRelationshipProvider = ExtensionDeclaration<\n  'console.topology/relationship/provider',\n  {\n    // use to determine if a connection can be created between the source and target node\n    provides: CodeRef<RelationshipProviderProvides>;\n    // tooltip to show when connector operation is hovering over the drop target ex: \"Create a Visual Connector\"\n    tooltip: string;\n    // callback to execute when connector is drop over target node to create a connection\n    create: CodeRef<RelationshipProviderCreate>;\n    // priority for relationship, higher will be preferred in case of multiple\n    priority: number;\n  }\n>;\n\n// Type Guards\n\n// export const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory =>\n//   e.type === 'console.topology/component/factory';\n//\n// export const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector =>\n//   e.type === 'console.topology/create/connector';\n//\n// export const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory =>\n//   e.type === 'console.topology/data/factory';\n//\n// export const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters =>\n//   e.type === 'console.topology/display/filters';\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider =>\n  e.type === 'console.topology/decorator/provider';\n\nexport const isTopologyRelationshipProvider = (e: Extension): e is TopologyRelationshipProvider =>\n  e.type === 'console.topology/relationship/provider';\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { CodeRef, Extension, ExtensionDeclaration } from '../types';\n\n/** Properties of custom CreateResource component. */\nexport type CreateResourceComponentProps = { namespace?: string };\n\nexport type CreateResource = ExtensionDeclaration<\n  'console.resource/create',\n  {\n    /** The model for which this create resource page will be rendered. */\n    model: ExtensionK8sModel;\n    /** The component to be rendered when the model matches */\n    component: CodeRef<React.ComponentType<CreateResourceComponentProps>>;\n  }\n>;\n\n// Type guards\n\nexport const isCreateResource = (e: Extension): e is CreateResource =>\n  e.type === 'console.resource/create';\n","import * as React from 'react';\nimport { JSONSchema7Type } from 'json-schema';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport enum UserPreferenceFieldType {\n  dropdown = 'dropdown',\n  checkbox = 'checkbox',\n  custom = 'custom',\n}\n\nexport type UserPreferenceDropdownField = {\n  type: UserPreferenceFieldType.dropdown;\n  userSettingsKey: string;\n  defaultValue?: string;\n  options: {\n    value: string;\n    label: string;\n  }[];\n};\n\nexport type UserPreferenceCheckboxFieldValue = string | number | boolean;\n\nexport type UserPreferenceCheckboxField = {\n  type: UserPreferenceFieldType.checkbox;\n  userSettingsKey: string;\n  label: string;\n  trueValue: UserPreferenceCheckboxFieldValue;\n  falseValue: UserPreferenceCheckboxFieldValue;\n  defaultValue?: UserPreferenceCheckboxFieldValue;\n};\n\nexport type UserPreferenceCustomField = {\n  type: UserPreferenceFieldType.custom;\n  component: CodeRef<React.ComponentType>;\n  props?: { [key: string]: JSONSchema7Type };\n};\n\nexport type UserPreferenceField =\n  | UserPreferenceDropdownField\n  | UserPreferenceCheckboxField\n  | UserPreferenceCustomField;\n\nexport type UserPreferenceGroup = ExtensionDeclaration<\n  'console.user-preference/group',\n  {\n    /** ID used to identify the user preference group. */\n    id: string;\n    /** The label of the user preference group */\n    label: string;\n    /** ID of user preference group before which this group should be placed */\n    insertBefore?: string;\n    /** ID of user preference group after which this group should be placed */\n    insertAfter?: string;\n  }\n>;\n\nexport type UserPreferenceItem = ExtensionDeclaration<\n  'console.user-preference/item',\n  {\n    /** ID used to identify the user preference item and referenced in insertAfter and insertBefore to define the item order. */\n    id: string;\n    /** IDs used to identify the user preference groups the item would belong to. */\n    groupId?: string;\n    /** The label of the user preference */\n    label: string;\n    /** The description of the user preference. */\n    description: string;\n    /** The input field options used to render the values to set the user preference. */\n    field: UserPreferenceField;\n    /** ID of user preference item before which this item should be placed */\n    insertBefore?: string;\n    /** ID of user preference item after which this item should be placed */\n    insertAfter?: string;\n  }\n>;\n\n// Type guards\n\nexport const isUserPreferenceItem = (e: Extension): e is UserPreferenceItem => {\n  return e.type === 'console.user-preference/item';\n};\n\nexport const isUserPreferenceGroup = (e: Extension): e is UserPreferenceGroup => {\n  return e.type === 'console.user-preference/group';\n};\n","import { ExtensionK8sKindVersionModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { K8sResourceCommon } from './console-types';\n\nexport type PageComponentProps<R extends K8sResourceCommon = K8sResourceCommon> = {\n  filters?: any;\n  selected?: any;\n  match?: any;\n  obj?: R;\n  params?: any;\n  customData?: any;\n  showTitle?: boolean;\n  fieldSelector?: string;\n};\n\nexport type HorizontalNavTab = ExtensionDeclaration<\n  'console.tab/horizontalNav',\n  {\n    /** The model for which this provider show tab. */\n    model: ExtensionK8sKindVersionModel;\n    /** The page to be show in horizontal tab. It takes tab name as name and href of the tab */\n    page: {\n      name: string;\n      href: string;\n    };\n    /** The component to be rendered when the route matches. */\n    component: CodeRef<React.ComponentType<PageComponentProps>>;\n  }\n>;\n\n// Type Guards\nexport const isHorizontalNavTab = (e: Extension): e is HorizontalNavTab =>\n  e.type === 'console.tab/horizontalNav';\n","import { K8sModel } from '../../api/common-types';\nimport {\n  GetAPIVersionForModel,\n  GetGroupVersionKindForResource,\n  GetGroupVersionKindForModel,\n} from '../../api/k8s-types';\nimport { K8sGroupVersionKind, K8sResourceKindReference } from '../../extensions/console-types';\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind Pass K8sGroupVersionKind which will have group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind.group Pass group of k8s resource or model.\n * @param K8sGroupVersionKind.version Pass version of k8s resource or model.\n * @param K8sGroupVersionKind.kind Pass kind of k8s resource or model.\n * @return The reference for any k8s resource i.e `group~version~kind`.\n * If the group will not be present then \"core\" will be returned as part of the group in reference.\n * * */\nexport const getReference = ({\n  group,\n  version,\n  kind,\n}: K8sGroupVersionKind): K8sResourceKindReference => [group || 'core', version, kind].join('~');\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * @see getGroupVersionKindForModel\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s model.\n * @param model k8s model\n * @return The reference for model i.e `group~version~kind`.\n * * */\nexport const getReferenceForModel = (model: K8sModel): K8sResourceKindReference =>\n  getReference({ group: model.apiGroup, version: model.apiVersion, kind: model.kind });\n\n/**\n * Provides apiVersion for a k8s model.\n * @param model k8s model\n * @return The apiVersion for the model i.e `group/version`.\n * * */\nexport const getAPIVersionForModel: GetAPIVersionForModel = (model) =>\n  !model?.apiGroup ? model.apiVersion : `${model.apiGroup}/${model.apiVersion}`;\n\n/**\n * Provides a group, version, and kind for a resource.\n * @param resource k8s resource\n * @return The group, version, kind for the provided resource.\n * If the resource does not have an API group, group \"core\" will be returned.\n * If the resource has an invalid apiVersion then it'll throw Error.\n * * */\nexport const getGroupVersionKindForResource: GetGroupVersionKindForResource = (resource) => {\n  const { apiVersion, kind } = resource;\n  const apiVersionSplit = apiVersion.split('/');\n  const apiVersionSplitLen = apiVersionSplit.length;\n  if (apiVersionSplitLen > 2) throw new Error('Provided resource has invalid apiVersion.');\n\n  return {\n    ...(apiVersionSplitLen === 2 && {\n      group: apiVersionSplit[0],\n    }),\n    version: apiVersionSplitLen === 2 ? apiVersionSplit[1] : apiVersion,\n    kind,\n  };\n};\n\n/**\n * Provides a group, version, and kind for a k8s model.\n * @param model k8s model\n * @return The group, version, kind for the provided model.\n * If the model does not have an apiGroup, group \"core\" will be returned.\n * * */\nexport const getGroupVersionKindForModel: GetGroupVersionKindForModel = ({\n  apiGroup,\n  apiVersion: version,\n  kind,\n}) => ({\n  ...(apiGroup && { group: apiGroup }),\n  version,\n  kind,\n});\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a group, version, and kind for a reference.\n * @param reference reference for group, version, kind i.e `group~version~kind`.\n * @return The group, version, kind for the provided reference.\n * If the group's value is \"core\" it denotes resource does not have an API group.\n * * */\nexport const getGroupVersionKindForReference = (\n  reference: K8sResourceKindReference,\n): K8sGroupVersionKind => {\n  const referenceSplit = reference.split('~');\n  if (referenceSplit.length > 3) throw new Error('Provided reference is invalid.');\n\n  const [group, version, kind] = referenceSplit;\n  return {\n    group,\n    version,\n    kind,\n  };\n};\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of K8sGroupVersionKind.\n * @param kind kind can be of type K8sResourceKindReference or K8sGroupVersionKind\n * @return The reference i.e `group~version~kind`.\n * * */\nexport const transformGroupVersionKindToReference = (\n  kind: K8sResourceKindReference | K8sGroupVersionKind,\n): K8sResourceKindReference =>\n  kind && typeof kind !== 'string' ? getReference(kind) : (kind as K8sResourceKindReference);\n","/* eslint-disable */\nimport {\n  ConsoleFetch,\n  ConsoleFetchJSON,\n  ConsoleFetchText,\n  UseResolvedExtensions,\n  UseActivePerspective,\n} from '../extensions/console-types';\nimport { K8sGet, K8sCreate, K8sUpdate, K8sPatch, K8sDelete, K8sList } from './k8s-types';\n\nexport const useResolvedExtensions: UseResolvedExtensions = require('@console/dynamic-plugin-sdk/src/api/useResolvedExtensions')\n  .useResolvedExtensions;\nexport const consoleFetch: ConsoleFetch = require('@console/dynamic-plugin-sdk/src/utils/fetch')\n  .consoleFetch;\nexport const consoleFetchJSON: ConsoleFetchJSON = require('@console/dynamic-plugin-sdk/src/utils/fetch')\n  .consoleFetchJSON;\nexport const consoleFetchText: ConsoleFetchText = require('@console/dynamic-plugin-sdk/src/utils/fetch')\n  .consoleFetchText;\n\nexport const useActivePerspective: UseActivePerspective = require('@console/dynamic-plugin-sdk/src/perspective/useActivePerspective')\n  .default;\n\n// Expose K8s CRUD utilities as below\nexport const k8sGet: K8sGet = require('@console/dynamic-plugin-sdk/src/utils/k8s').k8sGetResource;\nexport const k8sCreate: K8sCreate = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sCreateResource;\nexport const k8sUpdate: K8sUpdate = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sUpdateResource;\nexport const k8sPatch: K8sPatch = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sPatchResource;\nexport const k8sDelete: K8sDelete = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sDeleteResource;\nexport const k8sList: K8sList = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sListResource;\nexport {\n  getAPIVersionForModel,\n  getGroupVersionKindForResource,\n  getGroupVersionKindForModel,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\n","import * as React from 'react';\nimport { PerspectiveType } from '../extensions';\n\nexport type PerspectiveContextType = {\n  activePerspective?: PerspectiveType;\n  setActivePerspective?: React.Dispatch<React.SetStateAction<PerspectiveType>>;\n};\n\nexport const PerspectiveContext = React.createContext<PerspectiveContextType>({});\n","import { useContext } from 'react';\nimport { UseActivePerspective } from '../extensions';\nimport { PerspectiveContext, PerspectiveContextType } from './perspective-context';\n\nconst useActivePerspective: UseActivePerspective = () => {\n  const { activePerspective, setActivePerspective } = useContext<PerspectiveContextType>(\n    PerspectiveContext,\n  );\n  return [activePerspective, setActivePerspective];\n};\n\nexport default useActivePerspective;\n","/**\n * Allows to easily extend a base class to create custom applicative errors.\n *\n * example:\n * ```\n * class HttpError extends CustomError {\n * \tpublic constructor(\n * \t\tpublic code: number,\n * \t\tmessage?: string,\n * \t) {\n * \t\tsuper(message)\n * \t}\n * }\n *\n * new HttpError(404, 'Not found')\n * ```\n */\nexport class CustomError extends Error {\n  name: string;\n\n  constructor(message?: string) {\n    super(message);\n    // set error name as constructor name, make it not enumerable to keep native Error behavior\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n    Object.defineProperty(this, 'name', {\n      value: new.target.name,\n      enumerable: false,\n      configurable: true,\n    });\n    // Use captureStackTrace when available to remove contructor from stack trace\n    // Add message to the stack trace\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n    // fix the extended error prototype chain\n    // because typescript __extends implementation can't\n    // see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { CustomError } from './custom-error';\n\n/**\n * Http error\n *\n * Usage: throw HttpError.fromCode(404)\n */\nexport class HttpError extends CustomError {\n  protected static messages = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required', // RFC 7235\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed', // RFC 7232\n    413: 'Payload Too Large', // RFC 7231\n    414: 'URI Too Long', // RFC 7231\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable', // RFC 7233\n    417: 'Expectation Failed',\n    418: \"I'm a teapot\", // RFC 2324\n    421: 'Misdirected Request', // RFC 7540\n    426: 'Upgrade Required',\n    428: 'Precondition Required', // RFC 6585\n    429: 'Too Many Requests', // RFC 6585\n    431: 'Request Header Fields Too Large', // RFC 6585\n    451: 'Unavailable For Legal Reasons', // RFC 7725\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n    506: 'Variant Also Negotiates', // RFC 2295\n    510: 'Not Extended', // RFC 2774\n    511: 'Network Authentication Required', // RFC 6585\n  };\n\n  public constructor(\n    message: string,\n    public code?: number,\n    public response?: Response,\n    public json?: any,\n  ) {\n    super(message);\n  }\n\n  public static fromCode(code: number) {\n    return new HttpError(HttpError.messages[code], code);\n  }\n}\n\nexport class TimeoutError extends CustomError {\n  public constructor(public url: string, public ms: number) {\n    super(`Call to ${url} timed out after ${ms}ms.`);\n  }\n}\n\nexport class RetryError extends CustomError {}\n","import * as _ from 'lodash';\n// import { authSvc } from '@console/internal/module/auth';\nimport { RetryError, HttpError } from '../error/http-error';\n// import { InternalReduxStore } from '../redux';\n\nconst InternalReduxStore = null;\n\nconst cookiePrefix = 'csrf-token=';\nexport const getCSRFToken = () =>\n  document &&\n  document.cookie &&\n  document.cookie\n    .split(';')\n    .map((c) => _.trim(c))\n    .filter((c) => c.startsWith(cookiePrefix))\n    .map((c) => c.slice(cookiePrefix.length))\n    .pop();\n\n// TODO: url can be url or path, but shouldLogout only handles paths\nexport const shouldLogout = (url: string): boolean => {\n  const k8sRegex = new RegExp(`^${window.SERVER_FLAGS.basePath}api/kubernetes/`);\n  // 401 from k8s. show logout screen\n  if (k8sRegex.test(url)) {\n    // Don't let 401s from proxied services log out users\n    const proxyRegex = new RegExp(`^${window.SERVER_FLAGS.basePath}api/kubernetes/api/v1/proxy/`);\n    if (proxyRegex.test(url)) {\n      return false;\n    }\n    const serviceRegex = new RegExp(\n      `^${window.SERVER_FLAGS.basePath}api/kubernetes/api/v1/namespaces/\\\\w+/services/\\\\w+/proxy/`,\n    );\n    if (serviceRegex.test(url)) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\n\nexport const validateStatus = async (\n  response: Response,\n  url: string,\n  method: string,\n  retry: boolean,\n) => {\n  if (response.ok) {\n    return response;\n  }\n\n  if (retry && response.status === 429) {\n    throw new RetryError();\n  }\n\n  if (response.status === 401 && shouldLogout(url)) {\n    // authSvc.logout(window.location.pathname);\n    console.error('// authSvc.logout(window.location.pathname);');\n  }\n\n  const contentType = response.headers.get('content-type');\n  if (!contentType || contentType.indexOf('json') === -1) {\n    throw new HttpError(response.statusText, response.status, response);\n  }\n\n  if (response.status === 403) {\n    return response.json().then((json) => {\n      throw new HttpError(\n        json.message || 'Access denied due to cluster policy.',\n        response.status,\n        response,\n        json,\n      );\n    });\n  }\n\n  return response.json().then((json) => {\n    // retry 409 conflict errors due to ClustResourceQuota / ResourceQuota\n    // https://bugzilla.redhat.com/show_bug.cgi?id=1920699\n    if (\n      retry &&\n      method === 'POST' &&\n      response.status === 409 &&\n      ['resourcequotas', 'clusterresourcequotas'].includes(json.details?.kind)\n    ) {\n      throw new RetryError();\n    }\n    const cause = json.details?.causes?.[0];\n    let reason;\n    if (cause) {\n      reason = `Error \"${cause.message}\" for field \"${cause.field}\".`;\n    }\n    if (!reason) {\n      reason = json.message;\n    }\n    if (!reason) {\n      reason = json.error;\n    }\n    if (!reason) {\n      reason = response.statusText;\n    }\n\n    throw new HttpError(reason, response.status, response, json);\n  });\n};\n\ntype ImpersonateHeaders = {\n  'Impersonate-User': string;\n};\nexport const getImpersonateHeaders = (): ImpersonateHeaders => {\n  if (!InternalReduxStore) return undefined;\n  const { kind, name } = InternalReduxStore.getState().UI.get('impersonate', {});\n  if ((kind === 'User' || kind === 'Group') && name) {\n    // Even if we are impersonating a group, we still need to set Impersonate-User to something or k8s will complain\n    const headers = {\n      'Impersonate-User': name,\n    };\n    if (kind === 'Group') {\n      headers['Impersonate-Group'] = name;\n    }\n    return headers;\n  }\n  return undefined;\n};\n","import * as _ from 'lodash';\n// import 'whatwg-fetch';\nimport { ConsoleFetchText, ConsoleFetchJSON, ConsoleFetch } from '../../extensions/console-types';\nimport { TimeoutError, RetryError } from '../error/http-error';\nimport { getCSRFToken, validateStatus, getImpersonateHeaders } from './console-fetch-utils';\n\nconst initDefaults = {\n  headers: {},\n  credentials: 'same-origin',\n};\n\nconst consoleFetchInternal = (\n  url: string,\n  options: RequestInit,\n  timeout: number,\n  retry: boolean,\n): Promise<Response> => {\n  const allOptions = _.defaultsDeep({}, initDefaults, options);\n  if (allOptions.method !== 'GET') {\n    allOptions.headers['X-CSRFToken'] = getCSRFToken();\n  }\n\n  // If the URL being requested is absolute (and therefore, not a local request),\n  // remove the authorization header to prevent credentials from leaking.\n  if (url.indexOf('://') >= 0) {\n    delete allOptions.headers.Authorization;\n    delete allOptions.headers['X-CSRFToken'];\n  }\n\n  const fetchPromise = fetch(url, allOptions).then((response) =>\n    validateStatus(response, url, allOptions.method, retry),\n  );\n\n  // return fetch promise directly if timeout <= 0\n  if (timeout < 1) {\n    return fetchPromise;\n  }\n\n  const timeoutPromise: Promise<Response> = new Promise((unused, reject) =>\n    setTimeout(() => reject(new TimeoutError(url, timeout)), timeout),\n  );\n\n  // Initiate both the fetch promise and a timeout promise\n  return Promise.race([fetchPromise, timeoutPromise]);\n};\n\n/**\n * A custom wrapper around `fetch` that adds console specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws appropriate error or logs out the user if required.\n * @param url The URL to fetch\n * @param method  The HTTP method to use\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @return A promise that resolves to the response\n * * */\nexport const consoleFetch: ConsoleFetch = async (url, options = {}, timeout = 60000) => {\n  let attempt = 0;\n  let response;\n  let retry = true;\n  while (retry) {\n    retry = false;\n    attempt++;\n    try {\n      // have to disable for retry logic\n      // eslint-disable-next-line no-await-in-loop\n      response = await consoleFetchInternal(url, options, timeout, attempt < 3);\n    } catch (e) {\n      if (e instanceof RetryError) {\n        retry = true;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  return response;\n};\n\nconst consoleFetchCommon = async (\n  url: string,\n  method: string = 'GET',\n  options: RequestInit = {},\n  timeout?: number,\n) => {\n  const headers = getImpersonateHeaders() || {};\n  // Pass headers last to let callers to override Accept.\n  const allOptions = _.defaultsDeep({ method }, options, { headers });\n  const response = await consoleFetch(url, allOptions, timeout);\n  const text = await response.text();\n  const isPlainText = response.headers.get('Content-Type') === 'text/plain';\n  if (!text) {\n    return isPlainText ? '' : {};\n  }\n  return isPlainText || !response.ok ? text : JSON.parse(text);\n};\n\n/**\n * A custom wrapper around `fetch` that adds console specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws appropriate error or logs out the user if required.\n * It returns the response as a JSON object.\n * Uses consoleFetch internally.\n * @param url The URL to fetch\n * @param method  The HTTP method to use. Defaults to GET\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as JSON object.\n * * */\nexport const consoleFetchJSON: ConsoleFetchJSON = (url, method = 'GET', options = {}, timeout) => {\n  const allOptions = _.defaultsDeep({}, options, { headers: { Accept: 'application/json' } });\n  return consoleFetchCommon(url, method, allOptions, timeout);\n};\n\n/**\n * A custom wrapper around `fetch` that adds console specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws appropriate error or logs out the user if required.\n * It returns the response as a text.\n * Uses consoleFetch internally.\n * @param url The URL to fetch\n * @param method  The HTTP method to use. Defaults to GET\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text.\n * * */\nexport const consoleFetchText: ConsoleFetchText = (url, options = {}, timeout) => {\n  return consoleFetchCommon(url, 'GET', options, timeout);\n};\n\nconst consoleFetchSendJSON = (\n  url: string,\n  method: string,\n  json = null,\n  options: RequestInit = {},\n  timeout: number,\n) => {\n  const allOptions: Record<string, any> = {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': `application/${\n        method === 'PATCH' ? 'json-patch+json' : 'json'\n      };charset=UTF-8`,\n    },\n  };\n  if (json) {\n    allOptions.body = JSON.stringify(json);\n  }\n  return consoleFetchJSON(url, method, _.defaultsDeep(allOptions, options), timeout);\n};\n\n/**\n * A custom DELETE method of consoleFetchJSON.\n * It sends an optional JSON object as the body of the request and adds extra headers for patch request.\n * @param url The URL to delete the object\n * @param json The JSON to delete the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.delete = (url, json = null, options = {}, timeout) => {\n  return json\n    ? consoleFetchSendJSON(url, 'DELETE', json, options, timeout)\n    : consoleFetchJSON(url, 'DELETE', options, timeout);\n};\n\n/**\n * A custom POST method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to post the object\n * @param json The JSON to POST the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.post = (url: string, json, options = {}, timeout) =>\n  consoleFetchSendJSON(url, 'POST', json, options, timeout);\n\n/**\n * A custom PUT method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to put the object\n * @param json The JSON to PUT the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.put = (url: string, json, options = {}, timeout) =>\n  consoleFetchSendJSON(url, 'PUT', json, options, timeout);\n\n/**\n * A custom PATCH method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to patch the object\n * @param json The JSON to PATCH the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.patch = (url: string, json, options = {}, timeout) =>\n  consoleFetchSendJSON(url, 'PATCH', json, options, timeout);\n","export const k8sBasePath = `${window.SERVER_FLAGS.basePath}api/kubernetes`;\n","import * as _ from 'lodash';\nimport { K8sModel, MatchExpression, MatchLabels, Selector } from '../../api/common-types';\nimport { Options } from '../../api/internal-types';\nimport { k8sBasePath } from './k8s';\n\nconst getK8sAPIPath = ({ apiGroup = 'core', apiVersion }: K8sModel): string => {\n  const isLegacy = apiGroup === 'core' && apiVersion === 'v1';\n  let p = isLegacy ? '/api/' : '/apis/';\n\n  if (!isLegacy && apiGroup) {\n    p += `${apiGroup}/`;\n  }\n\n  p += apiVersion;\n  return p;\n};\n\nexport const getK8sResourcePath = (model: K8sModel, options: Options): string => {\n  let u = getK8sAPIPath(model);\n\n  if (options.ns) {\n    u += `/namespaces/${options.ns}`;\n  }\n  u += `/${model.plural}`;\n  if (options.name) {\n    // Some resources like Users can have special characters in the name.\n    u += `/${encodeURIComponent(options.name)}`;\n  }\n  if (options.path) {\n    u += `/${options.path}`;\n  }\n  if (!_.isEmpty(options.queryParams)) {\n    const q = _.map(options.queryParams, function(v, k) {\n      return `${k}=${v}`;\n    });\n    u += `?${q.join('&')}`;\n  }\n\n  return u;\n};\n\nexport const resourceURL = (model: K8sModel, options: Options): string =>\n  `${k8sBasePath}${getK8sResourcePath(model, options)}`;\n\nconst toArray = (value) => (Array.isArray(value) ? value : [value]);\n\nexport const requirementToString = (requirement: MatchExpression): string => {\n  if (requirement.operator === 'Equals') {\n    return `${requirement.key}=${requirement.values[0]}`;\n  }\n\n  if (requirement.operator === 'NotEquals') {\n    return `${requirement.key}!=${requirement.values[0]}`;\n  }\n\n  if (requirement.operator === 'Exists') {\n    return requirement.key;\n  }\n\n  if (requirement.operator === 'DoesNotExist') {\n    return `!${requirement.key}`;\n  }\n\n  if (requirement.operator === 'In') {\n    return `${requirement.key} in (${toArray(requirement.values).join(',')})`;\n  }\n\n  if (requirement.operator === 'NotIn') {\n    return `${requirement.key} notin (${toArray(requirement.values).join(',')})`;\n  }\n\n  if (requirement.operator === 'GreaterThan') {\n    return `${requirement.key} > ${requirement.values[0]}`;\n  }\n\n  if (requirement.operator === 'LessThan') {\n    return `${requirement.key} < ${requirement.values[0]}`;\n  }\n\n  return '';\n};\n\nexport const createEquals = (key: string, value: string): MatchExpression => ({\n  key,\n  operator: 'Equals',\n  values: [value],\n});\n\nconst isOldFormat = (selector: Selector | MatchLabels) =>\n  !selector.matchLabels && !selector.matchExpressions;\n\nexport const toRequirements = (selector: Selector = {}): MatchExpression[] => {\n  const requirements = [];\n  const matchLabels = isOldFormat(selector) ? selector : selector.matchLabels;\n  const { matchExpressions } = selector;\n\n  Object.keys(matchLabels || {})\n    .sort()\n    .forEach(function(k) {\n      requirements.push(createEquals(k, matchLabels[k]));\n    });\n\n  (matchExpressions || []).forEach(function(me) {\n    requirements.push(me);\n  });\n\n  return requirements;\n};\n\nexport const selectorToString = (selector: Selector): string => {\n  const requirements = toRequirements(selector);\n  return requirements.map(requirementToString).join(',');\n};\n","import * as _ from 'lodash';\nimport { K8sModel } from '../../api/common-types';\nimport { Options } from '../../api/internal-types';\nimport { K8sResourceCommon, Patch } from '../../extensions/console-types';\nimport { consoleFetchJSON as coFetchJSON } from '../fetch';\nimport { selectorToString, resourceURL } from './k8s-utils';\n\n/**\n * An adapter function to call the underlying APIs with provided options.\n * @param func The function to be called.\n * @param knownArgs  The list of arguments to be provided to underlying API in order.\n * @return The function called with provided arguments.\n * * */\nconst adapterFunc = (func: Function, knownArgs: string[]) => {\n  return (options: Record<string, any>) => {\n    const args = knownArgs.map((arg) => {\n      // forming opts to match underlying API signature if it's there in knownArgs\n      if (arg === 'opts') {\n        const { name, ns, path, queryParams } = options || {};\n        return {\n          ...(name && { name }),\n          ...(ns && { ns }),\n          ...(path && { path }),\n          ...(queryParams && { queryParams }),\n        };\n      }\n      return options[arg];\n    });\n    return func(...args);\n  };\n};\n\n/**\n * It fetches a resource from the cluster, based on the provided model, name, namespace.\n * If the name is provided it returns one resource else it returns all the resources matching the model.\n * @param model k8s model\n * @param name The name of the resource, if not provided then it'll look for all the resources matching the model.\n * @param ns The namespace to look into, should not be specified for cluster-scoped resources.\n * @param opts The options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response as JSON object with a resource if the name is provided\n * else it returns all the resouces matching the model. In case of failure, the promise gets rejected with HTTP error response.\n * * */\nexport const k8sGet = (\n  model: K8sModel,\n  name: string,\n  ns?: string,\n  opts?: Options,\n  requestInit?: RequestInit,\n) => coFetchJSON(resourceURL(model, Object.assign({ ns, name }, opts)), 'GET', requestInit);\n\n/**\n * It fetches a resource from the cluster, based on the provided options.\n * If the name is provided it returns one resource else it returns all the resources matching the model.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model k8s model\n * @param options.name The name of the resource, if not provided then it'll look for all the resources matching the model.\n * @param options.ns The namespace to look into, should not be specified for cluster-scoped resources.\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @param options.requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response as JSON object with a resource if the name is provided\n * else it returns all the resources matching the model. In case of failure, the promise gets rejected with HTTP error response.\n * * */\nexport const k8sGetResource = adapterFunc(k8sGet, ['model', 'name', 'ns', 'opts', 'requestInit']);\n\n/**\n * It creates a resource in the cluster, based on the provided model and payload.\n * @param model k8s model\n * @param data The payload for the resource to be created.\n * @param opts The options to pass.\n * @return A promise that resolves to the response of the resource created.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sCreate = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  data: R,\n  opts: Options = {},\n) => {\n  return coFetchJSON.post(\n    resourceURL(model, Object.assign({ ns: data?.metadata?.namespace }, opts)),\n    data,\n  );\n};\n\n/**\n * It creates a resource in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model k8s model\n * @param options.data payload for the resource to be created\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @return A promise that resolves to the response of the resource created.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sCreateResource = adapterFunc(k8sCreate, ['model', 'data', 'opts']);\n\n/**\n * It updates the entire resource in the cluster, based on the provided model, data, name, namespace.\n * When a client needs to replace an existing resource entirely, they can use k8sUpdate.\n * Alternatively can use k8sPatch to perform the partial update.\n * @param model k8s model\n * @param data payload for the resource to be updated.\n * @param ns namespace to look into, it should not be specified for cluster-scoped resources.\n * @param name resource name to be updated.\n * @param opts The options to pass\n * @return A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sUpdate = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  data: R,\n  ns?: string,\n  name?: string,\n  opts?: Options,\n): Promise<R> =>\n  coFetchJSON.put(\n    resourceURL(model, {\n      ns: ns || data.metadata.namespace,\n      name: name || data.metadata.name,\n      ...opts,\n    }),\n    data,\n  );\n\n/**\n * It updates the entire resource in the cluster, based on provided options.\n * When a client needs to replace an existing resource entirely, they can use k8sUpdate.\n * Alternatively can use k8sPatch to perform the partial update.\n * @param options which are passed as key-value pair in the map\n * @param options.model k8s model\n * @param options.data payload for the resource to be updated\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @return A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sUpdateResource = adapterFunc(k8sUpdate, ['model', 'data', 'ns', 'name', 'opts']);\n\n/**\n * It patches any resource in the cluster, based on provided model, resource, data.\n * When a client needs to perform the partial update, they can use k8sPatch.\n * Alternatively can use k8sUpdate to replace an existing resource entirely.\n * See more {@link https://datatracker.ietf.org/doc/html/rfc6902}\n * @param model k8s model\n * @param resource The resource to be patched\n * @param data Only the data to be patched on existing resource with the operation, path, and value\n * @param opts The options to pass\n * @return A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sPatch = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  resource: R,\n  data: Patch[],\n  opts: Options = {},\n) => {\n  const patches = _.compact(data);\n\n  if (_.isEmpty(patches)) {\n    return Promise.resolve(resource);\n  }\n\n  return coFetchJSON.patch(\n    resourceURL(\n      model,\n      Object.assign(\n        {\n          ns: resource.metadata.namespace,\n          name: resource.metadata.name,\n        },\n        opts,\n      ),\n    ),\n    patches,\n  );\n};\n\n/**\n * It patches any resource in the cluster, based on provided options.\n * When a client needs to perform the partial update, they can use k8sPatch.\n * Alternatively can use k8sUpdate to replace an existing resource entirely.\n * See more {@link https://datatracker.ietf.org/doc/html/rfc6902}\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model k8s model\n * @param options.resource The resource to be patched.\n * @param options.data Only the data to be patched on existing resource with the operation, path, and value.\n * @param options.path Appends as subpath if provided.\n * @param options.queryParams The query parameters to be included in the URL.\n * @return A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sPatchResource = adapterFunc(k8sPatch, ['model', 'resource', 'data', 'opts']);\n\n/**\n * It deletes resources from the cluster, based on the provided model, resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with propagationPolicy property in provided model or passed in json.\n * See more {@link https://kubernetes.io/docs/concepts/architecture/garbage-collection/}\n * @param model k8s model\n * @param resource The resource to be deleted.\n * @param opts The Options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @param options.json Can control garbage collection of resource explicitly if provided else will default to model's \"propagationPolicy\".\n * @example\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * @return A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sKill = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  resource: R,\n  opts: Options = {},\n  requestInit: RequestInit = {},\n  json: Record<string, any> = null,\n) => {\n  const { propagationPolicy } = model;\n  const jsonData =\n    json ?? (propagationPolicy && { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy });\n  return coFetchJSON.delete(\n    resourceURL(\n      model,\n      Object.assign({ ns: resource.metadata.namespace, name: resource.metadata.name }, opts),\n    ),\n    jsonData,\n    requestInit,\n  );\n};\n\n/**\n * It deletes resources from the cluster, based on the provided model, resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with propagationPolicy property in provided model or passed in json.\n * @param options which are passed as key-value pair in the map.\n * @param options.model k8s model\n * @param options.resource The resource to be deleted.\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @param options.requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @param options.json Can control garbage collection of resources explicitly if provided else will default to model's \"propagationPolicy\".\n * @example\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * @return A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sDeleteResource = adapterFunc(k8sKill, [\n  'model',\n  'resource',\n  'opts',\n  'requestInit',\n  'json',\n]);\n\n/**\n * It lists the resources as an array in the cluster, based on the provided model, queryParams(label selector).\n * @param model k8s model\n * @param queryParams The query parameters to be included in the URL and can pass label selector's as well with key \"labelSelector\".\n * @param raw If true then returns raw data i.e if the query is for Pod then resolved resources will not be in an array but a resource will be returned of kind PodList\n * and it will have a key \"item\" which will be an array of Pod kind.\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response with the resources in an array.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sList = (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  raw = false,\n  requestInit: RequestInit = {},\n) => {\n  const query = _.map(_.omit(queryParams, 'ns'), (v, k) => {\n    let newVal;\n    if (k === 'labelSelector') {\n      newVal = selectorToString(v);\n    }\n    return `${encodeURIComponent(k)}=${encodeURIComponent(newVal ?? v)}`;\n  }).join('&');\n\n  const listURL = resourceURL(model, { ns: queryParams.ns });\n  return coFetchJSON(`${listURL}?${query}`, 'GET', requestInit).then((result) => {\n    const typedItems = result.items?.map((i) => ({\n      kind: model.kind,\n      apiVersion: result.apiVersion,\n      ...i,\n    }));\n    return raw ? { ...result, items: typedItems } : typedItems;\n  });\n};\n\n/**\n * It lists the resources as an array in the cluster, based on provided options.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model k8s model\n * @param options.queryParams The query parameters to be included in the URL and can pass label selector's as well with key \"labelSelector\".\n * @param options.requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response\n * * */\nexport const k8sListResource = adapterFunc(k8sList, ['model', 'queryParams', 'raw', 'requestInit']);\n","import * as _ from 'lodash';\n\nconst isPlainNonReactObject = (obj: any) => _.isPlainObject(obj) && !obj.$$typeof;\n\n/**\n * Recursive equivalent of `_.forOwn` function that traverses plain objects and arrays.\n */\nexport const deepForOwn = <T = any>(\n  obj: {},\n  predicate: (value: any) => value is T,\n  valueCallback: (value: T, key: string, container: {}) => void,\n) => {\n  const visitValue = (value: any, key: string, container: {}) => {\n    if (predicate(value)) {\n      valueCallback(value, key, container);\n    } else if (isPlainNonReactObject(value)) {\n      deepForOwn(value, predicate, valueCallback);\n    }\n  };\n\n  _.forOwn<any>(obj, (value, key, container) => {\n    if (Array.isArray(value)) {\n      value.forEach((arrayElement, index) => {\n        visitValue(arrayElement, index.toString(), value);\n      });\n    } else {\n      visitValue(value, key, container);\n    }\n  });\n};\n","/**\n * Unwrap the result of `Promise.allSettled` call as `[fulfilledValues, rejectedReasons, results]` tuple.\n */\nconst unwrapPromiseSettledResults = <T = any>(\n  results: PromiseSettledResult<T>[],\n): [T[], any[], PromiseSettledResult<T>[]] => {\n  const fulfilledValues = results\n    .filter((r) => r.status === 'fulfilled')\n    .map((r: PromiseFulfilledResult<T>) => r.value);\n\n  const rejectedReasons = results\n    .filter((r) => r.status === 'rejected')\n    .map((r: PromiseRejectedResult) => r.reason);\n\n  return [fulfilledValues, rejectedReasons, results];\n};\n\n/**\n * Await `Promise.allSettled(promises)` and unwrap the resulting objects.\n *\n * `Promise.allSettled` never rejects, therefore the resulting `Promise` never rejects.\n */\nexport const settleAllPromises = async <T = any>(promises: Promise<T>[]) => {\n  const results = await Promise.allSettled(promises);\n  return unwrapPromiseSettledResults(results);\n};\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-require-imports */\n\nimport { SharedModuleResolution, RemoteEntryModule } from './types';\n\nconst modules: SharedModuleResolution = {\n  '@openshift-console/dynamic-plugin-sdk': async () => () =>\n    require('@console/dynamic-plugin-sdk/src/lib-core'),\n  '@openshift/dynamic-plugin-sdk-utils': async () => () =>\n    require('@openshift/dynamic-plugin-sdk-utils'),\n  // '@openshift-console/dynamic-plugin-sdk-internal': async () => () =>\n  //   require('@console/dynamic-plugin-sdk/src/lib-internal'),\n  // '@openshift-console/dynamic-plugin-sdk-internal-kubevirt': async () => () =>\n  //   require('@console/dynamic-plugin-sdk/src/lib-internal-kubevirt'),\n  '@patternfly/react-core': async () => () => require('@patternfly/react-core'),\n  '@patternfly/react-table': async () => () => require('@patternfly/react-table'),\n  react: async () => () => require('react'),\n  'react-helmet': async () => () => require('react-helmet'),\n  'react-i18next': async () => () => require('react-i18next'),\n  'react-router': async () => () => require('react-router'),\n  'react-router-dom': async () => () => require('react-router-dom'),\n};\n\nconst sharedScope = Object.keys(modules).reduce(\n  (acc, moduleRequest) => ({\n    ...acc,\n    [moduleRequest]: {\n      // The '*' semver range means \"this shared module matches all requested versions\",\n      // i.e. make sure the plugin always uses the Console-provided shared module version\n      '*': {\n        get: modules[moduleRequest],\n        // Indicates that Console has already loaded the shared module\n        loaded: true,\n      },\n    },\n  }),\n  {},\n);\n\n/**\n * At runtime, the Console application will initialize shared modules for each\n * dynamic plugin before loading any of the modules exposed by the given plugin.\n *\n * Currently, module sharing is strictly unidirectional (Console -> plugins).\n *\n * Note: `__webpack_init_sharing__` global function is available in webpack 5+ builds.\n * Once Console gets built with webpack 5, evaluate if we need this global in order to\n * allow plugins to attempt to provide shared modules into the application shared scope.\n *\n * @see https://webpack.js.org/concepts/module-federation/#dynamic-remote-containers\n */\nexport const initSharedPluginModules = (entryModule: RemoteEntryModule) => {\n  if (typeof entryModule.override === 'function') {\n    // Support plugins built with webpack 5.0.0-beta.16\n    entryModule.override(modules);\n    return;\n  }\n\n  entryModule.init(sharedScope);\n};\n","/* eslint-disable no-console */\n\nimport * as _ from 'lodash';\nimport { PluginStore } from '@console/plugin-sdk/src/store';\nimport { resolveEncodedCodeRefs } from '../coderefs/coderef-resolver';\nimport { remoteEntryFile } from '../constants';\nimport { ConsolePluginManifestJSON } from '../schema/plugin-manifest';\nimport { initSharedPluginModules } from '../shared-modules-init';\nimport { RemoteEntryModule } from '../types';\nimport { resolveURL } from '../utils/url';\nimport { fetchPluginManifest } from './plugin-manifest';\n\ntype ConsolePluginData = {\n  /** The manifest containing plugin metadata and extension declarations. */\n  manifest: ConsolePluginManifestJSON;\n  /** Indicates if `window.loadPluginEntry` callback has been fired for this plugin. */\n  entryCallbackFired: boolean;\n};\n\nconst pluginMap = new Map<string, ConsolePluginData>();\n\nexport const scriptIDPrefix = 'console-plugin';\n\nexport const getPluginID = (m: ConsolePluginManifestJSON) => `${m.name}@${m.version}`;\n\nexport const getScriptElementID = (m: ConsolePluginManifestJSON) => `${scriptIDPrefix}-${m.name}`;\n\nexport const loadDynamicPlugin = (baseURL: string, manifest: ConsolePluginManifestJSON) =>\n  new Promise<string>((resolve, reject) => {\n    const pluginID = getPluginID(manifest);\n\n    const existingPluginData = Array.from(pluginMap.values()).find(\n      (p) => p.manifest.name === manifest.name,\n    );\n\n    if (existingPluginData) {\n      const existingPluginID = getPluginID(existingPluginData.manifest);\n      reject(new Error(`Attempt to reload plugin ${existingPluginID} with ${pluginID}`));\n      return;\n    }\n\n    pluginMap.set(pluginID, { manifest, entryCallbackFired: false });\n\n    const script = document.createElement('script');\n    script.id = getScriptElementID(manifest);\n    script.src = resolveURL(baseURL, remoteEntryFile);\n    script.async = true;\n\n    script.onload = () => {\n      if (pluginMap.get(pluginID).entryCallbackFired) {\n        resolve(pluginID);\n      } else {\n        reject(new Error(`Entry script for plugin ${pluginID} loaded without callback`));\n      }\n    };\n\n    script.onerror = (event) => {\n      console.error(event);\n      reject(new Error(`Error while loading entry script for plugin ${pluginID}`));\n    };\n\n    console.info(`Loading entry script for plugin ${pluginID} from ${script.src}`);\n    document.head.appendChild(script);\n  });\n\nexport const getPluginEntryCallback = (\n  pluginStore: PluginStore,\n  initSharedPluginModulesCallback: typeof initSharedPluginModules,\n  resolveEncodedCodeRefsCallback: typeof resolveEncodedCodeRefs,\n) => (pluginID: string, entryModule: RemoteEntryModule) => {\n  if (!pluginMap.has(pluginID)) {\n    console.error(`Received callback for unknown plugin ${pluginID}`);\n    return;\n  }\n\n  const pluginData = pluginMap.get(pluginID);\n\n  if (pluginData.entryCallbackFired) {\n    console.error(`Received callback for already loaded plugin ${pluginID}`);\n    return;\n  }\n\n  pluginData.entryCallbackFired = true;\n\n  try {\n    initSharedPluginModulesCallback(entryModule);\n  } catch (error) {\n    console.error(`Failed to initialize shared modules for plugin ${pluginID}`, error);\n    return;\n  }\n\n  const resolvedExtensions = resolveEncodedCodeRefsCallback(\n    pluginData.manifest.extensions,\n    entryModule,\n    pluginID,\n    () => {\n      console.error(`Code reference resolution failed for plugin ${pluginID}`);\n      pluginStore.setDynamicPluginEnabled(pluginID, false);\n    },\n  );\n\n  pluginStore.addDynamicPlugin(pluginID, pluginData.manifest, resolvedExtensions);\n};\n\nexport const registerPluginEntryCallback = (pluginStore: PluginStore) => {\n  const loadPluginEntry = getPluginEntryCallback(\n    pluginStore,\n    initSharedPluginModules,\n    resolveEncodedCodeRefs,\n  );\n  window.__load_plugin_entry__ = loadPluginEntry;\n  window.loadPluginEntry = loadPluginEntry\n};\n\nexport const loadPluginFromURL = async (baseURL: string) => {\n  const manifest = await fetchPluginManifest(baseURL);\n  return loadDynamicPlugin(baseURL, manifest);\n};\n\nexport const loadAndEnablePlugin = async (\n  pluginName: string,\n  pluginStore: PluginStore,\n  onError: VoidFunction = _.noop,\n) => {\n  const url = `${window.SERVER_FLAGS.basePath}api/plugins/${pluginName}/`;\n\n  try {\n    const pluginID = await loadPluginFromURL(url);\n    pluginStore.setDynamicPluginEnabled(pluginID, true);\n  } catch (e) {\n    console.error(`Error while loading plugin from ${url}`, e);\n    onError();\n  }\n};\n\nexport const getStateForTestPurposes = () => ({\n  pluginMap,\n});\n\nexport const resetStateAndEnvForTestPurposes = () => {\n  pluginMap.clear();\n\n  document.querySelectorAll(`[id^=\"${scriptIDPrefix}\"]`).forEach((element) => {\n    element.remove();\n  });\n\n  window.loadPluginEntry = undefined;\n};\n","import * as _ from 'lodash';\nimport { Store } from 'redux';\n// import { RootState } from '@console/internal/redux';\nimport { initSubscriptionService } from '@console/plugin-sdk/src/api/pluginSubscriptionService';\nimport { PluginStore } from '@console/plugin-sdk/src/store';\nimport { registerPluginEntryCallback, /* loadAndEnablePlugin */ } from './plugin-loader';\n\nexport const initConsolePlugins = _.once(\n  (pluginStore: PluginStore, reduxStore: Store/* <RootState> */) => {\n    initSubscriptionService(pluginStore, reduxStore);\n    registerPluginEntryCallback(pluginStore);\n\n    // pluginStore.getAllowedDynamicPluginNames().forEach((pluginName) => {\n    //   loadAndEnablePlugin(pluginName, pluginStore, () => {\n    //     // TODO(vojtech): add new entry into the notification drawer\n    //     pluginStore.registerFailedDynamicPlugin(pluginName);\n    //   });\n    // });\n  },\n);\n","/**\n * This is the entirety of the `redux-thunk` library.\n * It hasn't changed since 2016 and has problems with it's TypeScript definitions\n * (https://github.com/reduxjs/redux-thunk/issues/231), so just including it here.\n */\nfunction createThunkMiddleware(extraArgument?) {\n  return ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState, extraArgument);\n      }\n\n      return next(action);\n    };\n}\n\nconst thunk = createThunkMiddleware();\n(thunk as any).withExtraArgument = createThunkMiddleware;\n\nexport default thunk;\n","import flags from './flags';\n\nexport const baseReducers = Object.freeze({\n  FLAGS: flags,\n});\n","export type FLAGS = { [key: string]: boolean };\n\n/**\n * TODO: Use the regular flags reducer\n */\nconst flags = (state: FLAGS, action): FLAGS => {\n  if (!state) {\n    return {};\n  }\n\n  switch (action.type) {\n    case 'setFlag':\n      return (state[action.payload.flag] = action.payload.value);\n    default:\n      return state;\n  }\n};\n\nexport default flags;\n","import { applyMiddleware, combineReducers, compose, createStore, Store } from 'redux';\nimport thunk from './middleware/thunk';\nimport { baseReducers } from './reducers';\nimport { RootState } from './types';\n\nconst composeEnhancers = (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nlet cachedStore: Store<RootState> = null;\nconst useReduxStore = (): Store<RootState> => {\n  if (!cachedStore) {\n    const store = createStore(combineReducers<RootState>(baseReducers), {}, composeEnhancers(applyMiddleware(thunk)));\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Expose Redux store for debugging\n      window.store = store;\n    }\n\n    cachedStore = store;\n  }\n\n  return cachedStore;\n};\n\nexport default useReduxStore;\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { initConsolePlugins } from '@console/dynamic-plugin-sdk/src/runtime/plugin-init';\nimport { /* ActivePlugin, */ PluginStore } from '@console/plugin-sdk';\nimport { useReduxStore } from '../../redux';\nimport { getEnabledDynamicPluginNames } from './utils';\nimport { loadDynamicPlugin } from '@console/dynamic-plugin-sdk/src/runtime/plugin-loader';\n\nexport type EnabledPlugin = {\n  name: string;\n  pathPrefix?: string;\n};\n\ntype PluginProps = {\n  enabledPlugins?: EnabledPlugin[];\n  onPluginRegister?: Function;\n  base?: String;\n};\n\nconst IncludePlugins = ({ enabledPlugins, onPluginRegister = noop, base }: PluginProps) => {\n  const [pluginStore, setPluginStore] = React.useState<PluginStore>();\n  const store = useReduxStore();\n\n  React.useEffect(() => {\n    if (pluginStore) {\n      enabledPlugins &&\n        enabledPlugins.forEach(async ({ name: item, pathPrefix = '/api/plugins' }) => {\n          const manifest = await (await fetch(`${base}${pathPrefix}/${item}/plugin-manifest.json`)).json();\n          loadDynamicPlugin(`${base}${pathPrefix}/${item}/`, manifest).then((pluginName) => {\n            pluginStore.setDynamicPluginEnabled(pluginName, true);\n          });\n        });\n    }\n  }, [enabledPlugins, pluginStore]);\n\n  React.useEffect(() => {\n    if (store) {\n      const activePlugins = [];\n      // process.env.NODE_ENV !== 'test'\n      //   ? /* eslint-disable global-require, @typescript-eslint/no-require-imports */\n      //     // eslint-disable-next-line import/no-unresolved\n      //     (require('@console/active-plugins').default as ActivePlugin[])\n      //   : [];\n      const dynamicPluginNames = getEnabledDynamicPluginNames();\n      const initialPluginStore = new PluginStore(activePlugins, dynamicPluginNames);\n\n      initConsolePlugins(initialPluginStore, store, onPluginRegister);\n      setPluginStore(initialPluginStore);\n    }\n  }, [onPluginRegister, store]);\n\n  return null;\n};\n\nexport default IncludePlugins;\n","import * as _ from 'lodash';\n\n/**\n * Resolve URL string using `base` and `to` URLs.\n *\n * If `base` is missing the protocol, it's considered to be relative to document origin.\n *\n * @param base Base URL.\n * @param to Target resource URL.\n * @param options Resolution options.\n */\nexport const resolveURL = (\n  base: string,\n  to: string,\n  getDocumentOrigin: () => string = _.constant(window.location.origin),\n) => {\n  const baseAbsoluteURL = base.indexOf('://') === -1 ? getDocumentOrigin() + base : base;\n  return new URL(to, baseAbsoluteURL).toString();\n};\n","export const extensionsFile = 'console-extensions.json';\nexport const pluginManifestFile = 'plugin-manifest.json';\nexport const remoteEntryFile = 'plugin-entry.js';\n","import compact from 'lodash/compact';\n\n/** TODO: Copied right now -- duplicate definition */\nconst getURLSearchParams = () => {\n  const all: any = {};\n  const params = new URLSearchParams(window.location.search);\n\n  for (const [k, v] of params.entries()) {\n    all[k] = v;\n  }\n\n  return all;\n};\n\nexport const getEnabledDynamicPluginNames = () => {\n  const allPluginNames = window.SERVER_FLAGS.consolePlugins;\n  const disabledPlugins = getURLSearchParams()['disable-plugins'];\n\n  if (!disabledPlugins) {\n    return allPluginNames;\n  }\n\n  if (disabledPlugins === '') {\n    return [];\n  }\n\n  const disabledPluginNames = compact(disabledPlugins.split(','));\n  return allPluginNames.filter((pluginName) => !disabledPluginNames.includes(pluginName));\n};\n","import * as _ from 'lodash';\nimport { Store } from 'redux';\n// import { RootState } from '@console/internal/redux';\nimport { isExtensionInUse, PluginStore, DynamicPluginInfo } from '../store';\nimport { Extension, ExtensionTypeGuard, LoadedExtension } from '../typings';\n\nlet subscriptionServiceInitialized = false;\n\nconst extensionSubscriptions: ExtensionSubscription[] = [];\nconst dynamicPluginListeners: DynamicPluginListener[] = [];\n\nlet onExtensionSubscriptionAdded: (sub: ExtensionSubscription) => void = _.noop;\nlet onDynamicPluginListenerAdded: (listener: DynamicPluginListener) => void = _.noop;\n\nconst subscribe = <T>(sub: T, subList: T[], invokeListener: VoidFunction): VoidFunction => {\n  let isSubscribed = true;\n\n  subList.push(sub);\n  invokeListener();\n\n  return () => {\n    if (isSubscribed) {\n      isSubscribed = false;\n      subList.splice(subList.indexOf(sub), 1);\n    }\n  };\n};\n\nexport const initSubscriptionService = (pluginStore: PluginStore, reduxStore: Store/* <RootState> */) => {\n  if (subscriptionServiceInitialized) {\n    throw new Error('Subscription service is already initialized');\n  }\n\n  subscriptionServiceInitialized = true;\n\n  const getExtensionsInUse = () => pluginStore.getExtensionsInUse();\n  const getFlags = () => reduxStore.getState().FLAGS;\n\n  type FeatureFlags = ReturnType<typeof getFlags>;\n\n  const invokeExtensionListener = (\n    sub: ExtensionSubscription,\n    currentExtensions: Extension[],\n    currentFlags: FeatureFlags,\n  ) => {\n    // Narrow extensions according to type guards\n    const matchedExtensions = _.flatMap(sub.typeGuards.map((tg) => currentExtensions.filter(tg)));\n\n    // Gate matched extensions by relevant feature flags\n    const extensionsInUse = matchedExtensions.filter((e) =>\n      isExtensionInUse(e, currentFlags),\n    );\n\n    // Invoke listener only if the extension list has changed\n    if (!_.isEqual(extensionsInUse, sub.listenerLastArgs)) {\n      sub.listenerLastArgs = extensionsInUse;\n      sub.listener(extensionsInUse);\n    }\n  };\n\n  onExtensionSubscriptionAdded = (sub) => {\n    invokeExtensionListener(sub, getExtensionsInUse(), getFlags());\n  };\n\n  onDynamicPluginListenerAdded = (listener) => {\n    listener(pluginStore.getDynamicPluginInfo());\n  };\n\n  let lastExtensions: Extension[] = null;\n  let lastFlags: FeatureFlags = null;\n\n  const invokeAllExtensionListeners = () => {\n    if (extensionSubscriptions.length === 0) {\n      return;\n    }\n\n    const nextExtensions = getExtensionsInUse();\n    const nextFlags = getFlags();\n\n    if (_.isEqual(nextExtensions, lastExtensions) && nextFlags === lastFlags) {\n      return;\n    }\n\n    lastExtensions = nextExtensions;\n    lastFlags = nextFlags;\n\n    extensionSubscriptions.forEach((sub) => {\n      invokeExtensionListener(sub, nextExtensions, nextFlags);\n    });\n  };\n\n  let lastPluginEntries: DynamicPluginInfo[] = null;\n\n  const invokeAllDynamicPluginListeners = () => {\n    if (dynamicPluginListeners.length === 0) {\n      return;\n    }\n\n    const nextPluginEntries = pluginStore.getDynamicPluginInfo();\n\n    if (_.isEqual(nextPluginEntries, lastPluginEntries)) {\n      return;\n    }\n\n    lastPluginEntries = nextPluginEntries;\n\n    dynamicPluginListeners.forEach((listener) => {\n      listener(nextPluginEntries);\n    });\n  };\n\n  // Subscribe to changes in Console plugins and Redux\n  pluginStore.subscribe(invokeAllExtensionListeners);\n  pluginStore.subscribe(invokeAllDynamicPluginListeners);\n  reduxStore.subscribe(invokeAllExtensionListeners);\n\n  // Invoke listeners registered prior to initializing subscription service\n  invokeAllExtensionListeners();\n  invokeAllDynamicPluginListeners();\n};\n\n/**\n * Subscription based mechanism for consuming Console extensions.\n *\n * Provided listener will be invoked immediately to allow processing existing extensions.\n * It will also be invoked whenever the computed list of extension instances changes.\n *\n * _Tip: need to access extensions in a React component?_\n * - **Yes**\n *   - Functional components: use `useExtensions` hook.\n *   - Class components: use `withExtensions` higher-order component.\n * - **No**\n *   - Use `subscribeToExtensions` function.\n *\n * @param listener Listener invoked when the list of extension instances which are\n * currently in use, narrowed by the given type guard(s), changes.\n *\n * @param typeGuards Type guard(s) used to narrow the extension instances.\n *\n * @returns Function that unsubscribes the listener.\n */\nexport const subscribeToExtensions = <E extends Extension>(\n  listener: ExtensionListener<LoadedExtension<E>>,\n  ...typeGuards: ExtensionTypeGuard<E>[]\n) => {\n  if (typeGuards.length === 0) {\n    throw new Error('You must pass at least one type guard to subscribeToExtensions');\n  }\n\n  const sub: ExtensionSubscription<E> = { listener, typeGuards };\n\n  return subscribe<ExtensionSubscription>(sub, extensionSubscriptions, () => {\n    onExtensionSubscriptionAdded(sub);\n  });\n};\n\n/**\n * Subscribe to changes related to processing Console dynamic plugins.\n *\n * @param listener Listener invoked when the runtime status of a dynamic plugin changes.\n *\n * @returns Function that unsubscribes the listener.\n */\nexport const subscribeToDynamicPlugins = (listener: DynamicPluginListener) => {\n  return subscribe<DynamicPluginListener>(listener, dynamicPluginListeners, () => {\n    onDynamicPluginListenerAdded(listener);\n  });\n};\n\n/**\n * `ExtensionListener` adapter that computes the difference between the calls.\n */\nexport const extensionDiffListener = <E extends Extension>(\n  listener: (added: E[], removed: E[]) => void,\n): ExtensionListener<E> => {\n  let prevExtensions: E[] = [];\n\n  return (nextExtensions: E[]) => {\n    listener(\n      _.difference(nextExtensions, prevExtensions),\n      _.difference(prevExtensions, nextExtensions),\n    );\n\n    prevExtensions = nextExtensions;\n  };\n};\n\ntype ExtensionListener<E extends Extension> = (extensions: E[]) => void;\n\ntype ExtensionSubscription<E extends Extension = Extension> = {\n  listener: ExtensionListener<E>;\n  typeGuards: ExtensionTypeGuard<E>[];\n  listenerLastArgs?: E[];\n};\n\ntype DynamicPluginListener = (pluginInfoEntries: DynamicPluginInfo[]) => void;\n","// import { TFunction } from 'i18next';\nimport { deepForOwn } from '@console/dynamic-plugin-sdk/src/utils/object';\nimport { Extension } from '../typings';\n\nexport const isTranslatableString = (value): value is string => {\n  return (\n    typeof value === 'string' && value.length > 2 && value.startsWith('%') && value.endsWith('%')\n  );\n};\n\nexport const getTranslationKey = (value: string) =>\n  isTranslatableString(value) ? value.substr(1, value.length - 2) : undefined;\n\n/**\n * Recursively updates the extension's properties, replacing all translatable string values\n * via the provided `t` function.\n */\nexport const translateExtension = <E extends Extension>(extension: E, t: (t: string) => string): E => {\n  deepForOwn(extension.properties, isTranslatableString, (value, key, obj) => {\n    obj[key] = t(value);\n  });\n\n  return extension;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Extension, ExtensionTypeGuard, LoadedExtension } from '../typings';\nimport { translateExtension } from '../utils/extension-i18n';\n// import useTranslationExt from '../utils/useTranslationExt';\nimport { subscribeToExtensions } from './pluginSubscriptionService';\n\n// Copied from '@console/shared/src/hooks/useForceRender'\nconst useForceRender = () => React.useReducer((s: boolean) => !s, false)[1] as VoidFunction;\n\n/**\n * React hook for consuming Console extensions.\n *\n * This hook takes extension type guard(s) as its argument(s) and returns a list\n * of extension instances, narrowed by the given type guard(s), which are currently\n * in use.\n *\n * An extension is considered to be in use when\n *\n * - it is an always-on extension, i.e. not gated by any feature flags\n * - all feature flags referenced by its `flags` object are resolved to the right\n *   values\n *\n * When the list of matching extensions changes, the React component is re-rendered\n * with the hook returning an up-to-date list of extensions.\n *\n * Example usage:\n *\n * ```ts\n * const Example = () => {\n *   const navItemExtensions = useExtensions<NavItem>(isNavItem);\n *   // process extensions and render your component\n * };\n * ```\n *\n * The hook's result is guaranteed to be referentially stable across re-renders.\n *\n * @param typeGuards Type guard(s) used to narrow the extension instances.\n *\n * @returns List of extension instances which are currently in use, narrowed by the\n * given type guard(s).\n */\nexport const useExtensions = <E extends Extension>(\n  ...typeGuards: ExtensionTypeGuard<E>[]\n): LoadedExtension<E>[] => {\n  if (typeGuards.length === 0) {\n    throw new Error('You must pass at least one type guard to useExtensions');\n  }\n\n  const forceRender = useForceRender();\n\n  const isMountedRef = React.useRef(true);\n  const unsubscribeRef = React.useRef<VoidFunction>(null);\n  const extensionsInUseRef = React.useRef<LoadedExtension<E>[]>([]);\n  const latestTypeGuardsRef = React.useRef<ExtensionTypeGuard<E>[]>(typeGuards);\n  // const { t } = useTranslationExt();\n  const t = (v) => v;\n\n  const trySubscribe = React.useCallback(() => {\n    if (unsubscribeRef.current === null) {\n      unsubscribeRef.current = subscribeToExtensions<E>((extensions) => {\n        extensionsInUseRef.current = extensions.map((e) => translateExtension(e, t));\n        isMountedRef.current && forceRender();\n      }, ...latestTypeGuardsRef.current);\n    }\n  }, [forceRender, t]);\n\n  const tryUnsubscribe = React.useCallback(() => {\n    if (unsubscribeRef.current !== null) {\n      unsubscribeRef.current();\n      unsubscribeRef.current = null;\n    }\n  }, []);\n\n  if (!_.isEqual(latestTypeGuardsRef.current, typeGuards)) {\n    latestTypeGuardsRef.current = typeGuards;\n    tryUnsubscribe();\n  }\n\n  trySubscribe();\n\n  React.useEffect(\n    () => () => {\n      isMountedRef.current = false;\n      tryUnsubscribe();\n    },\n    [tryUnsubscribe],\n  );\n\n  return extensionsInUseRef.current;\n};\n","/* eslint-disable no-console */\n\nimport * as _ from 'lodash';\nimport { ConsolePluginManifestJSON } from '@console/dynamic-plugin-sdk/src/schema/plugin-manifest';\nimport { Extension, LoadedExtension, ActivePlugin } from './typings';\n\nexport const sanitizeExtension = <E extends Extension>(e: E): E => {\n  e.flags = e.flags || {};\n  e.flags.required = _.uniq(e.flags.required || []);\n  e.flags.disallowed = _.uniq(e.flags.disallowed || []);\n  return e;\n};\n\nexport const augmentExtension = <E extends Extension>(\n  e: E,\n  pluginID: string,\n  pluginName: string,\n  index: number,\n): LoadedExtension<E> =>\n  Object.assign(e, {\n    pluginID,\n    pluginName,\n    uid: `${pluginID}[${index}]`,\n  });\n\nexport const isExtensionInUse = (e: Extension, flags: FlagsObject): boolean =>\n  e.flags.required.every((f) => flags[f] === true) &&\n  e.flags.disallowed.every((f) => flags[f] === false);\n\nexport const getGatingFlagNames = (extensions: Extension[]): string[] =>\n  _.uniq([\n    ..._.flatMap(extensions.map((e) => e.flags.required)),\n    ..._.flatMap(extensions.map((e) => e.flags.disallowed)),\n  ]);\n\n/**\n * Provides access to Console plugins and their extensions.\n *\n * Only plugins listed via `allowedDynamicPluginNames` can be added dynamically at runtime.\n *\n * Subscribed `listeners` are invoked upon any of the following events:\n *\n * - when the list of extensions which are currently in use changes\n * - when the runtime status of a dynamic plugin changes\n *\n * In development, this object is exposed as `window.pluginStore` for easier debugging.\n */\nexport class PluginStore {\n  // Extensions contributed by static plugins which are currently in use\n  private staticPluginExtensions: LoadedExtension[];\n\n  // Extensions contributed by dynamic plugins which are currently in use\n  private dynamicPluginExtensions: LoadedExtension[];\n\n  private readonly staticPlugins: StaticPlugin[];\n\n  // Static plugins that were disabled by loading replacement dynamic plugins\n  private readonly disabledStaticPluginNames = new Set<string>();\n\n  private readonly allowedDynamicPluginNames: Set<string>;\n\n  // Dynamic plugins that were loaded successfully\n  private readonly loadedDynamicPlugins = new Map<string, LoadedDynamicPlugin>();\n\n  // Dynamic plugins that failed to load properly\n  private readonly failedDynamicPluginNames = new Set<string>();\n\n  private readonly listeners: VoidFunction[] = [];\n\n  constructor(staticPlugins: ActivePlugin[] = [], allowedDynamicPluginNames: string[] = []) {\n    this.staticPlugins = staticPlugins.map((plugin) => ({\n      name: plugin.name,\n      extensions: plugin.extensions.map((e, index) =>\n        Object.freeze(\n          augmentExtension(sanitizeExtension({ ...e }), plugin.name, plugin.name, index),\n        ),\n      ),\n    }));\n\n    this.allowedDynamicPluginNames = new Set(allowedDynamicPluginNames);\n    this.updateExtensions();\n  }\n\n  getExtensionsInUse() {\n    return [...this.staticPluginExtensions, ...this.dynamicPluginExtensions];\n  }\n\n  getAllowedDynamicPluginNames() {\n    return Array.from(this.allowedDynamicPluginNames);\n  }\n\n  subscribe(listener: VoidFunction): VoidFunction {\n    let isSubscribed = true;\n    this.listeners.push(listener);\n\n    return () => {\n      if (isSubscribed) {\n        isSubscribed = false;\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n      }\n    };\n  }\n\n  private invokeListeners() {\n    this.listeners.forEach((listener) => {\n      listener();\n    });\n  }\n\n  addDynamicPlugin(\n    pluginID: string,\n    manifest: ConsolePluginManifestJSON,\n    resolvedExtensions: Extension[],\n  ) {\n    if (this.loadedDynamicPlugins.has(pluginID)) {\n      console.warn(`Attempt to re-add plugin ${pluginID}`);\n      return;\n    }\n\n    if (!this.allowedDynamicPluginNames.has(manifest.name)) {\n      console.warn(`Attempt to add unexpected plugin ${pluginID}`);\n      return;\n    }\n\n    if (this.failedDynamicPluginNames.has(manifest.name)) {\n      console.warn(`Attempt to add plugin ${pluginID} previously marked as failed`);\n      return;\n    }\n\n    this.loadedDynamicPlugins.set(pluginID, {\n      manifest: Object.freeze(manifest),\n      processedExtensions: resolvedExtensions.map((e, index) =>\n        Object.freeze(augmentExtension(sanitizeExtension(e), pluginID, manifest.name, index)),\n      ),\n      enabled: false,\n    });\n\n    (manifest.disableStaticPlugins || [])\n      .filter(\n        (pluginName) =>\n          !this.disabledStaticPluginNames.has(pluginName) &&\n          this.staticPlugins.some((plugin) => plugin.name === pluginName),\n      )\n      .forEach((pluginName) => {\n        console.log(`Static plugin ${pluginName} will be disabled`);\n        this.disabledStaticPluginNames.add(pluginName);\n      });\n\n    this.updateExtensions();\n    this.invokeListeners();\n\n    console.log(`Added plugin ${pluginID}`);\n  }\n\n  private updateExtensions() {\n    const dynamicPlugins = Array.from(this.loadedDynamicPlugins.values());\n\n    this.staticPluginExtensions = this.staticPlugins\n      .filter((plugin) => !this.disabledStaticPluginNames.has(plugin.name))\n      .reduce((acc, plugin) => [...acc, ...plugin.extensions], [] as LoadedExtension[]);\n\n    this.dynamicPluginExtensions = dynamicPlugins.reduce(\n      (acc, plugin) => (plugin.enabled ? [...acc, ...plugin.processedExtensions] : acc),\n      [] as LoadedExtension[],\n    );\n  }\n\n  setDynamicPluginEnabled(pluginID: string, enabled: boolean) {\n    if (!this.loadedDynamicPlugins.has(pluginID)) {\n      console.warn(\n        `Attempt to ${\n          enabled ? 'enable' : 'disable'\n        } plugin ${pluginID} that has not been loaded yet`,\n      );\n      return;\n    }\n\n    const plugin = this.loadedDynamicPlugins.get(pluginID);\n\n    if (plugin.enabled !== enabled) {\n      plugin.enabled = enabled;\n\n      this.updateExtensions();\n      this.invokeListeners();\n\n      console.log(`Plugin ${pluginID} is now ${enabled ? 'enabled' : 'disabled'}`);\n    }\n  }\n\n  private isDynamicPluginLoaded(pluginName: string) {\n    return Array.from(this.loadedDynamicPlugins.values()).some(\n      (plugin) => plugin.manifest.name === pluginName,\n    );\n  }\n\n  registerFailedDynamicPlugin(pluginName: string) {\n    if (!this.allowedDynamicPluginNames.has(pluginName)) {\n      console.warn(`Attempt to register unexpected plugin ${pluginName} as failed`);\n      return;\n    }\n\n    if (this.isDynamicPluginLoaded(pluginName)) {\n      console.warn(`Attempt to register an already loaded plugin ${pluginName} as failed`);\n      return;\n    }\n\n    this.failedDynamicPluginNames.add(pluginName);\n    this.invokeListeners();\n  }\n\n  getDynamicPluginInfo(): DynamicPluginInfo[] {\n    const loadedPluginEntries = Array.from(this.loadedDynamicPlugins.keys()).reduce(\n      (acc, pluginID) => {\n        const plugin = this.loadedDynamicPlugins.get(pluginID);\n        acc.push({\n          status: 'Loaded',\n          pluginID,\n          metadata: _.omit(plugin.manifest, 'extensions'),\n          enabled: plugin.enabled,\n        });\n        return acc;\n      },\n      [] as LoadedDynamicPluginInfo[],\n    );\n\n    const failedPluginEntries = Array.from(this.failedDynamicPluginNames.values()).reduce(\n      (acc, pluginName) => {\n        acc.push({\n          status: 'Failed',\n          pluginName,\n        });\n        return acc;\n      },\n      [] as NotLoadedDynamicPluginInfo[],\n    );\n\n    const pendingPluginEntries = Array.from(this.allowedDynamicPluginNames.values())\n      .filter(\n        (pluginName) =>\n          !this.isDynamicPluginLoaded(pluginName) && !this.failedDynamicPluginNames.has(pluginName),\n      )\n      .reduce((acc, pluginName) => {\n        acc.push({\n          status: 'Pending',\n          pluginName,\n        });\n        return acc;\n      }, [] as NotLoadedDynamicPluginInfo[]);\n\n    return [...loadedPluginEntries, ...failedPluginEntries, ...pendingPluginEntries];\n  }\n\n  getStateForTestPurposes() {\n    return {\n      staticPluginExtensions: this.staticPluginExtensions,\n      dynamicPluginExtensions: this.dynamicPluginExtensions,\n      staticPlugins: this.staticPlugins,\n      disabledStaticPluginNames: this.disabledStaticPluginNames,\n      loadedDynamicPlugins: this.loadedDynamicPlugins,\n      failedDynamicPluginNames: this.failedDynamicPluginNames,\n      listeners: this.listeners,\n    };\n  }\n}\n\ntype FlagsObject = { [key: string]: boolean };\n\ntype StaticPlugin = {\n  name: string;\n  extensions: LoadedExtension[];\n};\n\ntype DynamicPluginManifest = Readonly<ConsolePluginManifestJSON>;\n\ntype DynamicPluginMetadata = Omit<DynamicPluginManifest, 'extensions'>;\n\ntype LoadedDynamicPlugin = {\n  manifest: DynamicPluginManifest;\n  processedExtensions: Readonly<LoadedExtension[]>;\n  enabled: boolean;\n};\n\nexport type LoadedDynamicPluginInfo = {\n  status: 'Loaded';\n  pluginID: string;\n  metadata: DynamicPluginMetadata;\n  enabled: boolean;\n};\n\nexport type NotLoadedDynamicPluginInfo = {\n  status: 'Pending' | 'Failed';\n  pluginName: string;\n};\n\nexport type DynamicPluginInfo = LoadedDynamicPluginInfo | NotLoadedDynamicPluginInfo;\n\nexport const isLoadedDynamicPluginInfo = (i: DynamicPluginInfo): i is LoadedDynamicPluginInfo =>\n  i.status === 'Loaded';\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware.filter(Boolean),\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","exports.default = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"extensions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/SupportedExtension\"\n      },\n      \"description\": \"List of extensions contributed by the plugin.\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Plugin name. Should be the same as `metadata.name` of the corresponding `ConsolePlugin` resource used to represent the plugin on the cluster.\"\n    },\n    \"version\": {\n      \"type\": \"string\",\n      \"description\": \"Plugin version. Must be semver compliant.\"\n    },\n    \"displayName\": {\n      \"type\": \"string\",\n      \"description\": \"User-friendly plugin name.\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"User-friendly plugin description.\"\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"@console/pluginAPI\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"@console/pluginAPI\"\n      ],\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Plugin API and other plugins required for this plugin to work.\"\n    },\n    \"disableStaticPlugins\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Disable the given static plugins when this plugin gets loaded.\"\n    }\n  },\n  \"required\": [\n    \"dependencies\",\n    \"extensions\",\n    \"name\",\n    \"version\"\n  ],\n  \"description\": \"Schema of Console plugin's `plugin-manifest.json` file.\",\n  \"definitions\": {\n    \"SupportedExtension\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/FeatureFlag\"\n        },\n        {\n          \"$ref\": \"#/definitions/ModelFeatureFlag\"\n        },\n        {\n          \"$ref\": \"#/definitions/ReduxReducer\"\n        },\n        {\n          \"$ref\": \"#/definitions/ContextProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/StandaloneRoutePage\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCCreateProp\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCStatus\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCAlert\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCDelete\"\n        },\n        {\n          \"$ref\": \"#/definitions/YAMLTemplate\"\n        },\n        {\n          \"$ref\": \"#/definitions/AddAction\"\n        },\n        {\n          \"$ref\": \"#/definitions/AddActionGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/ClusterGlobalConfig\"\n        },\n        {\n          \"$ref\": \"#/definitions/HrefNavItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceNSNavItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceClusterNavItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/Separator\"\n        },\n        {\n          \"$ref\": \"#/definitions/NavSection\"\n        },\n        {\n          \"$ref\": \"#/definitions/FileUpload\"\n        },\n        {\n          \"$ref\": \"#/definitions/ModelMetadata\"\n        },\n        {\n          \"$ref\": \"#/definitions/AlertAction\"\n        },\n        {\n          \"$ref\": \"#/definitions/StorageProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/TelemetryListener\"\n        },\n        {\n          \"$ref\": \"#/definitions/SupportedCatalogExtensions\"\n        },\n        {\n          \"$ref\": \"#/definitions/SupportedActionExtensions\"\n        },\n        {\n          \"$ref\": \"#/definitions/SupportedTopologyDetailsExtensions\"\n        },\n        {\n          \"$ref\": \"#/definitions/RoutePage\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceListPage\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceTabPage\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceDetailsPage\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsTab\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsCard\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthPrometheusSubsystem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthURLSubsystem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthResourceSubsystem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthOperator\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsInventoryItemGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewInventoryItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewResourceActivity\"\n        },\n        {\n          \"$ref\": \"#/definitions/TopologyDecoratorProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/TopologyRelationshipProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/CreateResource\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/Perspective\"\n        },\n        {\n          \"$ref\": \"#/definitions/HorizontalNavTab\"\n        }\n      ]\n    },\n    \"FeatureFlag\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.flag\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Used to set/unset arbitrary feature flags.\"\n            }\n          },\n          \"required\": [\n            \"handler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Gives full control over Console feature flags.\"\n    },\n    \"EncodedCodeRef\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"$codeRef\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"$codeRef\"\n      ],\n      \"additionalProperties\": false,\n      \"description\": \"Code reference, encoded as an object literal.\\n\\nThe value of the `$codeRef` property should be formatted as `moduleName.exportName` (referring to a named export) or `moduleName` (referring to the `default` export).\"\n    },\n    \"ExtensionFlags\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"required\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"disallowed\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"Console feature flags used to gate extension instances.\"\n    },\n    \"ModelFeatureFlag\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.flag/model\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"flag\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the flag to set once the CRD is detected.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model which refers to a `CustomResourceDefinition`.\"\n            }\n          },\n          \"required\": [\n            \"flag\",\n            \"model\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new Console feature flag driven by the presence of a CRD on the cluster.\"\n    },\n    \"ExtensionK8sModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"group\",\n        \"version\",\n        \"kind\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"ReduxReducer\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.redux-reducer\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"scope\": {\n              \"type\": \"string\",\n              \"description\": \"The key to represent the reducer-managed substate within the Redux state object.\"\n            },\n            \"reducer\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The reducer function, operating on the reducer-managed substate.\"\n            }\n          },\n          \"required\": [\n            \"scope\",\n            \"reducer\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new reducer to Console Redux store which operates on `plugins.<scope>` substate.\"\n    },\n    \"ContextProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.context-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Context Provider component.\"\n            },\n            \"useValueHook\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Hook for the Context value.\"\n            }\n          },\n          \"required\": [\n            \"provider\",\n            \"useValueHook\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new React context provider to Console application root.\"\n    },\n    \"StandaloneRoutePage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/route/standalone\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            },\n            \"path\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Valid URL path or array of paths that `path-to-regexp@^1.7.0` understands.\"\n            },\n            \"exact\": {\n              \"type\": \"boolean\",\n              \"description\": \"When true, will only match if the path matches the `location.pathname` exactly.\"\n            },\n            \"className\": {\n              \"type\": \"string\",\n              \"description\": \"Option to add custom className to wrapper component\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"path\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new standalone page (rendered outside the common page layout) to Console router.\"\n    },\n    \"PVCCreateProp\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/create-prop\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"Label for the create prop action.\"\n            },\n            \"path\": {\n              \"type\": \"string\",\n              \"description\": \"Path for the create prop action.\"\n            }\n          },\n          \"required\": [\n            \"label\",\n            \"path\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"PVCStatus\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/status\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"priority\": {\n              \"type\": \"number\",\n              \"description\": \"Priority for the status component. Bigger value means higher priority.\"\n            },\n            \"status\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The status component.\"\n            },\n            \"predicate\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Predicate that tells whether to render the status component or not.\"\n            }\n          },\n          \"required\": [\n            \"priority\",\n            \"status\",\n            \"predicate\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"PVCAlert\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/alert\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"alert\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The alert component.\"\n            }\n          },\n          \"required\": [\n            \"alert\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"PVCDelete\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/delete\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"predicate\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Predicate that tells whether to use the extension or not.\"\n            },\n            \"onPVCKill\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Method for the PVC delete operation.\"\n            },\n            \"alert\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Alert component to show additional information.\"\n            }\n          },\n          \"required\": [\n            \"predicate\",\n            \"onPVCKill\",\n            \"alert\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"YAMLTemplate\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.yaml-template\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"Model associated with the template.\"\n            },\n            \"template\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The YAML template.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the template. Use the name `default` to mark this as the default template.\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"template\",\n            \"name\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"YAML templates for editing resources via the yaml editor.\"\n    },\n    \"AddAction\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"dev-console.add/action\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the action.\"\n            },\n            \"groupId\": {\n              \"type\": \"string\",\n              \"description\": \"IDs used to identify the action groups the action would belong to.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label of the action\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"The description of the action.\"\n            },\n            \"href\": {\n              \"type\": \"string\",\n              \"description\": \"The href to navigate to.\"\n            },\n            \"icon\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The perspective display icon.\"\n            },\n            \"accessReview\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/AccessReviewResourceAttributes\"\n              },\n              \"description\": \"Optional access review to control visibility / enablement of the action.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\",\n            \"description\",\n            \"href\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"AccessReviewResourceAttributes\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"resource\": {\n          \"type\": \"string\"\n        },\n        \"subresource\": {\n          \"type\": \"string\"\n        },\n        \"verb\": {\n          \"$ref\": \"#/definitions/K8sVerb\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"namespace\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"K8sVerb\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"create\",\n        \"get\",\n        \"list\",\n        \"update\",\n        \"patch\",\n        \"delete\",\n        \"deletecollection\",\n        \"watch\"\n      ]\n    },\n    \"AddActionGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"dev-console.add/action-group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the action group.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the action group\"\n            },\n            \"insertBefore\": {\n              \"type\": \"string\",\n              \"description\": \"ID of action group before which this group should be placed\"\n            },\n            \"insertAfter\": {\n              \"type\": \"string\",\n              \"description\": \"ID of action group after which this group should be placed\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ClusterGlobalConfig\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.global-config\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier for the cluster config resource instance.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the cluster config resource instance.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model which refers to a cluster config resource.\"\n            },\n            \"namespace\": {\n              \"type\": \"string\",\n              \"description\": \"The namespace of the cluster config resource instance.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"model\",\n            \"namespace\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"HrefNavItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/href\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of this item.\"\n            },\n            \"href\": {\n              \"type\": \"string\",\n              \"description\": \"The link href value.\"\n            },\n            \"namespaced\": {\n              \"type\": \"boolean\",\n              \"description\": \"if true, adds /ns/active-namespace to the end\"\n            },\n            \"prefixNamespaced\": {\n              \"type\": \"boolean\",\n              \"description\": \"if true, adds /k8s/ns/active-namespace to the begining\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"startsWith\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Mark this item as active when the URL starts with one of these paths.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"href\",\n            \"id\",\n            \"name\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ResourceNSNavItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/resource-ns\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Overrides the default name. If not supplied the name of the link will equal the plural value of the model.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model for which this nav item links to.\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"startsWith\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Mark this item as active when the URL starts with one of these paths.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ResourceClusterNavItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/resource-cluster\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Overrides the default name. If not supplied the name of the link will equal the plural value of the model.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model for which this nav item links to.\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"startsWith\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Mark this item as active when the URL starts with one of these paths.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"Separator\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/separator\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"NavSection\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/section\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Name of this section. If not supplied, only a separator will be shown above the section.\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"FileUpload\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.file-upload\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"fileExtensions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Supported file extensions.\"\n            },\n            \"handler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Function which handles the file drop action.\"\n            }\n          },\n          \"required\": [\n            \"fileExtensions\",\n            \"handler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ModelMetadata\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.resource-metadata\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupModel\",\n              \"description\": \"The model to customize. May specify only a group, or optional version and kind.\"\n            },\n            \"badge\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"tech\",\n                \"dev\"\n              ],\n              \"description\": \"Whether to consider this model reference as tech preview or dev preview.\"\n            },\n            \"color\": {\n              \"type\": \"string\",\n              \"description\": \"The color to associate to this model.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"Override the label. Requires `kind` be provided.\"\n            },\n            \"labelPlural\": {\n              \"type\": \"string\",\n              \"description\": \"Override the plural label. Requires `kind` be provided.\"\n            },\n            \"abbr\": {\n              \"type\": \"string\",\n              \"description\": \"Customize the abbreviation. Defaults to All uppercase chars in the kind up to 4 characters long. Requires `kind` be provided.\"\n            }\n          },\n          \"required\": [\n            \"model\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Customize the display of models by overriding values retrieved and generated through API discovery.\"\n    },\n    \"ExtensionK8sGroupModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"group\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"AlertAction\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.alert-action\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"alert\": {\n              \"type\": \"string\"\n            },\n            \"text\": {\n              \"type\": \"string\"\n            },\n            \"action\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            }\n          },\n          \"required\": [\n            \"alert\",\n            \"text\",\n            \"action\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"StorageProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.storage-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"Component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            }\n          },\n          \"required\": [\n            \"name\",\n            \"Component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"TelemetryListener\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.telemetry/listener\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"listener\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Listen for telemetry events\"\n            }\n          },\n          \"required\": [\n            \"listener\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"SupportedCatalogExtensions\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/CatalogItemType\"\n        },\n        {\n          \"$ref\": \"#/definitions/CatalogItemProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/CatalogItemFilter\"\n        }\n      ]\n    },\n    \"CatalogItemType\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.catalog/item-type\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type for the catalog item.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for the catalog item.\"\n            },\n            \"catalogDescription\": {\n              \"type\": \"string\",\n              \"description\": \"Description for the type specific catalog.\"\n            },\n            \"typeDescription\": {\n              \"type\": \"string\",\n              \"description\": \"Description for the catalog item type.\"\n            },\n            \"filters\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/CatalogItemAttribute\"\n              },\n              \"description\": \"Custom filters specific to the catalog item.\"\n            },\n            \"groupings\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/CatalogItemAttribute\"\n              },\n              \"description\": \"Custom groupings specific to the catalog item.\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"title\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"CatalogItemAttribute\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"attribute\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"label\",\n        \"attribute\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"CatalogItemProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.catalog/item-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"catalogId\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"The unique identifier for the catalog this provider contributes to.\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type ID for the catalog item type.\"\n            },\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Fetch items and normalize it for the catalog. Value is a react effect hook.\"\n            },\n            \"priority\": {\n              \"type\": \"number\",\n              \"description\": \"Priority for this provider. Defaults to 0. Higher priority providers may override catalog items provided by other providers.\"\n            }\n          },\n          \"required\": [\n            \"catalogId\",\n            \"type\",\n            \"provider\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"CatalogItemFilter\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.catalog/item-filter\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"catalogId\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"The unique identifier for the catalog this provider contributes to.\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type ID for the catalog item type.\"\n            },\n            \"filter\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Filters items of a specific type. Value is a function that takes CatalogItem[] and returns a subset based on the filter criteria.\"\n            }\n          },\n          \"required\": [\n            \"catalogId\",\n            \"type\",\n            \"filter\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"SupportedActionExtensions\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/ActionProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceActionProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/ActionGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/ActionFilter\"\n        }\n      ]\n    },\n    \"ActionProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"contextId\": {\n              \"type\": \"string\",\n              \"description\": \"The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm\"\n            },\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"A react hook which returns actions for the given scope. If contextId = `resource` then the scope will always be a K8s resource object\"\n            }\n          },\n          \"required\": [\n            \"contextId\",\n            \"provider\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ActionProvider contributes a hook that returns list of actions for specific context\"\n    },\n    \"ResourceActionProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/resource-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sKindVersionModel\",\n              \"description\": \"The model for which this provider provides actions for.\"\n            },\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"A react hook which returns actions for the given resource model\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"provider\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ResourceActionProvider contributes a hook that returns list of actions for specific resource model\"\n    },\n    \"ExtensionK8sKindVersionModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"version\",\n        \"kind\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"ActionGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the action section.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label to display in the UI. Required for submenus.\"\n            },\n            \"submenu\": {\n              \"type\": \"boolean\",\n              \"description\": \"Whether this group should be displayed as submenu\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. insertBefore takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ActionGroup contributes an action group that can also be a submenu\"\n    },\n    \"ActionFilter\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/filter\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"contextId\": {\n              \"type\": \"string\",\n              \"description\": \"The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm\"\n            },\n            \"filter\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"A function which will filter actions based on some conditions. scope: The scope in which actions should be provided for. Note: hook may be required if we want to remove the ModifyCount action from a deployment with HPA\"\n            }\n          },\n          \"required\": [\n            \"contextId\",\n            \"filter\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ActionFilter can be used to filter an action\"\n    },\n    \"SupportedTopologyDetailsExtensions\": {\n      \"$ref\": \"#/definitions/DetailsTab\",\n      \"description\": \"NetworkAdpater contributes an adapter to adapt element to data that can be used by Networking component\"\n    },\n    \"DetailsTab\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.topology/details/tab\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this details tab.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The tab label to display in the UI.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. insertBefore takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"DetailsTab contributes a tab for the topology details panel.\"\n    },\n    \"RoutePage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/route\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective to which this page belongs to. If not specified, contributes to all perspectives.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            },\n            \"path\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Valid URL path or array of paths that `path-to-regexp@^1.7.0` understands.\"\n            },\n            \"exact\": {\n              \"type\": \"boolean\",\n              \"description\": \"When true, will only match if the path matches the `location.pathname` exactly.\"\n            },\n            \"className\": {\n              \"type\": \"string\",\n              \"description\": \"Option to add custom className to wrapper component\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"path\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new page to Console router.\"\n    },\n    \"ResourceListPage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/resource/list\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupKindModel\",\n              \"description\": \"The model for which this resource page links to.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new resource list page to Console router.\"\n    },\n    \"ExtensionK8sGroupKindModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"group\",\n        \"kind\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"ResourceTabPage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/resource/tab\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the tab.\"\n            },\n            \"href\": {\n              \"type\": \"string\",\n              \"description\": \"The optional href for the tab link. If not provided, the first `path` is used.\"\n            },\n            \"exact\": {\n              \"type\": \"boolean\",\n              \"description\": \"When true, will only match if the path matches the `location.pathname` exactly.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupKindModel\",\n              \"description\": \"The model for which this resource page links to.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"model\",\n            \"name\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new resource tab page to Console router.\"\n    },\n    \"ResourceDetailsPage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/resource/details\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupKindModel\",\n              \"description\": \"The model for which this resource page links to.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new resource details page to Console router.\"\n    },\n    \"DashboardsTab\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/tab\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique tab identifier, used as tab link `href` and when adding cards to this tab.\"\n            },\n            \"navSection\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"home\",\n                \"storage\"\n              ],\n              \"description\": \"NavSection to which the tab belongs to\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the tab.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"navSection\",\n            \"title\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a new dashboard tab, placed after the Overview tab.\"\n    },\n    \"DashboardsCard\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/card\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"tab\": {\n              \"type\": \"string\",\n              \"description\": \"The id of the dashboard tab to which the card will be added.\"\n            },\n            \"position\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"LEFT\",\n                \"RIGHT\",\n                \"MAIN\"\n              ],\n              \"description\": \"The grid position of the card on the dashboard.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Dashboard card component.\"\n            },\n            \"span\": {\n              \"$ref\": \"#/definitions/DashboardCardSpan\",\n              \"description\": \"Card's vertical span in the column. Ignored for small screens, defaults to 12.\"\n            }\n          },\n          \"required\": [\n            \"tab\",\n            \"position\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a new dashboard card.\"\n    },\n    \"DashboardCardSpan\": {\n      \"type\": \"number\",\n      \"enum\": [\n        4,\n        6,\n        12\n      ]\n    },\n    \"DashboardsOverviewHealthPrometheusSubsystem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/prometheus\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The display name of the subsystem.\"\n            },\n            \"queries\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"The Prometheus queries\"\n            },\n            \"healthHandler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolve the subsystem's health.\"\n            },\n            \"additionalResource\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Additional resource which will be fetched and passed to `healthHandler`.\"\n            },\n            \"popupComponent\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content.\"\n            },\n            \"popupTitle\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the popover.\"\n            },\n            \"disallowedProviders\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Cloud providers which for which the subsystem should be hidden.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"queries\",\n            \"healthHandler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is Prometheus.\"\n    },\n    \"DashboardsOverviewHealthURLSubsystem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/url\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The display name of the subsystem.\"\n            },\n            \"url\": {\n              \"type\": \"string\",\n              \"description\": \"The URL to fetch data from. It will be prefixed with base k8s URL.\"\n            },\n            \"healthHandler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolve the subsystem's health.\"\n            },\n            \"additionalResource\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Additional resource which will be fetched and passed to `healthHandler`.\"\n            },\n            \"popupComponent\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content.\"\n            },\n            \"popupTitle\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the popover.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"url\",\n            \"healthHandler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API.\"\n    },\n    \"DashboardsOverviewHealthResourceSubsystem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/resource\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The display name of the subsystem.\"\n            },\n            \"resources\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Kubernetes resources which will be fetched and passed to `healthHandler`.\"\n            },\n            \"healthHandler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolve the subsystem's health.\"\n            },\n            \"popupComponent\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content.\"\n            },\n            \"popupTitle\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the popover.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"resources\",\n            \"healthHandler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s Resource.\"\n    },\n    \"DashboardsOverviewHealthOperator\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/operator\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of operators section in the popup.\"\n            },\n            \"resources\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Kubernetes resources which will be fetched and passed to `healthHandler`.\"\n            },\n            \"getOperatorsWithStatuses\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolves status for the operators.\"\n            },\n            \"operatorRowLoader\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup row component.\"\n            },\n            \"viewAllLink\": {\n              \"type\": \"string\",\n              \"description\": \"Links to all resources page. If not provided then a list page of the first resource from resources prop is used.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"resources\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API.\"\n    },\n    \"DashboardsInventoryItemGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/inventory/item/group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"The id of the status group.\"\n            },\n            \"icon\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"React component representing the status group icon.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"icon\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds an inventory status group.\"\n    },\n    \"DashboardsOverviewInventoryItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/inventory/item\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The model for `resource` which will be fetched. Used to get the model's `label` or `abbr`.\"\n            },\n            \"mapper\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Function which maps various statuses to groups.\"\n            },\n            \"additionalResources\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Additional resources which will be fetched and passed to the `mapper` function.\"\n            }\n          },\n          \"required\": [\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a resource tile to the overview inventory card.\"\n    },\n    \"DashboardsOverviewResourceActivity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/activity/resource\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"k8sResource\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The utilization item to be replaced.\"\n            },\n            \"isActivity\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Function which determines if the given resource represents the action. If not defined, every resource represents activity.\"\n            },\n            \"getTimestamp\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Timestamp for the given action, which will be used for ordering.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The action component.\"\n            }\n          },\n          \"required\": [\n            \"k8sResource\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds an activity to the Activity Card of Overview Dashboard where the triggering of activity is based on watching a K8s resource.\"\n    },\n    \"TopologyDecoratorProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.topology/decorator/provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"priority\": {\n              \"type\": \"number\"\n            },\n            \"quadrant\": {\n              \"$ref\": \"#/definitions/TopologyDecoratorQuadrant\"\n            },\n            \"decorator\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"priority\",\n            \"quadrant\",\n            \"decorator\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Topology Decorator Provider Extension\"\n    },\n    \"TopologyDecoratorQuadrant\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"upperLeft\",\n        \"upperRight\",\n        \"lowerLeft\",\n        \"lowerRight\"\n      ]\n    },\n    \"TopologyRelationshipProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.topology/relationship/provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"provides\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            },\n            \"tooltip\": {\n              \"type\": \"string\"\n            },\n            \"create\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            },\n            \"priority\": {\n              \"type\": \"number\"\n            }\n          },\n          \"required\": [\n            \"provides\",\n            \"tooltip\",\n            \"create\",\n            \"priority\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Topology relationship provider connector extension\"\n    },\n    \"CreateResource\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.resource/create\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model for which this create resource page will be rendered.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the model matches\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"UserPreferenceGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.user-preference/group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the user preference group.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label of the user preference group\"\n            },\n            \"insertBefore\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference group before which this group should be placed\"\n            },\n            \"insertAfter\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference group after which this group should be placed\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"UserPreferenceItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.user-preference/item\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the user preference item and referenced in insertAfter and insertBefore to define the item order.\"\n            },\n            \"groupId\": {\n              \"type\": \"string\",\n              \"description\": \"IDs used to identify the user preference groups the item would belong to.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label of the user preference\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"The description of the user preference.\"\n            },\n            \"field\": {\n              \"$ref\": \"#/definitions/UserPreferenceField\",\n              \"description\": \"The input field options used to render the values to set the user preference.\"\n            },\n            \"insertBefore\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference item before which this item should be placed\"\n            },\n            \"insertAfter\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference item after which this item should be placed\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\",\n            \"description\",\n            \"field\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"UserPreferenceField\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/UserPreferenceDropdownField\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxField\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceCustomField\"\n        }\n      ]\n    },\n    \"UserPreferenceDropdownField\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"dropdown\"\n        },\n        \"userSettingsKey\": {\n          \"type\": \"string\"\n        },\n        \"defaultValue\": {\n          \"type\": \"string\"\n        },\n        \"options\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\"\n              },\n              \"label\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"value\",\n              \"label\"\n            ],\n            \"additionalProperties\": false\n          }\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"userSettingsKey\",\n        \"options\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"UserPreferenceCheckboxField\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"checkbox\"\n        },\n        \"userSettingsKey\": {\n          \"type\": \"string\"\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"trueValue\": {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxFieldValue\"\n        },\n        \"falseValue\": {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxFieldValue\"\n        },\n        \"defaultValue\": {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxFieldValue\"\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"userSettingsKey\",\n        \"label\",\n        \"trueValue\",\n        \"falseValue\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"UserPreferenceCheckboxFieldValue\": {\n      \"type\": [\n        \"string\",\n        \"number\",\n        \"boolean\"\n      ]\n    },\n    \"UserPreferenceCustomField\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"custom\"\n        },\n        \"component\": {\n          \"$ref\": \"#/definitions/EncodedCodeRef\"\n        },\n        \"props\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/JSONSchema7Type\"\n          }\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"component\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"JSONSchema7Type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/JSONSchema7Object\"\n        },\n        {\n          \"$ref\": \"#/definitions/JSONSchema7Array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"Primitive type\"\n    },\n    \"JSONSchema7Object\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/JSONSchema7Type\"\n      }\n    },\n    \"JSONSchema7Array\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/JSONSchema7Type\"\n      }\n    },\n    \"Perspective\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.perspective\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective identifier.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective display name.\"\n            },\n            \"icon\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The perspective display icon.\"\n            },\n            \"default\": {\n              \"type\": \"boolean\",\n              \"description\": \"Whether the perspective is the default. There can only be one default.\"\n            },\n            \"defaultPins\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ExtensionK8sModel\"\n              },\n              \"description\": \"Default pinned resources on the nav\"\n            },\n            \"landingPageURL\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The function to get perspective landing page URL.\"\n            },\n            \"importRedirectURL\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The function to get redirect URL for import flow.\"\n            },\n            \"usePerspectiveDetection\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The hook to detect default perspective\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"icon\",\n            \"landingPageURL\",\n            \"importRedirectURL\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"HorizontalNavTab\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.tab/horizontalNav\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sKindVersionModel\",\n              \"description\": \"The model for which this provider show tab.\"\n            },\n            \"page\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"href\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"name\",\n                \"href\"\n              ],\n              \"additionalProperties\": false,\n              \"description\": \"The page to be show in horizontal tab. It takes tab name as name and href of the tab\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"page\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    }\n  }\n};"],"names":["module","exports","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","getUtilsConfig","token","cookieToken","document","cookie","split","find","val","startsWith","console","error","getToken","wsConfigs","host","subProtocols","btoa","replace","WSFactory","constructor","id","options","paused","state","messageBuffer","ws","this","bufferMax","handlers","open","close","message","destroy","bulkMessage","connect","flushCanceler","setInterval","flushMessageBuffer","bind","bufferFlushInterval","reconnect","connectionAttempt","delay","attempt","timeout","clearTimeout","Math","round","min","setTimeout","log","url","path","window","location","protocol","createURL","overrideHost","overridableProtocols","undefined","WebSocket","e","onopen","triggerEvent","onclose","evt","onerror","onmessage","msg","jsonParse","JSON","parse","data","invokeHandlers","type","forEach","h","push","length","shift","onMessage","fn","onBulkMessage","onError","onOpen","onClose","onDestroy","pause","unpause","isPaused","getState","bufferSize","clearInterval","send","object","expanded","setExpanded","sanitize","resourceOrResourceList","Array","isArray","map","apiVersion","kind","apiGroup","managedFields","metadata","resource","style","overflow","maxHeight","position","paddingTop","stringify","onClick","cursor","top","width","textAlign","background","bottom","height","socketBeingCreated","socketOpen","resourceLoaded","Spinner","r","setR","createSocket","setCreateSocket","setError","isOpen","setOpen","debug","dataStringOrObject","code","Button","variant","Alert","title","ProjectModel","abbr","label","labelPlural","plural","ApplicationModel","ActionType","namespace","setNamespace","name","setName","status","setStatus","action","setAction","resourceVersion","setResourceVersion","testApplicationMetadata","ns","testApplicationData","promise","LIST","k8sListResource","model","then","items","namespaces","dataResource","alert","CREATE","k8sCreateResource","queryOptions","GET","k8sGetResource","PATCH","k8sPatchResource","patches","op","value","PUT","k8sUpdateResource","DELETE","k8sDeleteResource","Error","catch","err","finally","TextInput","placeholder","onChange","v","Object","values","key","isDisabled","PageSection","margin","DynamicRoute","Routes","fallback","Bullseye","Switch","Route","exact","component","Redirect","to","history","useHistory","chrome","useChrome","store","register","notifications","on","onChromeEvent","init","unregister","event","domEvent","href","super","defineProperty","enumerable","configurable","captureStackTrace","stack","setPrototypeOf","prototype","HttpError","response","json","static","messages","k8sBasePath","includes","commonFetch","Promise","reject","allOptions","headers","Accept","Authorization","fetch","Request","credentials","ok","contentType","get","indexOf","statusText","cause","details","causes","reason","field","getActivePlugins","isBeta","appName","useResolvedExtensions","typeGuards","extensions","resolvedExtensions","setResolvedExtensions","resolved","setResolved","errors","setErrors","disposed","fulfilledValues","rejectedReasons","codeRefSymbol","Symbol","isEncodedCodeRef","obj","getOwnPropertyNames","$codeRef","isExecutableCodeRef","getOwnPropertySymbols","codeRefErrorSymbol","resolveEncodedCodeRefs","entryModule","pluginID","errorCallback","properties","ref","loader","applyCodeRefSymbol","moduleName","exportName","match","parseEncodedCodeRefValue","requestedModule","loadReferencedObject","resolveExtension","extension","valueResolutions","isCodeRefError","getCodeRefError","resolvedValue","setCodeRefError","isAddAction","isAddActionGroup","isCatalogItemType","isCatalogItemProvider","isCatalogItemFilter","isClusterGlobalConfig","isContextProvider","isDashboardsTab","isDashboardsCard","isDashboardsOverviewHealthPrometheusSubsystem","isResolvedDashboardsOverviewHealthPrometheusSubsystem","isDashboardsOverviewHealthURLSubsystem","isResolvedDashboardsOverviewHealthURLSubsystem","isDashboardsOverviewHealthResourceSubsystem","isResolvedDashboardsOverviewHealthResourceSubsystem","isDashboardsOverviewHealthOperator","isResolvedDashboardsOverviewHealthOperator","isDashboardsInventoryItemGroup","isDashboardsOverviewInventoryItem","isDashboardsOverviewInventoryItemReplacement","isProjectDashboardInventoryItem","isDashboardsOverviewResourceActivity","isDashboardsOverviewPrometheusActivity","isDashboardsOverviewHealthSubsystem","isFeatureFlag","isModelFeatureFlag","isFileUpload","isHrefNavItem","isResourceNSNavItem","isResourceClusterNavItem","isSeparator","isNavSection","isNavItem","isRoutePage","isStandaloneRoutePage","isResourceListPage","isResourceDetailsPage","isResourceTabPage","isPerspective","isPVCCreateProp","isPVCAlert","isPVCStatus","isPVCDelete","isReduxReducer","isModelMetadata","isTelemetryListener","isYAMLTemplate","isAlertAction","InventoryStatusGroup","HealthState","isStorageProvider","isActionProvider","isResourceActionProvider","isActionGroup","isActionFilter","isDetailsTab","isTopologyDecoratorProvider","isTopologyRelationshipProvider","isCreateResource","UserPreferenceFieldType","isUserPreferenceItem","isUserPreferenceGroup","isHorizontalNavTab","getAPIVersionForModel","getGroupVersionKindForResource","apiVersionSplit","apiVersionSplitLen","group","version","getGroupVersionKindForModel","consoleFetch","consoleFetchJSON","consoleFetchText","useActivePerspective","k8sGet","k8sCreate","k8sUpdate","k8sPatch","k8sDelete","k8sList","PerspectiveContext","activePerspective","setActivePerspective","useContext","CustomError","TimeoutError","ms","RetryError","cookiePrefix","validateStatus","method","retry","RegExp","SERVER_FLAGS","basePath","test","shouldLogout","initDefaults","consoleFetchInternal","c","filter","slice","pop","fetchPromise","timeoutPromise","unused","race","consoleFetchCommon","text","isPlainText","consoleFetchSendJSON","body","delete","post","put","patch","resourceURL","u","isLegacy","p","getK8sAPIPath","encodeURIComponent","queryParams","k","join","getK8sResourcePath","toArray","requirementToString","requirement","operator","adapterFunc","func","knownArgs","args","arg","opts","requestInit","assign","resolve","propagationPolicy","jsonData","raw","query","newVal","selector","requirements","matchLabels","matchExpressions","isOldFormat","keys","sort","me","toRequirements","selectorToString","listURL","result","typedItems","i","deepForOwn","predicate","valueCallback","visitValue","container","$$typeof","isPlainNonReactObject","arrayElement","index","toString","settleAllPromises","promises","results","allSettled","modules","react","sharedScope","reduce","acc","moduleRequest","loaded","initSharedPluginModules","override","pluginMap","Map","getPluginID","m","initConsolePlugins","pluginStore","reduxStore","loadPluginEntry","initSharedPluginModulesCallback","resolveEncodedCodeRefsCallback","has","pluginData","entryCallbackFired","manifest","setDynamicPluginEnabled","addDynamicPlugin","getPluginEntryCallback","__load_plugin_entry__","registerPluginEntryCallback","createThunkMiddleware","extraArgument","dispatch","next","thunk","withExtraArgument","baseReducers","freeze","FLAGS","payload","flag","composeEnhancers","cachedStore","enabledPlugins","onPluginRegister","base","setPluginStore","item","pathPrefix","baseURL","existingPluginData","from","existingPluginID","set","script","createElement","src","getDocumentOrigin","origin","baseAbsoluteURL","URL","async","onload","info","head","appendChild","loadDynamicPlugin","pluginName","activePlugins","dynamicPluginNames","allPluginNames","consolePlugins","disabledPlugins","all","params","URLSearchParams","search","entries","getURLSearchParams","disabledPluginNames","getEnabledDynamicPluginNames","initialPluginStore","subscriptionServiceInitialized","extensionSubscriptions","dynamicPluginListeners","onExtensionSubscriptionAdded","onDynamicPluginListenerAdded","initSubscriptionService","getExtensionsInUse","getFlags","invokeExtensionListener","sub","currentExtensions","currentFlags","extensionsInUse","tg","listenerLastArgs","listener","getDynamicPluginInfo","lastExtensions","lastFlags","invokeAllExtensionListeners","nextExtensions","nextFlags","lastPluginEntries","invokeAllDynamicPluginListeners","nextPluginEntries","subscribe","subscribeToExtensions","subList","invokeListener","isSubscribed","splice","isTranslatableString","endsWith","useExtensions","forceRender","s","isMountedRef","unsubscribeRef","extensionsInUseRef","latestTypeGuardsRef","t","trySubscribe","current","translateExtension","tryUnsubscribe","sanitizeExtension","flags","required","disallowed","augmentExtension","uid","isExtensionInUse","every","f","PluginStore","staticPlugins","allowedDynamicPluginNames","disabledStaticPluginNames","Set","loadedDynamicPlugins","failedDynamicPluginNames","listeners","plugin","updateExtensions","staticPluginExtensions","dynamicPluginExtensions","getAllowedDynamicPluginNames","invokeListeners","warn","processedExtensions","enabled","disableStaticPlugins","some","add","dynamicPlugins","isDynamicPluginLoaded","registerFailedDynamicPlugin","getStateForTestPurposes","registry","middleware","errorDescriptionKey","Boolean"],"sourceRoot":""}