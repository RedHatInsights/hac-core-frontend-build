{"version":3,"file":"js/722.2cd32a3559886dd6f5c2.js","mappings":"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","sources":["webpack:///./config/empty.js","webpack:///./src/poc-code/console-mount/src/components/foundation/static-routes/EmptyRoute.tsx","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/Utils/Loader.tsx","webpack:///./src/Utils/plugins.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/api/useResolvedExtensions.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/coderefs/coderef-resolver.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/add-actions.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/catalog.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/cluster-settings.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/context-providers.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/dashboards.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/feature-flags.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/file-upload.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/navigation.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/pages.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/perspectives.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/pvc.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/redux.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/resource-metadata.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/telemetry.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/yaml-templates.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/notification-alert.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/console-types.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/storage-provider.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/actions.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/topology-details.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/topology.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/create-resource.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/user-preferences.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/extensions/horizontal-nav-tabs.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s-ref.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/api/core-api.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/perspective/perspective-context.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/perspective/useActivePerspective.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/error/custom-error.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/error/http-error.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/fetch/console-fetch-utils.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/fetch/console-fetch.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s-utils.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/k8s/k8s-resource.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/object.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/promise.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/shared-modules-init.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/runtime/plugin-loader.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/runtime/plugin-init.ts","webpack:///./src/poc-code/console-mount/src/redux/middleware/thunk.ts","webpack:///./src/poc-code/console-mount/src/redux/reducers/index.ts","webpack:///./src/poc-code/console-mount/src/redux/reducers/flags.ts","webpack:///./src/poc-code/console-mount/src/redux/useReduxStore.ts","webpack:///./src/poc-code/console-mount/src/components/plugins/IncludePlugins.tsx","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/utils/url.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/src/constants.ts","webpack:///./src/poc-code/console-mount/src/components/plugins/utils.ts","webpack:///./src/poc-code/console-plugin-sdk/src/api/pluginSubscriptionService.ts","webpack:///./src/poc-code/console-plugin-sdk/src/utils/extension-i18n.ts","webpack:///./src/poc-code/console-plugin-sdk/src/api/useExtensions.ts","webpack:///./src/poc-code/console-plugin-sdk/src/store.ts","webpack:///./src/store/index.ts","webpack:///./src/poc-code/console-dynamic-plugin-sdk/generated/schema/plugin-manifest.cjs"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import * as React from 'react';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\n\nconst EmptyRoute: React.FC = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        Empty Route\n      </Title>\n      <EmptyStateBody>\n        <p>Nothing to see here.</p>\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default EmptyRoute;\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport EmptyRoute from '@console/mount/src/components/foundation/static-routes/EmptyRoute';\n\nconst DynamicRoute = React.lazy(() => import(/* webpackChunkName: \"DynamicRoute\" */ './Routes/DynamicRoute/DynamicRoute'));\n\nexport const Routes: React.FC = () => (\n  <React.Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route path=\"/:dynamicPath\" component={DynamicRoute} />\n      <Route exact path=\"/\" component={EmptyRoute} />\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  </React.Suspense>\n);\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useStore } from 'react-redux';\n\nconst App: React.FC = () => {\n  const history = useHistory();\n\n  const chrome = useChrome();\n  const store = useStore();\n\n  React.useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n    const { on: onChromeEvent } = chrome?.init();\n\n    const unregister = onChromeEvent('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`${event.domEvent.href.replace('/hac', '')}`);\n      }\n    });\n    return () => {\n      unregister();\n    };\n  }, [history, chrome]);\n\n  return (\n    <React.Fragment>\n      <NotificationsPortal store={store} />\n      <Routes />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Loader = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n\nexport default Loader;\n","export type PluginType = {\n  name: string;\n  pathPrefix?: string;\n};\n\ntype GetActivePlugins = (isBeta: boolean, appName: string) => Promise<PluginType[]>;\n\nexport const getActivePlugins: GetActivePlugins = async (isBeta, appName) => {\n  try {\n    return (await fetch(`${isBeta ? '/beta' : ''}/apps/${appName}/plugins.json`)).json();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error('Failed to fetch plugin data', e);\n    return [];\n  }\n};\n","import * as React from 'react';\nimport { useExtensions } from '@console/plugin-sdk/src/api/useExtensions';\nimport { resolveExtension } from '../coderefs/coderef-resolver';\nimport { UseResolvedExtensions } from '../extensions/console-types';\nimport { Extension, ExtensionTypeGuard, ResolvedExtension } from '../types';\nimport { settleAllPromises } from '../utils/promise';\n\n/**\n * React hook for consuming Console extensions with resolved `CodeRef` properties.\n *\n * This hook accepts the same argument(s) as `useExtensions` hook and returns an\n * adapted list of extension instances, resolving all code references within each\n * extension's properties.\n *\n * Initially, the hook returns an empty array. Once the resolution is complete,\n * the React component is re-rendered with the hook returning an adapted list of\n * extensions.\n *\n * When the list of matching extensions changes, the resolution is restarted. The\n * hook will continue to return the previous result until the resolution completes.\n *\n * Example usage:\n *\n * ```ts\n * const [navItemExtensions, navItemsResolved] = useResolvedExtensions<NavItem>(isNavItem);\n * // process adapted extensions and render your component\n * ```\n *\n * The hook's result elements are guaranteed to be referentially stable across re-renders.\n *\n * @param typeGuards Type guard(s) used to narrow the extension instances.\n *\n * @returns Tuple containing a list of adapted extension instances with resolved code\n * references, boolean flag indicating whether the resolution is complete, and a list\n * of errors detected during the resolution.\n */\nexport const useResolvedExtensions: UseResolvedExtensions = <E extends Extension>(\n  ...typeGuards: ExtensionTypeGuard<E>[]\n): [ResolvedExtension<E>[], boolean, any[]] => {\n  const extensions = useExtensions<E>(...typeGuards);\n\n  const [resolvedExtensions, setResolvedExtensions] = React.useState<ResolvedExtension<E>[]>([]);\n  const [resolved, setResolved] = React.useState<boolean>(false);\n  const [errors, setErrors] = React.useState<any[]>([]);\n\n  React.useEffect(() => {\n    let disposed = false;\n\n    // eslint-disable-next-line promise/catch-or-return\n    settleAllPromises(\n      extensions.map((e) => resolveExtension<typeof e, any, ResolvedExtension<E>>(e)),\n    ).then(([fulfilledValues, rejectedReasons]) => {\n      if (!disposed) {\n        setResolvedExtensions(fulfilledValues);\n        setErrors(rejectedReasons);\n        setResolved(true);\n\n        if (rejectedReasons.length > 0) {\n          // eslint-disable-next-line no-console\n          console.error('Detected errors while resolving Console extensions', rejectedReasons);\n        }\n      }\n    });\n\n    return () => {\n      disposed = true;\n    };\n  }, [extensions]);\n\n  return [resolvedExtensions, resolved, errors];\n};\n","/* eslint-disable no-console */\n\nimport * as _ from 'lodash';\nimport {\n  Extension,\n  RemoteEntryModule,\n  EncodedCodeRef,\n  CodeRef,\n  ResolvedCodeRefProperties,\n  ExtensionProperties,\n  UpdateExtensionProperties,\n} from '../types';\nimport { deepForOwn } from '../utils/object';\nimport { settleAllPromises } from '../utils/promise';\n\nconst codeRefSymbol = Symbol('CodeRef');\n\nexport const applyCodeRefSymbol = <T = any>(ref: CodeRef<T>) => {\n  ref[codeRefSymbol] = true;\n  return ref;\n};\n\nexport const isEncodedCodeRef = (obj): obj is EncodedCodeRef =>\n  _.isPlainObject(obj) &&\n  _.isEqual(Object.getOwnPropertyNames(obj), ['$codeRef']) &&\n  typeof (obj as EncodedCodeRef).$codeRef === 'string';\n\nexport const isExecutableCodeRef = (obj): obj is CodeRef =>\n  _.isFunction(obj) &&\n  _.isEqual(Object.getOwnPropertySymbols(obj), [codeRefSymbol]) &&\n  obj[codeRefSymbol] === true;\n\nconst codeRefErrorSymbol = Symbol('error');\nexport const isCodeRefError = (ref: CodeRef) => !!ref[codeRefErrorSymbol];\nexport const getCodeRefError = (ref: CodeRef) => ref[codeRefErrorSymbol];\nexport const setCodeRefError = (ref: CodeRef, e: any) => {\n  ref[codeRefErrorSymbol] = e;\n  return ref;\n};\n\n/**\n * Parse the `EncodedCodeRef` value into `[moduleName, exportName]` tuple.\n *\n * Returns an empty array if the value doesn't match the expected format.\n */\nexport const parseEncodedCodeRefValue = (value: string): [string, string] | [] => {\n  const match = value.match(/^([^.]+)(?:\\.(.+)){0,1}$/);\n  return match ? [match[1], match[2] || 'default'] : [];\n};\n\n/**\n * Returns the object referenced by the `EncodedCodeRef`.\n *\n * If an error occurs, calls `errorCallback` and returns `null`.\n *\n * _Does not throw errors by design._\n */\nexport const loadReferencedObject = async <TExport = any>(\n  ref: EncodedCodeRef,\n  entryModule: RemoteEntryModule,\n  pluginID: string,\n  errorCallback: VoidFunction,\n): Promise<TExport> => {\n  const [moduleName, exportName] = parseEncodedCodeRefValue(ref.$codeRef);\n  let requestedModule: {};\n\n  if (!moduleName) {\n    console.error(`Malformed code reference '${ref.$codeRef}' of plugin ${pluginID}`);\n    errorCallback();\n    return null;\n  }\n\n  try {\n    const moduleFactory = await entryModule.get(moduleName);\n    requestedModule = moduleFactory();\n  } catch (error) {\n    console.error(`Failed to load module '${moduleName}' of plugin ${pluginID}`, error);\n    errorCallback();\n    return null;\n  }\n\n  if (!requestedModule[exportName]) {\n    console.error(`Missing module export '${moduleName}.${exportName}' of plugin ${pluginID}`);\n    errorCallback();\n    return null;\n  }\n\n  return requestedModule[exportName];\n};\n\n/**\n * Returns new `extensions` array, resolving `EncodedCodeRef` values into `CodeRef` functions.\n *\n * _Does not execute `CodeRef` functions to load the referenced objects._\n */\nexport const resolveEncodedCodeRefs = (\n  extensions: Extension[],\n  entryModule: RemoteEntryModule,\n  pluginID: string,\n  errorCallback: VoidFunction,\n): Extension[] =>\n  _.cloneDeep(extensions).map((e) => {\n    deepForOwn<EncodedCodeRef>(e.properties, isEncodedCodeRef, (ref, key, obj) => {\n      const loader = applyCodeRefSymbol(async () =>\n        loadReferencedObject(ref, entryModule, pluginID, errorCallback),\n      );\n      obj[key] = Object.defineProperty(loader, 'name', { value: `${pluginID}-${ref.$codeRef}` });\n    });\n\n    return e;\n  });\n\n/**\n * Returns an extension with its `CodeRef` properties replaced with referenced objects.\n */\nexport const resolveExtension = async <\n  E extends Extension<P>,\n  P = ExtensionProperties<E>,\n  R = UpdateExtensionProperties<E, ResolvedCodeRefProperties<P>, P>\n>(\n  extension: E,\n): Promise<R> => {\n  const valueResolutions: Promise<void>[] = [];\n\n  deepForOwn<CodeRef>(extension.properties, isExecutableCodeRef, (ref, key, obj) => {\n    if (isCodeRefError(ref)) {\n      throw getCodeRefError(ref);\n    }\n    valueResolutions.push(\n      ref()\n        .then((resolvedValue) => {\n          obj[key] = resolvedValue;\n        })\n        .catch((e) => {\n          setCodeRefError(ref, e ?? true);\n          return e;\n        }),\n    );\n  });\n\n  await settleAllPromises(valueResolutions);\n\n  return (extension as unknown) as R;\n};\n","import * as React from 'react';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { AccessReviewResourceAttributes } from './console-types';\n\nexport type AddAction = ExtensionDeclaration<\n  'dev-console.add/action',\n  {\n    /** ID used to identify the action. */\n    id: string;\n    /** IDs used to identify the action groups the action would belong to. */\n    groupId?: string;\n    /** The label of the action */\n    label: string;\n    /** The description of the action. */\n    description: string;\n    /** The href to navigate to. */\n    href: string;\n    /** The perspective display icon. */\n    icon?: CodeRef<React.ReactNode>;\n    /** Optional access review to control visibility / enablement of the action. */\n    accessReview?: AccessReviewResourceAttributes[];\n  }\n>;\n\nexport type AddActionGroup = ExtensionDeclaration<\n  'dev-console.add/action-group',\n  {\n    /** ID used to identify the action group. */\n    id: string;\n    /** The title of the action group */\n    name: string;\n    /** ID of action group before which this group should be placed */\n    insertBefore?: string;\n    /** ID of action group after which this group should be placed */\n    insertAfter?: string;\n  }\n>;\n\n// Type guards\n\nexport const isAddAction = (e: Extension): e is AddAction => {\n  return e.type === 'dev-console.add/action';\n};\n\nexport const isAddActionGroup = (e: Extension): e is AddActionGroup => {\n  return e.type === 'dev-console.add/action-group';\n};\n","import * as React from 'react';\nimport { ExtensionHook } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type CatalogItemType = ExtensionDeclaration<\n  'console.catalog/item-type',\n  {\n    /** Type for the catalog item. */\n    type: string;\n    /** Title for the catalog item. */\n    title: string;\n    /** Description for the type specific catalog. */\n    catalogDescription?: string;\n    /** Description for the catalog item type. */\n    typeDescription?: string;\n    /** Custom filters specific to the catalog item.  */\n    filters?: CatalogItemAttribute[];\n    /** Custom groupings specific to the catalog item. */\n    groupings?: CatalogItemAttribute[];\n  }\n>;\n\nexport type CatalogItemProvider = ExtensionDeclaration<\n  'console.catalog/item-provider',\n  {\n    /** The unique identifier for the catalog this provider contributes to. */\n    catalogId: string | string[];\n    /** Type ID for the catalog item type. */\n    type: string;\n    /** Fetch items and normalize it for the catalog. Value is a react effect hook. */\n    provider: CodeRef<ExtensionHook<CatalogItem[], CatalogExtensionHookOptions>>;\n    /** Priority for this provider. Defaults to 0. Higher priority providers may override catalog\n        items provided by other providers. */\n    priority?: number;\n  }\n>;\n\nexport type CatalogItemFilter = ExtensionDeclaration<\n  'console.catalog/item-filter',\n  {\n    /** The unique identifier for the catalog this provider contributes to. */\n    catalogId: string | string[];\n    /** Type ID for the catalog item type. */\n    type: string;\n    /** Filters items of a specific type. Value is a function that takes CatalogItem[] and returns a subset based on the filter criteria. */\n    filter: CodeRef<(item: CatalogItem) => boolean>;\n  }\n>;\n\nexport type SupportedCatalogExtensions = CatalogItemType | CatalogItemProvider | CatalogItemFilter;\n\n// Type guards\n\nexport const isCatalogItemType = (e: Extension): e is CatalogItemType => {\n  return e.type === 'console.catalog/item-type';\n};\n\nexport const isCatalogItemProvider = (e: Extension): e is CatalogItemProvider => {\n  return e.type === 'console.catalog/item-provider';\n};\n\nexport const isCatalogItemFilter = (e: Extension): e is CatalogItemFilter => {\n  return e.type === 'console.catalog/item-filter';\n};\n\n// Support types\n\nexport type CatalogExtensionHookOptions = {\n  namespace: string;\n};\n\nexport type CatalogItem<T extends any = any> = {\n  uid: string;\n  type: string;\n  name: string;\n  /** Optional title to render a custom title using ReactNode.\n   * Rendered in catalog tile and side panel\n   *  */\n  title?: React.ReactNode;\n  // Used as the second label next to the provider label in the list result.\n  secondaryLabel?: React.ReactNode;\n  provider?: string;\n  // Used as the tile description. If provided as a string, the description is truncated to 3 lines.\n  // If provided as a ReactNode, the contents will not be truncated.\n  // This description will also be shown in the side panel if there are no `details.descriptions`.\n  description?: string | React.ReactNode;\n  tags?: string[];\n  creationTimestamp?: string;\n  supportUrl?: string;\n  documentationUrl?: string;\n  attributes?: {\n    [key: string]: any;\n  };\n  cta?: {\n    label: string;\n    href?: string;\n    callback?: (props?: any) => void;\n  };\n  icon?: {\n    url?: string;\n    class?: string;\n    node?: React.ReactNode;\n  };\n  details?: {\n    properties?: CatalogItemDetailsProperty[];\n    descriptions?: CatalogItemDetailsDescription[];\n  };\n  // Optional text only badges for the catalog item which will be rendered on the tile and details panel.\n  badges?: CatalogItemBadge[];\n  // Optional data attached by the provider.\n  // May be consumed by filters.\n  // `data` for each `type` of CatalogItem should implement the same interface.\n  data?: T;\n};\n\nexport type CatalogItemDetailsProperty = {\n  label: string;\n  value: string | React.ReactNode;\n};\n\nexport type CatalogItemDetailsDescription = {\n  label?: string;\n  value: string | React.ReactNode;\n};\n\nexport type CatalogItemAttribute = {\n  label: string;\n  attribute: string;\n};\n\nexport type CatalogItemBadge = {\n  text: string;\n  color?: 'blue' | 'cyan' | 'green' | 'orange' | 'purple' | 'red' | 'grey';\n  icon?: React.ReactNode;\n  variant?: 'outline' | 'filled';\n};\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration } from '../types';\n\nexport type ClusterGlobalConfig = ExtensionDeclaration<\n  'console.global-config',\n  {\n    /** Unique identifier for the cluster config resource instance. */\n    id: string;\n    /** The name of the cluster config resource instance. */\n    name: string;\n    /** The model which refers to a cluster config resource. */\n    model: ExtensionK8sModel;\n    /** The namespace of the cluster config resource instance. */\n    namespace: string;\n  }\n>;\n\n// Type guards\n\nexport const isClusterGlobalConfig = (e: Extension): e is ClusterGlobalConfig =>\n  e.type === 'console.global-config';\n","import { Provider } from 'react';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** Adds new React context provider to Console application root. */\nexport type ContextProvider<T = any> = ExtensionDeclaration<\n  'console.context-provider',\n  {\n    /** Context Provider component. */\n    provider: CodeRef<Provider<T>>;\n    /** Hook for the Context value. */\n    useValueHook: CodeRef<() => T>;\n  }\n>;\n\n// Type guards\n\nexport const isContextProvider = (e: Extension): e is ContextProvider =>\n  e.type === 'console.context-provider';\n","import { K8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef, ResolvedExtension } from '../types';\nimport {\n  K8sResourceCommon,\n  PrometheusResponse,\n  ResourcesObject,\n  StatusGroupMapper,\n  WatchK8sResources,\n  WatchK8sResults,\n  FirehoseResource,\n  FirehoseResult,\n} from './console-types';\nimport {\n  DashboardCardSpan,\n  GetOperatorsWithStatuses,\n  K8sActivityProps,\n  OperatorRowProps,\n  PrometheusActivityProps,\n  PrometheusHealthHandler,\n  PrometheusHealthPopupProps,\n  ResourceHealthHandler,\n  URLHealthHandler,\n} from './dashboard-types';\n\n/** Adds a new dashboard tab, placed after the Overview tab. */\nexport type DashboardsTab = ExtensionDeclaration<\n  'console.dashboards/tab',\n  {\n    /** A unique tab identifier, used as tab link `href` and when adding cards to this tab. */\n    id: string;\n    /** NavSection to which the tab belongs to */\n    navSection: 'home' | 'storage';\n    /** The title of the tab. */\n    title: string;\n  }\n>;\n\n/** Adds a new dashboard card. */\nexport type DashboardsCard = ExtensionDeclaration<\n  'console.dashboards/card',\n  {\n    /** The id of the dashboard tab to which the card will be added. */\n    tab: string;\n    /** The grid position of the card on the dashboard. */\n    position: 'LEFT' | 'RIGHT' | 'MAIN';\n    /** Dashboard card component. */\n    component: CodeRef<React.ComponentType>;\n    /** Card's vertical span in the column. Ignored for small screens, defaults to 12. */\n    span?: DashboardCardSpan;\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is Prometheus. */\nexport type DashboardsOverviewHealthPrometheusSubsystem = ExtensionDeclaration<\n  'console.dashboards/overview/health/prometheus',\n  {\n    /** The display name of the subsystem. */\n    title: string;\n    /** The Prometheus queries */\n    queries: string[];\n    /** Resolve the subsystem's health. */\n    healthHandler: CodeRef<PrometheusHealthHandler>;\n    /** Additional resource which will be fetched and passed to `healthHandler`. */\n    additionalResource?: CodeRef<FirehoseResource>;\n    /** Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content. */\n    popupComponent?: CodeRef<React.ComponentType<PrometheusHealthPopupProps>>;\n    /** The title of the popover. */\n    popupTitle?: string;\n    /** Cloud providers which for which the subsystem should be hidden. */\n    disallowedProviders?: string[];\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API. */\nexport type DashboardsOverviewHealthURLSubsystem<\n  T = any,\n  R extends K8sResourceCommon | K8sResourceCommon[] = K8sResourceCommon | K8sResourceCommon[]\n> = ExtensionDeclaration<\n  'console.dashboards/overview/health/url',\n  {\n    /** The display name of the subsystem. */\n    title: string;\n    /** The URL to fetch data from. It will be prefixed with base k8s URL. */\n    url: string;\n    /** Resolve the subsystem's health. */\n    healthHandler: CodeRef<URLHealthHandler<T>>;\n    /** Additional resource which will be fetched and passed to `healthHandler`. */\n    additionalResource?: CodeRef<FirehoseResource>;\n    /** Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content. */\n    popupComponent?: CodeRef<\n      React.ComponentType<{\n        healthResult?: T;\n        healthResultError?: any;\n        k8sResult?: FirehoseResult<R>;\n      }>\n    >;\n    /** The title of the popover. */\n    popupTitle?: string;\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s Resource. */\nexport type DashboardsOverviewHealthResourceSubsystem<\n  T extends ResourcesObject = ResourcesObject\n> = ExtensionDeclaration<\n  'console.dashboards/overview/health/resource',\n  {\n    /** The display name of the subsystem. */\n    title: string;\n    /** Kubernetes resources which will be fetched and passed to `healthHandler`. */\n    resources: CodeRef<WatchK8sResources<T>>;\n    /** Resolve the subsystem's health. */\n    healthHandler: CodeRef<ResourceHealthHandler<T>>;\n    /** Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content. */\n    popupComponent?: CodeRef<WatchK8sResults<T>>;\n    /** The title of the popover. */\n    popupTitle?: string;\n  }\n>;\n\n/** Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API. */\nexport type DashboardsOverviewHealthOperator<\n  T extends K8sResourceCommon = K8sResourceCommon\n> = ExtensionDeclaration<\n  'console.dashboards/overview/health/operator',\n  {\n    /** Title of operators section in the popup. */\n    title: string;\n    /** Kubernetes resources which will be fetched and passed to `healthHandler`. */\n    resources: CodeRef<FirehoseResource[]>;\n    /** Resolves status for the operators. */\n    getOperatorsWithStatuses?: CodeRef<GetOperatorsWithStatuses<T>>;\n    /** Loader for popup row component. */\n    operatorRowLoader?: CodeRef<React.ComponentType<OperatorRowProps<T>>>;\n    /** Links to all resources page. If not provided then a list page of the first resource from resources prop is used. */\n    viewAllLink?: string;\n  }\n>;\n\n/** Adds an inventory status group. */\nexport type DashboardsInventoryItemGroup = ExtensionDeclaration<\n  'console.dashboards/overview/inventory/item/group',\n  {\n    /** The id of the status group. */\n    id: string;\n    /** React component representing the status group icon. */\n    icon: CodeRef<React.ReactElement>;\n  }\n>;\n\n/** Adds a resource tile to the overview inventory card. */\nexport type DashboardsOverviewInventoryItem<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = ExtensionDeclaration<\n  'console.dashboards/overview/inventory/item',\n  DashboardsOverviewInventoryItemProperties<T, R> & {}\n>;\n\n/** Replaces an overview inventory card. */\nexport type DashboardsOverviewInventoryItemReplacement<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = ExtensionDeclaration<\n  'console.dashboards/overview/inventory/item/replacement',\n  DashboardsOverviewInventoryItemProperties<T, R> & {}\n>;\n\n/** Adds a resource tile to the project overview inventory card. */\nexport type ProjectDashboardInventoryItem<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = ExtensionDeclaration<\n  'console.dashboards/project/overview/item',\n  DashboardsOverviewInventoryItemProperties<T, R> & {}\n>;\n\n/** Adds an activity to the Activity Card of Overview Dashboard where the triggering of activity is based on watching a K8s resource. */\nexport type DashboardsOverviewResourceActivity<\n  T extends K8sResourceCommon = K8sResourceCommon\n> = ExtensionDeclaration<\n  'console.dashboards/overview/activity/resource',\n  {\n    /** The utilization item to be replaced. */\n    k8sResource: CodeRef<FirehoseResource & { isList: true }>;\n    /** Function which determines if the given resource represents the action. If not defined, every resource represents activity. */\n    isActivity?: CodeRef<(resource: T) => boolean>;\n    /** Timestamp for the given action, which will be used for ordering. */\n    getTimestamp?: CodeRef<(resource: T) => Date>;\n    /** The action component. */\n    component: CodeRef<React.ComponentType<K8sActivityProps<T>>>;\n  }\n>;\n\n/** Adds an activity to the Activity Card of Prometheus Overview Dashboard where the triggering of activity is based on watching a K8s resource. */\nexport type DashboardsOverviewPrometheusActivity = ExtensionDeclaration<\n  'console.dashboards/overview/prometheus/activity/resource',\n  {\n    /** Queries to watch */\n    queries: string[];\n    /** Function which determines if the given resource represents the action. If not defined, every resource represents activity. */\n    isActivity?: CodeRef<(results: PrometheusResponse[]) => boolean>;\n    /** The action component. */\n    component: CodeRef<React.ComponentType<PrometheusActivityProps>>;\n  }\n>;\n\n// Type guards\n\nexport const isDashboardsTab = (e: Extension): e is DashboardsTab =>\n  e.type === 'console.dashboards/tab';\n\nexport const isDashboardsCard = (e: Extension): e is DashboardsCard =>\n  e.type === 'console.dashboards/card';\n\nexport const isDashboardsOverviewHealthPrometheusSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthPrometheusSubsystem =>\n  e.type === 'console.dashboards/overview/health/prometheus';\n\nexport const isResolvedDashboardsOverviewHealthPrometheusSubsystem = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthPrometheusSubsystem> =>\n  e.type === 'console.dashboards/overview/health/prometheus';\n\nexport const isDashboardsOverviewHealthURLSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthURLSubsystem => e.type === 'console.dashboards/overview/health/url';\n\nexport const isResolvedDashboardsOverviewHealthURLSubsystem = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthURLSubsystem> =>\n  e.type === 'console.dashboards/overview/health/url';\n\nexport const isDashboardsOverviewHealthResourceSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthResourceSubsystem =>\n  e.type === 'console.dashboards/overview/health/resource';\n\nexport const isResolvedDashboardsOverviewHealthResourceSubsystem = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthResourceSubsystem> =>\n  e.type === 'console.dashboards/overview/health/resource';\n\nexport const isDashboardsOverviewHealthOperator = (\n  e: Extension,\n): e is DashboardsOverviewHealthOperator =>\n  e.type === 'console.dashboards/overview/health/operator';\n\nexport const isResolvedDashboardsOverviewHealthOperator = (\n  e: Extension,\n): e is ResolvedExtension<DashboardsOverviewHealthOperator> =>\n  e.type === 'console.dashboards/overview/health/operator';\n\nexport const isDashboardsInventoryItemGroup = (e: Extension): e is DashboardsInventoryItemGroup =>\n  e.type === 'console.dashboards/overview/inventory/item/group';\n\nexport const isDashboardsOverviewInventoryItem = (\n  e: Extension,\n): e is DashboardsOverviewInventoryItem => e.type === 'console.dashboards/overview/inventory/item';\n\nexport const isDashboardsOverviewInventoryItemReplacement = (\n  e: Extension,\n): e is DashboardsOverviewInventoryItemReplacement =>\n  e.type === 'console.dashboards/overview/inventory/item/replacement';\n\nexport const isProjectDashboardInventoryItem = (e: Extension): e is ProjectDashboardInventoryItem =>\n  e.type === 'console.dashboards/project/overview/item';\n\nexport const isDashboardsOverviewResourceActivity = (\n  e: Extension,\n): e is DashboardsOverviewResourceActivity =>\n  e.type === 'console.dashboards/overview/activity/resource';\n\nexport const isDashboardsOverviewPrometheusActivity = (\n  e: Extension,\n): e is DashboardsOverviewPrometheusActivity =>\n  e.type === 'console.dashboards/overview/prometheus/activity/resource';\n\nexport type DashboardsOverviewHealthSubsystem =\n  | DashboardsOverviewHealthURLSubsystem\n  | DashboardsOverviewHealthPrometheusSubsystem\n  | DashboardsOverviewHealthResourceSubsystem\n  | DashboardsOverviewHealthOperator;\n\nexport const isDashboardsOverviewHealthSubsystem = (\n  e: Extension,\n): e is DashboardsOverviewHealthSubsystem =>\n  isDashboardsOverviewHealthURLSubsystem(e) ||\n  isDashboardsOverviewHealthPrometheusSubsystem(e) ||\n  isDashboardsOverviewHealthResourceSubsystem(e) ||\n  isDashboardsOverviewHealthOperator(e);\n\ntype DashboardsOverviewInventoryItemProperties<\n  T extends K8sModel = K8sModel,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = {\n  /** The model for `resource` which will be fetched. Used to get the model's `label` or `abbr`. */\n  model: CodeRef<T>;\n  /** Function which maps various statuses to groups. */\n  mapper?: CodeRef<StatusGroupMapper<T, R>>;\n  /** Additional resources which will be fetched and passed to the `mapper` function. */\n  additionalResources?: CodeRef<WatchK8sResources<R>>;\n};\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** Gives full control over Console feature flags. */\nexport type FeatureFlag = ExtensionDeclaration<\n  'console.flag',\n  {\n    /** Used to set/unset arbitrary feature flags. */\n    handler: CodeRef<(callback: SetFeatureFlag) => void>;\n  }\n>;\n\n/** Adds new Console feature flag driven by the presence of a CRD on the cluster. */\nexport type ModelFeatureFlag = ExtensionDeclaration<\n  'console.flag/model',\n  {\n    /** The name of the flag to set once the CRD is detected. */\n    flag: string;\n    /** The model which refers to a `CustomResourceDefinition`. */\n    model: ExtensionK8sModel;\n  }\n>;\n\n// Type guards\n\nexport const isFeatureFlag = (e: Extension): e is FeatureFlag => e.type === 'console.flag';\n\nexport const isModelFeatureFlag = (e: Extension): e is ModelFeatureFlag =>\n  e.type === 'console.flag/model';\n\n// Support types\n\nexport type SetFeatureFlag = (flag: string, enabled: boolean) => void;\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type FileUpload = ExtensionDeclaration<\n  'console.file-upload',\n  {\n    /** Supported file extensions. */\n    fileExtensions: string[];\n    /** Function which handles the file drop action. */\n    handler: CodeRef<FileUploadHandler>;\n  }\n>;\n\n// Type guards\n\nexport const isFileUpload = (e: Extension): e is FileUpload => e.type === 'console.file-upload';\n\n// Support types\n\nexport type FileUploadHandler = (file: File, namespace: string) => void;\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration } from '../types';\n\ntype NavItemProperties = {\n  /** A unique identifier for this item. */\n  id: string;\n  /** The perspective ID to which this item belongs to. If not specified, contributes to the default perspective. */\n  perspective?: string;\n  /** Navigation section to which this item belongs to. If not specified, render this item as a top level link. */\n  section?: string;\n  /** Adds data attributes to the DOM. */\n  dataAttributes?: { [key: string]: string };\n  /** Mark this item as active when the URL starts with one of these paths. */\n  startsWith?: string[];\n  /** Insert this item before the item referenced here. For arrays, the first one found in order is used. */\n  insertBefore?: string | string[];\n  /** Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence. */\n  insertAfter?: string | string[];\n};\n\nexport type NavItem = ExtensionDeclaration<\n  'console.navigation/href',\n  NavItemProperties & {\n    name: string;\n  }\n>;\n\nexport type HrefNavItem = ExtensionDeclaration<\n  'console.navigation/href',\n  NavItemProperties & {\n    /** The name of this item. */\n    name: string;\n    /** The link href value. */\n    href: string;\n    /** if true, adds /ns/active-namespace to the end */\n    namespaced?: boolean;\n    /** if true, adds /k8s/ns/active-namespace to the begining */\n    prefixNamespaced?: boolean;\n  }\n>;\n\nexport type ResourceNSNavItem = ExtensionDeclaration<\n  'console.navigation/resource-ns',\n  NavItemProperties & {\n    /** Overrides the default name. If not supplied the name of the link will equal the plural value of the model. */\n    name?: string;\n    /** The model for which this nav item links to. */\n    model: ExtensionK8sModel;\n  }\n>;\n\nexport type ResourceClusterNavItem = ExtensionDeclaration<\n  'console.navigation/resource-cluster',\n  NavItemProperties & {\n    /** Overrides the default name. If not supplied the name of the link will equal the plural value of the model. */\n    name?: string;\n    /** The model for which this nav item links to. */\n    model: ExtensionK8sModel;\n  }\n>;\n\nexport type Separator = ExtensionDeclaration<\n  'console.navigation/separator',\n  Omit<NavItemProperties, 'startsWith'>\n>;\n\nexport type NavSection = ExtensionDeclaration<\n  'console.navigation/section',\n  Omit<NavItemProperties, 'startsWith' | 'section'> & {\n    /** Name of this section. If not supplied, only a separator will be shown above the section. */\n    name?: string;\n  }\n>;\n\n// Type guards\n\nexport const isHrefNavItem = (e: Extension): e is HrefNavItem =>\n  e.type === 'console.navigation/href';\n\nexport const isResourceNSNavItem = (e: Extension): e is ResourceNSNavItem =>\n  e.type === 'console.navigation/resource-ns';\n\nexport const isResourceClusterNavItem = (e: Extension): e is ResourceClusterNavItem =>\n  e.type === 'console.navigation/resource-cluster';\n\nexport const isSeparator = (e: Extension): e is Separator =>\n  e.type === 'console.navigation/separator';\n\nexport const isNavSection = (e: Extension): e is NavSection =>\n  e.type === 'console.navigation/section';\n\nexport const isNavItem = (e: Extension): e is NavItem => {\n  return isHrefNavItem(e) || isResourceNSNavItem(e) || isResourceClusterNavItem(e);\n};\n","import { RouteComponentProps } from 'react-router';\nimport { ExtensionK8sGroupKindModel, ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\ntype ResourcePageProperties = {\n  /** The model for which this resource page links to. */\n  model: ExtensionK8sGroupKindModel;\n  /** The component to be rendered when the route matches. */\n  component: CodeRef<\n    React.ComponentType<{\n      match: RouteComponentProps['match'];\n      /** The namespace for which this resource page links to. */\n      namespace: string;\n      /** The model for which this resource page links to. */\n      model: ExtensionK8sModel;\n    }>\n  >;\n};\n\ntype RoutePageProperties = {\n  /** The perspective to which this page belongs to. If not specified, contributes to all perspectives. */\n  perspective?: string;\n  /** The component to be rendered when the route matches. */\n  component: CodeRef<React.ComponentType<RouteComponentProps>>;\n  /** Valid URL path or array of paths that `path-to-regexp@^1.7.0` understands. */\n  path: string | string[];\n  /** When true, will only match if the path matches the `location.pathname` exactly. */\n  exact?: boolean;\n};\n\n/** Adds new page to Console router. */\nexport type RoutePage = ExtensionDeclaration<'console.page/route', RoutePageProperties>;\n\n/** Adds new resource list page to Console router. */\nexport type ResourceListPage = ExtensionDeclaration<\n  'console.page/resource/list',\n  ResourcePageProperties & {}\n>;\n\n/** Adds new resource details page to Console router. */\nexport type ResourceDetailsPage = ExtensionDeclaration<\n  'console.page/resource/details',\n  ResourcePageProperties & {}\n>;\n\n/** Adds new resource tab page to Console router. */\nexport type ResourceTabPage = ExtensionDeclaration<\n  'console.page/resource/tab',\n  Omit<ResourcePageProperties, 'component'> & {\n    /** The component to be rendered when the route matches. */\n    component: CodeRef<React.ComponentType<RouteComponentProps>>;\n    /** The name of the tab. */\n    name: string;\n    /** The optional href for the tab link. If not provided, the first `path` is used. */\n    href?: string;\n    /** When true, will only match if the path matches the `location.pathname` exactly. */\n    exact?: boolean;\n  }\n>;\n\n/** Adds new standalone page (rendered outside the common page layout) to Console router. */\nexport type StandaloneRoutePage = ExtensionDeclaration<\n  'console.page/route/standalone',\n  Omit<RoutePageProperties, 'perspective'>\n>;\n\n// Type guards\n\nexport const isRoutePage = (e: Extension): e is RoutePage => e.type === 'console.page/route';\n\nexport const isStandaloneRoutePage = (e: Extension): e is StandaloneRoutePage =>\n  e.type === 'console.page/route/standalone';\n\nexport const isResourceListPage = (e: Extension): e is ResourceListPage =>\n  e.type === 'console.page/resource/list';\n\nexport const isResourceDetailsPage = (e: Extension): e is ResourceDetailsPage =>\n  e.type === 'console.page/resource/details';\n\nexport const isResourceTabPage = (e: Extension): e is ResourceTabPage =>\n  e.type === 'console.page/resource/tab';\n","import * as React from 'react';\nimport { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n// Align type with React.lazy\ntype LazyComponent = { default: React.ComponentType };\n\nexport type Perspective = ExtensionDeclaration<\n  'console.perspective',\n  {\n    /** The perspective identifier. */\n    id: string;\n    /** The perspective display name. */\n    name: string;\n    /** The perspective display icon. */\n    icon: CodeRef<LazyComponent>;\n    /** Whether the perspective is the default. There can only be one default. */\n    default?: boolean;\n    /** Default pinned resources on the nav */\n    defaultPins?: ExtensionK8sModel[];\n    /** The function to get perspective landing page URL. */\n    landingPageURL: CodeRef<(flags: { [key: string]: boolean }, isFirstVisit: boolean) => string>;\n    /** The function to get redirect URL for import flow. */\n    importRedirectURL: CodeRef<(namespace: string) => string>;\n    /** The hook to detect default perspective */\n    usePerspectiveDetection?: CodeRef<() => [boolean, boolean]>; // [enablePerspective: boolean, loading: boolean]\n  }\n>;\n\nexport const isPerspective = (e: Extension): e is Perspective => {\n  return e.type === 'console.perspective';\n};\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { K8sResourceCommon } from './console-types';\n\nexport type PVCCreateProp = ExtensionDeclaration<\n  'console.pvc/create-prop',\n  {\n    /** Label for the create prop action. */\n    label: string;\n    /** Path for the create prop action. */\n    path: string;\n  }\n>;\n\nexport type PVCAlert = ExtensionDeclaration<\n  'console.pvc/alert',\n  {\n    /** The alert component. */\n    alert: CodeRef<React.ComponentType<{ pvc: K8sResourceCommon }>>;\n  }\n>;\n\nexport type PVCStatus = ExtensionDeclaration<\n  'console.pvc/status',\n  {\n    /** Priority for the status component. Bigger value means higher priority. */\n    priority: number;\n    /** The status component. */\n    status: CodeRef<React.ComponentType<{ pvc: K8sResourceCommon }>>;\n    /** Predicate that tells whether to render the status component or not. */\n    predicate: CodeRef<(pvc: K8sResourceCommon) => boolean>;\n  }\n>;\n\nexport type PVCDelete = ExtensionDeclaration<\n  'console.pvc/delete',\n  {\n    /** Predicate that tells whether to use the extension or not. */\n    predicate: CodeRef<(pvc: K8sResourceCommon) => boolean>;\n    /** Method for the PVC delete operation. */\n    onPVCKill: CodeRef<(pvc: K8sResourceCommon) => Promise<void>>;\n    /** Alert component to show additional information. */\n    alert: CodeRef<React.ComponentType<{ pvc: K8sResourceCommon }>>;\n  }\n>;\n\n// Type guards\n\nexport const isPVCCreateProp = (e: Extension): e is PVCCreateProp =>\n  e.type === 'console.pvc/create-prop';\n\nexport const isPVCAlert = (e: Extension): e is PVCAlert => e.type === 'console.pvc/alert';\n\nexport const isPVCStatus = (e: Extension): e is PVCStatus => e.type === 'console.pvc/status';\n\nexport const isPVCDelete = (e: Extension): e is PVCDelete => e.type === 'console.pvc/delete';\n","import { Reducer } from 'redux';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** Adds new reducer to Console Redux store which operates on `plugins.<scope>` substate. */\nexport type ReduxReducer = ExtensionDeclaration<\n  'console.redux-reducer',\n  {\n    /** The key to represent the reducer-managed substate within the Redux state object. */\n    scope: string;\n    /** The reducer function, operating on the reducer-managed substate. */\n    reducer: CodeRef<Reducer>;\n  }\n>;\n\n// Type guards\n\nexport const isReduxReducer = (e: Extension): e is ReduxReducer =>\n  e.type === 'console.redux-reducer';\n","import { ExtensionK8sGroupModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration } from '../types';\n\n/** Customize the display of models by overriding values retrieved and generated through API discovery. */\nexport type ModelMetadata = ExtensionDeclaration<\n  'console.resource-metadata',\n  {\n    /** The model to customize. May specify only a group, or optional version and kind. */\n    model: ExtensionK8sGroupModel;\n    /** Whether to consider this model reference as tech preview or dev preview. */\n    badge?: 'tech' | 'dev';\n    /** The color to associate to this model. */\n    color?: string;\n    /** Override the label. Requires `kind` be provided. */\n    label?: string;\n    /** Override the plural label. Requires `kind` be provided. */\n    labelPlural?: string;\n    /** Customize the abbreviation. Defaults to All uppercase chars in the kind up to 4 characters long. Requires `kind` be provided. */\n    abbr?: string;\n  }\n>;\n\n// Type guards\n\nexport const isModelMetadata = (e: Extension): e is ModelMetadata =>\n  e.type === 'console.resource-metadata';\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type TelemetryListener = ExtensionDeclaration<\n  'console.telemetry/listener',\n  {\n    /** Listen for telemetry events */\n    listener: CodeRef<TelemetryEventListener>;\n  }\n>;\n\n// P should be valid JSON\nexport type TelemetryEventListener = <P = any>(eventType: string, properties?: P) => void;\n\n// Type guards\n\nexport const isTelemetryListener = (e: Extension): e is TelemetryListener => {\n  return e.type === 'console.telemetry/listener';\n};\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\n/** YAML templates for editing resources via the yaml editor. */\nexport type YAMLTemplate = ExtensionDeclaration<\n  'console.yaml-template',\n  {\n    /** Model associated with the template. */\n    model: ExtensionK8sModel;\n    /** The YAML template. */\n    template: CodeRef<string>;\n    /** The name of the template. Use the name `default` to mark this as the default template. */\n    name: string | 'default';\n  }\n>;\n\n// Type guards\n\nexport const isYAMLTemplate = (e: Extension): e is YAMLTemplate =>\n  e.type === 'console.yaml-template';\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type AlertAction = ExtensionDeclaration<\n  'console.alert-action',\n  {\n    /* Alert name as defined by `alert.rule.name` property */\n    alert: string;\n    /* Action text */\n    text: string;\n    /* Function to perform side effect */\n    action: CodeRef<(alert) => void>;\n  }\n>;\n\nexport const isAlertAction = (e: Extension): e is AlertAction => e.type === 'console.alert-action';\n","import { ButtonProps } from '@patternfly/react-core';\nimport { TableGridBreakpoint, OnSelect, SortByDirection, ICell } from '@patternfly/react-table';\nimport { RouteComponentProps } from 'react-router';\nimport {\n  ExtensionK8sGroupKindModel,\n  K8sModel,\n  PrometheusLabels,\n  PrometheusValue,\n  ResolvedExtension,\n  Selector,\n} from '../api/common-types';\nimport { Extension, ExtensionTypeGuard } from '../types';\n\nexport type OwnerReference = {\n  name: string;\n  kind: string;\n  uid: string;\n  apiVersion: string;\n  controller?: boolean;\n  blockOwnerDeletion?: boolean;\n};\n\nexport type ObjectReference = {\n  kind?: string;\n  namespace?: string;\n  name?: string;\n  uid?: string;\n  apiVersion?: string;\n  resourceVersion?: string;\n  fieldPath?: string;\n};\n\nexport type ObjectMetadata = {\n  annotations?: { [key: string]: string };\n  clusterName?: string;\n  creationTimestamp?: string;\n  deletionGracePeriodSeconds?: number;\n  deletionTimestamp?: string;\n  finalizers?: string[];\n  generateName?: string;\n  generation?: number;\n  labels?: { [key: string]: string };\n  managedFields?: any[];\n  name?: string;\n  namespace?: string;\n  ownerReferences?: OwnerReference[];\n  resourceVersion?: string;\n  uid?: string;\n};\n\n// Properties common to (almost) all Kubernetes resources.\nexport type K8sResourceCommon = {\n  apiVersion?: string;\n  kind?: string;\n  metadata?: ObjectMetadata;\n};\n\nexport type K8sVerb =\n  | 'create'\n  | 'get'\n  | 'list'\n  | 'update'\n  | 'patch'\n  | 'delete'\n  | 'deletecollection'\n  | 'watch';\n\nexport type AccessReviewResourceAttributes = {\n  group?: string;\n  resource?: string;\n  subresource?: string;\n  verb?: K8sVerb;\n  name?: string;\n  namespace?: string;\n};\n\n/**\n * @deprecated Use K8sGroupVersionKind type instead. Support for type K8sResourceKindReference will be removed in a future release.\n * @see K8sGroupVersionKind\n * GroupVersionKind unambiguously identifies a kind.\n * https://godoc.org/k8s.io/apimachinery/pkg/runtime/schema#GroupVersionKind\n * TODO: Change this to a regex-type if it ever becomes a thing (https://github.com/Microsoft/TypeScript/issues/6579)\n */\nexport type GroupVersionKind = string;\n\n/**\n * The canonical, unique identifier for a Kubernetes resource type.\n * Maintains backwards-compatibility with references using the `kind` string field.\n */\nexport type K8sResourceKindReference = GroupVersionKind | string;\n\nexport type K8sGroupVersionKind = { group?: string; version: string; kind: string };\n\nenum InventoryStatusGroup {\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  PROGRESS = 'PROGRESS',\n  NOT_MAPPED = 'NOT_MAPPED',\n  UNKNOWN = 'UNKNOWN',\n}\n\ntype StatusGroup = {\n  [key in InventoryStatusGroup | string]: {\n    filterType?: string;\n    statusIDs: string[];\n    count: number;\n  };\n};\n\nexport type StatusGroupMapper<\n  T extends K8sResourceCommon = K8sResourceCommon,\n  R extends { [key: string]: K8sResourceCommon[] } = { [key: string]: K8sResourceCommon[] }\n> = (resources: T[], additionalResources?: R) => StatusGroup;\n\nexport enum HealthState {\n  OK = 'OK',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  LOADING = 'LOADING',\n  UNKNOWN = 'UNKNOWN',\n  UPDATING = 'UPDATING',\n  PROGRESS = 'PROGRESS',\n  UPGRADABLE = 'UPGRADABLE',\n  NOT_AVAILABLE = 'NOT_AVAILABLE',\n}\n\n// Only covers range and instant vector responses for now.\nexport type PrometheusResult = {\n  metric: PrometheusLabels;\n  values?: PrometheusValue[];\n  value?: PrometheusValue;\n};\n\nexport type PrometheusData = {\n  resultType: 'matrix' | 'vector' | 'scalar' | 'string';\n  result: PrometheusResult[];\n};\n\nexport type PrometheusResponse = {\n  status: string;\n  data: PrometheusData;\n  errorType?: string;\n  error?: string;\n  warnings?: string[];\n};\n\nexport type WatchK8sResource = {\n  /** @deprecated Use groupVersionKind instead. The kind property will be removed in a future release. */\n  kind?: K8sResourceKindReference;\n  groupVersionKind?: K8sGroupVersionKind;\n  name?: string;\n  namespace?: string;\n  isList?: boolean;\n  selector?: Selector;\n  namespaced?: boolean;\n  limit?: number;\n  fieldSelector?: string;\n  optional?: boolean;\n};\n\nexport type ResourcesObject = { [key: string]: K8sResourceCommon | K8sResourceCommon[] };\n\nexport type WatchK8sResultsObject<R extends K8sResourceCommon | K8sResourceCommon[]> = {\n  data: R;\n  loaded: boolean;\n  loadError: any;\n};\n\nexport type WatchK8sResults<R extends ResourcesObject> = {\n  [k in keyof R]: WatchK8sResultsObject<R[k]>;\n};\n\nexport type WatchK8sResources<R extends ResourcesObject> = {\n  [k in keyof R]: WatchK8sResource;\n};\n\nexport type WatchK8sResourcesGeneric = {\n  [key: string]: {\n    model?: ExtensionK8sGroupKindModel;\n    opts?: Partial<WatchK8sResource>;\n  };\n};\n\nexport type FirehoseResource = {\n  kind: K8sResourceKindReference;\n  name?: string;\n  namespace?: string;\n  isList?: boolean;\n  selector?: Selector;\n  prop: string;\n  namespaced?: boolean;\n  optional?: boolean;\n  limit?: number;\n  fieldSelector?: string;\n};\n\nexport type FirehoseResult<\n  R extends K8sResourceCommon | K8sResourceCommon[] = K8sResourceCommon[]\n> = {\n  loaded: boolean;\n  loadError: string;\n  optional?: boolean;\n  data: R;\n  kind?: string;\n};\n\nexport type FirehoseResourcesResult = {\n  [key: string]: FirehoseResult<K8sResourceCommon | K8sResourceCommon[]>;\n};\n\nexport type WatchK8sResult<R extends K8sResourceCommon | K8sResourceCommon[]> = [R, boolean, any];\n\nexport type UseK8sWatchResource = <R extends K8sResourceCommon | K8sResourceCommon[]>(\n  initResource: WatchK8sResource | null,\n) => WatchK8sResult<R>;\n\nexport type UseK8sWatchResources = <R extends ResourcesObject>(\n  initResources: WatchK8sResources<R>,\n) => WatchK8sResults<R>;\n\nexport type UseResolvedExtensions = <E extends Extension>(\n  ...typeGuards: ExtensionTypeGuard<E>[]\n) => [ResolvedExtension<E>[], boolean, any[]];\n\nexport type ConsoleFetch = (\n  url: string,\n  options?: RequestInit,\n  timeout?: number,\n) => Promise<Response>;\n\nexport type ConsoleFetchJSON<T = any> = {\n  (url: string, method?: string, options?: RequestInit, timeout?: number): Promise<T>;\n  delete(url: string, json?: any, options?: RequestInit, timeout?: number): Promise<T>;\n  post(url: string, json: any, options?: RequestInit, timeout?: number): Promise<T>;\n  put(url: string, json: any, options?: RequestInit, timeout?: number): Promise<T>;\n  patch(url: string, json: any, options?: RequestInit, timeout?: number): Promise<T>;\n};\n\nexport type ConsoleFetchText = (...args: Parameters<ConsoleFetch>) => Promise<string>;\n\n/* Horizontal Nav Types */\nexport type NavPage = {\n  href?: string;\n  path?: string;\n  name: string;\n  component: React.ComponentType<RouteComponentProps>;\n};\n\nexport type HorizontalNavProps = {\n  resource?: K8sResourceCommon;\n  pages: NavPage[];\n};\n\nexport type TableColumn<D> = ICell & {\n  title: string;\n  id: string;\n  additional?: boolean;\n  sort?: ((data: D[], sortDirection: SortByDirection) => D[]) | string;\n};\n\nexport type RowProps<D, R extends any = {}> = {\n  obj: D;\n  rowData: R;\n  activeColumnIDs: Set<string>;\n};\n\ntype VirtualizedTableProps<D, R extends any = {}> = {\n  data: D[];\n  unfilteredData: D[];\n  loaded: boolean;\n  loadError: any;\n  columns: TableColumn<D>[];\n  Row: React.ComponentType<RowProps<D, R>>;\n  NoDataEmptyMsg?: React.ComponentType<{}>;\n  EmptyMsg?: React.ComponentType<{}>;\n  scrollNode?: () => HTMLElement;\n  onSelect?: OnSelect;\n  label?: string;\n  'aria-label'?: string;\n  gridBreakPoint?: TableGridBreakpoint;\n  rowData?: R;\n};\n\nexport type VirtualizedTableFC = <D, R extends any = {}>(\n  props: VirtualizedTableProps<D, R>,\n) => JSX.Element;\n\nexport type TableDataProps = {\n  id: string;\n  activeColumnIDs: Set<string>;\n  className?: string;\n};\n\nexport type UseActiveColumns = <D = any>({\n  columns,\n  showNamespaceOverride,\n  columnManagementID,\n}: {\n  columns: TableColumn<D>[];\n  showNamespaceOverride: boolean;\n  columnManagementID: string;\n}) => [TableColumn<D>[], boolean];\n\nexport type ListPageHeaderProps = {\n  title: string;\n  helpText?: React.ReactNode;\n  badge?: React.ReactNode;\n};\n\nexport type CreateWithPermissionsProps = {\n  createAccessReview?: {\n    groupVersionKind: GroupVersionKind;\n    namespace?: string;\n  };\n};\n\nexport type ListPageCreateProps = CreateWithPermissionsProps & {\n  groupVersionKind: GroupVersionKind;\n};\n\nexport type ListPageCreateLinkProps = CreateWithPermissionsProps & {\n  to: string;\n};\n\nexport type ListPageCreateButtonProps = CreateWithPermissionsProps & ButtonProps;\n\nexport type ListPageCreateDropdownProps = CreateWithPermissionsProps & {\n  items: {\n    [key: string]: React.ReactNode;\n  };\n  onClick: (item: string) => void;\n};\n\nexport type RowFilterItem = {\n  id: string;\n  title: string;\n  hideIfEmpty?: string;\n};\n\nexport type FilterValue = {\n  selected?: string[];\n  all?: string[];\n};\n\ntype RowFilterBase<R> = {\n  filterGroupName: string;\n  type: string;\n  items: RowFilterItem[];\n  filter: (input: FilterValue, obj: R) => boolean;\n  defaultSelected?: string[];\n};\n\nexport type RowMatchFilter<R = any> = RowFilterBase<R> & {\n  isMatch: (obj: R, id: string) => boolean;\n};\n\nexport type RowReducerFilter<R = any> = RowFilterBase<R> & {\n  reducer: (obj: R) => React.ReactText;\n};\n\nexport type RowFilter<R = any> = RowMatchFilter<R> | RowReducerFilter<R>;\n\nexport type ColumnLayout = {\n  id: string;\n  columns: ManagedColumn[];\n  selectedColumns: Set<string>;\n  showNamespaceOverride?: boolean;\n  type: string;\n};\n\nexport type ManagedColumn = {\n  id: string;\n  title: string;\n  additional?: boolean;\n};\n\nexport type OnFilterChange = (type: string, value: FilterValue) => void;\n\nexport type ListPageFilterProps<D = any> = {\n  data: D;\n  loaded: boolean;\n  rowFilters?: RowFilter[];\n  nameFilterPlaceholder?: string;\n  labelFilterPlaceholder?: string;\n  hideNameLabelFilters?: boolean;\n  hideLabelFilter?: boolean;\n  columnLayout?: ColumnLayout;\n  onFilterChange: OnFilterChange;\n  hideColumnManagement?: boolean;\n};\n\nexport type UseListPageFilter = <D, R>(\n  data: D[],\n  rowFilters?: RowFilter<R>[],\n  staticFilters?: { [key: string]: FilterValue },\n) => [D[], D[], OnFilterChange];\n\nexport type ResourceLinkProps = {\n  /** @deprecated Use groupVersionKind instead. The kind property will be removed in a future release. */\n  kind?: K8sResourceKindReference;\n  groupVersionKind?: K8sGroupVersionKind;\n  className?: string;\n  displayName?: string;\n  inline?: boolean;\n  linkTo?: boolean;\n  name?: string;\n  namespace?: string;\n  hideIcon?: boolean;\n  title?: string;\n  dataTest?: string;\n  onClick?: () => void;\n};\n\nexport type UseK8sModel = (\n  // Use K8sGroupVersionKind type instead of K8sResourceKindReference. Support for type K8sResourceKindReference will be removed in a future release.\n  groupVersionKind?: K8sResourceKindReference | K8sGroupVersionKind,\n) => [K8sModel, boolean];\nexport type UseK8sModels = () => [{ [key: string]: K8sModel }, boolean];\n\nexport type PerspectiveType = string;\n\nexport type UseActivePerspective = () => [\n  PerspectiveType,\n  React.Dispatch<React.SetStateAction<PerspectiveType>>,\n];\n\nexport type QueryParams = {\n  watch?: string;\n  labelSelector?: string;\n  fieldSelector?: string;\n  resourceVersion?: string;\n  [key: string]: string;\n};\n\nexport type Patch = {\n  op: string;\n  path: string;\n  value?: any;\n};\n\nexport type Cause = {\n  field: string;\n  message: string;\n  reason: string;\n};\n\nexport type Status = {\n  apiVersion: 'v1';\n  kind: 'Status';\n  details: {\n    causes: Cause[];\n    group: string;\n    kind: string;\n  };\n  message: string;\n  metadata: any;\n  reason: string;\n  status: string;\n};\n","import { RouteComponentProps } from 'react-router';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport type StorageProvider = ExtensionDeclaration<\n  'console.storage-provider',\n  {\n    name: string;\n    Component: CodeRef<React.ComponentType<Partial<RouteComponentProps>>>;\n  }\n>;\n\nexport const isStorageProvider = (e: Extension): e is StorageProvider =>\n  e.type === 'console.storage-provider';\n","import * as React from 'react';\nimport { ExtensionHook, ExtensionK8sKindVersionModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { AccessReviewResourceAttributes } from './console-types';\n\n/** ActionProvider contributes a hook that returns list of actions for specific context */\nexport type ActionProvider = ExtensionDeclaration<\n  'console.action/provider',\n  {\n    /** The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm */\n    contextId: string | 'resource';\n    /** A react hook which returns actions for the given scope.\n     * If contextId = `resource` then the scope will always be a K8s resource object\n     * */\n    provider: CodeRef<ExtensionHook<Action[]>>;\n  }\n>;\n\n/** ResourceActionProvider contributes a hook that returns list of actions for specific resource model */\nexport type ResourceActionProvider = ExtensionDeclaration<\n  'console.action/resource-provider',\n  {\n    /** The model for which this provider provides actions for. */\n    model: ExtensionK8sKindVersionModel;\n    /** A react hook which returns actions for the given resource model */\n    provider: CodeRef<ExtensionHook<Action[]>>;\n  }\n>;\n\n/** ActionGroup contributes an action group that can also be a submenu */\nexport type ActionGroup = ExtensionDeclaration<\n  'console.action/group',\n  {\n    /** ID used to identify the action section. */\n    id: string;\n    /** The label to display in the UI.\n     * Required for submenus.\n     * */\n    label?: string;\n    /** Whether this group should be displayed as submenu */\n    submenu?: boolean;\n    /** Insert this item before the item referenced here.\n     * For arrays, the first one found in order is used.\n     * */\n    insertBefore?: string | string[];\n    /** Insert this item after the item referenced here.\n     * For arrays, the first one found in order is used.\n     * insertBefore takes precedence.\n     * */\n    insertAfter?: string | string[];\n  }\n>;\n\n/** ActionFilter can be used to filter an action */\nexport type ActionFilter = ExtensionDeclaration<\n  'console.action/filter',\n  {\n    /** The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm */\n    contextId: string | 'resource';\n    /** A function which will filter actions based on some conditions.\n     * scope: The scope in which actions should be provided for.\n     * Note: hook may be required if we want to remove the ModifyCount action from a deployment with HPA\n     * */\n    filter: CodeRef<(scope: any, action: Action) => boolean>;\n  }\n>;\n\nexport type SupportedActionExtensions =\n  | ActionProvider\n  | ResourceActionProvider\n  | ActionGroup\n  | ActionFilter;\n\n// Type Guards\n\nexport const isActionProvider = (e: Extension): e is ActionProvider => {\n  return e.type === 'console.action/provider';\n};\n\nexport const isResourceActionProvider = (e: Extension): e is ResourceActionProvider => {\n  return e.type === 'console.action/resource-provider';\n};\n\nexport const isActionGroup = (e: Extension): e is ActionGroup => {\n  return e.type === 'console.action/group';\n};\n\nexport const isActionFilter = (e: Extension): e is ActionFilter => {\n  return e.type === 'console.action/filter';\n};\n\n// Support types\n\nexport type Action = {\n  /** A unique identifier for this action. */\n  id: string;\n  /** The label to display in the UI. */\n  label: React.ReactNode;\n  /** Subtext for the menu item */\n  description?: string;\n  /** Executable callback or href.\n   * External links should automatically provide an external link icon on action.\n   * */\n  cta: (() => void) | { href: string; external?: boolean };\n  /** Whether the action is disabled. */\n  disabled?: boolean;\n  /** The tooltip for this action. */\n  tooltip?: string;\n  /** The icon for this action. */\n  icon?: string | React.ReactNode;\n  /** A `/` separated string where each segment denotes\n   * Eg. `add-to-project`, `menu-1/menu-2`\n   * */\n  path?: string;\n  /** Insert this item before the item referenced here.\n   * For arrays, the first one found in order is used.\n   * */\n  insertBefore?: string | string[];\n  /** Insert this item after the item referenced here.\n   * For arrays, the first one found in order is used.\n   * insertBefore takes precedence.\n   * */\n  insertAfter?: string | string[];\n  /** Describes the access check to perform. */\n  accessReview?: AccessReviewResourceAttributes;\n};\n","import * as React from 'react';\n// import { GraphElement } from '@patternfly/react-topology';\nimport { Extension/* , CodeRef */, ExtensionDeclaration } from '../types';\nimport { K8sResourceCommon } from './console-types';\nimport { BuildConfigData } from './topology-types';\n\n/** DetailsTab contributes a tab for the topology details panel. */\nexport type DetailsTab = ExtensionDeclaration<\n  'console.topology/details/tab',\n  {\n    /** A unique identifier for this details tab. */\n    id: string;\n    /** The tab label to display in the UI. */\n    label: string;\n    /** Insert this item before the item referenced here.\n     * For arrays, the first one found in order is used.\n     * */\n    insertBefore?: string | string[];\n    /** Insert this item after the item referenced here.\n     * For arrays, the first one found in order is used.\n     * insertBefore takes precedence.\n     * */\n    insertAfter?: string | string[];\n  }\n>;\n\n/** DetailsTabSection contributes a section for a specific tab in topology details panel. */\n// export type DetailsTabSection = ExtensionDeclaration<\n//   'console.topology/details/tab-section',\n//   {\n//     /** A unique identifier for this details tab section. */\n//     id: string;\n//     /** The parent tab ID that this section should contribute to. */\n//     tab: string;\n//     /** Returns a section for the graph element or undefined if not provided.\n//      * SDK component: <Section title={<optional>}>... padded area </Section>\n//      * @param renderNull should be used for section that defines Adapter to\n//      *  determine if adapter component renders null or not\n//      * */\n//     section: CodeRef<\n//       (element: GraphElement, renderNull?: () => null) => React.Component | undefined\n//     >;\n//     /** Insert this item before the item referenced here.\n//      * For arrays, the first one found in order is used.\n//      * */\n//     insertBefore?: string | string[];\n//     /** Insert this item after the item referenced here.\n//      * For arrays, the first one found in order is used.\n//      * insertBefore takes precedence.\n//      * */\n//     insertAfter?: string | string[];\n//   }\n// >;\n\n/** DetailsResourceLink contributes a link for specific topology context or graph element. */\n// export type DetailsResourceLink = ExtensionDeclaration<\n//   'console.topology/details/resource-link',\n//   {\n//     /** A higher priority factory will get the first chance to create the link. */\n//     priority?: number;\n//     /** Return the resource link if provided, otherwise undefined.\n//      * Use ResourceIcon and ResourceLink for styles.\n//      * */\n//     link: CodeRef<(element: GraphElement) => React.Component | undefined>;\n//   }\n// >;\n\n/** DetailsResourceAlert contributes an alert for specific topology context or graph element. */\n// export type DetailsResourceAlert = ExtensionDeclaration<\n//   'console.topology/details/resource-alert',\n//   {\n//     /** The ID of this alert. Used to save state if the alert shouldn't be shown after dismissed. */\n//     id: string;\n//     /** Hook to return the contents of the Alert. */\n//     contentProvider: CodeRef<(element: GraphElement) => DetailsResourceAlertContent | null>;\n//   }\n// >;\n\n/** PodAdapter contributes an adapter to adapt element to data that can be used by Pod component */\n// export type PodAdapter = ExtensionDeclaration<\n//   'console.topology/adapter/pod',\n//   {\n//     adapt: CodeRef<(element: GraphElement) => AdapterDataType<PodsAdapterDataType> | undefined>;\n//   }\n// >;\n\n/** BuildAdapter contributes an adapter to adapt element to data that can be used by Build component */\n// export type BuildAdapter = ExtensionDeclaration<\n//   'console.topology/adapter/build',\n//   {\n//     adapt: CodeRef<(element: GraphElement) => AdapterDataType<BuildConfigData> | undefined>;\n//   }\n// >;\n\n/** NetworkAdpater contributes an adapter to adapt element to data that can be used by Networking component */\n// export type NetworkAdapter = ExtensionDeclaration<\n//   'console.topology/adapter/network',\n//   {\n//     adapt: CodeRef<(element: GraphElement) => NetworkAdapterType | undefined>;\n//   }\n// >;\n\nexport type SupportedTopologyDetailsExtensions =\n  | DetailsTab\n  // | DetailsTabSection\n  // | DetailsResourceLink\n  // | DetailsResourceAlert\n  // | PodAdapter\n  // | BuildAdapter\n  // | NetworkAdapter;\n\n// Type guards\n\nexport const isDetailsTab = (e: Extension): e is DetailsTab => {\n  return e.type === 'console.topology/details/tab';\n};\n\n// export const isDetailsTabSection = (e: Extension): e is DetailsTabSection => {\n//   return e.type === 'console.topology/details/tab-section';\n// };\n//\n// export const isDetailsResourceLink = (e: Extension): e is DetailsResourceLink => {\n//   return e.type === 'console.topology/details/resource-link';\n// };\n//\n// export const isDetailsResourceAlert = (e: Extension): e is DetailsResourceAlert => {\n//   return e.type === 'console.topology/details/resource-alert';\n// };\n//\n// export const isPodAdapter = (e: Extension): e is PodAdapter => {\n//   return e.type === 'console.topology/adapter/pod';\n// };\n//\n// export const isBuildAdapter = (e: Extension): e is BuildAdapter => {\n//   return e.type === 'console.topology/adapter/build';\n// };\n//\n// export const isNetworkAdapter = (e: Extension): e is NetworkAdapter => {\n//   return e.type === 'console.topology/adapter/network';\n// };\n\nexport type DetailsResourceAlertContent = {\n  /** The title of the alert */\n  title: string;\n  /** Whether to show a dismiss button. false by default.\n   * State will be store in user settings, once dismissed alert won't show up again untill user settings state resets\n   */\n  dismissible?: boolean;\n  content: React.Component | undefined | JSX.Element;\n  variant?: 'success' | 'danger' | 'warning' | 'info' | 'default';\n  actionLinks?: React.ReactNode;\n};\n\nexport type AdapterDataType<D = {}> = {\n  resource: K8sResourceCommon;\n  provider: (resource: K8sResourceCommon) => D;\n};\n\nexport type PodsAdapterDataType<E = K8sResourceCommon> = {\n  pods: E[];\n  loaded: boolean;\n  loadError: string;\n  emptyText?: string;\n  allPodsLink?: string;\n  buildConfigData?: BuildConfigData;\n};\n\nexport type NetworkAdapterType = {\n  resource: K8sResourceCommon;\n};\n","import { Extension, ExtensionDeclaration, CodeRef } from '../types';\n// import { WatchK8sResourcesGeneric } from './console-types';\nimport {\n  // CreateConnectionGetter,\n  RelationshipProviderCreate,\n  RelationshipProviderProvides,\n  // TopologyApplyDisplayOptions,\n  // TopologyDataModelDepicted,\n  // TopologyDataModelGetter,\n  // TopologyDataModelReconciler,\n  TopologyDecoratorGetter,\n  TopologyDecoratorQuadrant,\n  // TopologyDisplayOption,\n  // ViewComponentFactory,\n} from './topology-types';\n\n/** Getter for a ViewComponentFactory */\n// export type TopologyComponentFactory = ExtensionDeclaration<\n//   'console.topology/component/factory',\n//   {\n//     /** Getter for a ViewComponentFactory */\n//     getFactory: CodeRef<ViewComponentFactory>;\n//   }\n// >;\n\n/** Getter for the create connector function */\n// export type TopologyCreateConnector = ExtensionDeclaration<\n//   'console.topology/create/connector',\n//   {\n//     /** Getter for the create connector function */\n//     getCreateConnector: CodeRef<CreateConnectionGetter>;\n//   }\n// >;\n\n/** Topology Data Model Factory Extension */\n// export type TopologyDataModelFactory = ExtensionDeclaration<\n//   'console.topology/data/factory',\n//   {\n//     /** Unique ID for the factory. */\n//     id: string;\n//     /** Priority for the factory */\n//     priority: number;\n//     /** Resources to be fetched from useK8sWatchResources hook. */\n//     resources?: WatchK8sResourcesGeneric;\n//     /** Keys in resources containing workloads. */\n//     workloadKeys?: string[];\n//     /** Getter for the data model factory */\n//     getDataModel?: CodeRef<TopologyDataModelGetter>;\n//     /** Getter for function to determine if a resource is depicted by this model factory */\n//     isResourceDepicted?: CodeRef<TopologyDataModelDepicted>;\n//     /** Getter for function to reconcile data model after all extensions' models have loaded */\n//     getDataModelReconciler?: CodeRef<TopologyDataModelReconciler>;\n//   }\n// >;\n\n/** Topology Display Filters Extension */\n// export type TopologyDisplayFilters = ExtensionDeclaration<\n//   'console.topology/display/filters',\n//   {\n//     // Getter for topology filters specific to the extension\n//     getTopologyFilters: CodeRef<() => TopologyDisplayOption[]>;\n//     // Function to apply filters to the model\n//     applyDisplayOptions: CodeRef<TopologyApplyDisplayOptions>;\n//   }\n// >;\n\n/** Topology Decorator Provider Extension */\nexport type TopologyDecoratorProvider = ExtensionDeclaration<\n  'console.topology/decorator/provider',\n  {\n    // id for topology decorator specific to the extension\n    id: string;\n    // priority for topology decorator specific to the extension\n    priority: number;\n    // quadrant for topology decorator specific to the extension\n    quadrant: TopologyDecoratorQuadrant;\n    // decorator specific to the extension\n    decorator: CodeRef<TopologyDecoratorGetter>;\n  }\n>;\n\n/** Topology relationship provider connector extension */\nexport type TopologyRelationshipProvider = ExtensionDeclaration<\n  'console.topology/relationship/provider',\n  {\n    // use to determine if a connection can be created between the source and target node\n    provides: CodeRef<RelationshipProviderProvides>;\n    // tooltip to show when connector operation is hovering over the drop target ex: \"Create a Visual Connector\"\n    tooltip: string;\n    // callback to execute when connector is drop over target node to create a connection\n    create: CodeRef<RelationshipProviderCreate>;\n    // priority for relationship, higher will be preferred in case of multiple\n    priority: number;\n  }\n>;\n\n// Type Guards\n\n// export const isTopologyComponentFactory = (e: Extension): e is TopologyComponentFactory =>\n//   e.type === 'console.topology/component/factory';\n//\n// export const isTopologyCreateConnector = (e: Extension): e is TopologyCreateConnector =>\n//   e.type === 'console.topology/create/connector';\n//\n// export const isTopologyDataModelFactory = (e: Extension): e is TopologyDataModelFactory =>\n//   e.type === 'console.topology/data/factory';\n//\n// export const isTopologyDisplayFilters = (e: Extension): e is TopologyDisplayFilters =>\n//   e.type === 'console.topology/display/filters';\n\nexport const isTopologyDecoratorProvider = (e: Extension): e is TopologyDecoratorProvider =>\n  e.type === 'console.topology/decorator/provider';\n\nexport const isTopologyRelationshipProvider = (e: Extension): e is TopologyRelationshipProvider =>\n  e.type === 'console.topology/relationship/provider';\n","import { ExtensionK8sModel } from '../api/common-types';\nimport { CodeRef, Extension, ExtensionDeclaration } from '../types';\n\n/** Properties of custom CreateResource component. */\nexport type CreateResourceComponentProps = { namespace?: string };\n\nexport type CreateResource = ExtensionDeclaration<\n  'console.resource/create',\n  {\n    /** The model for which this create resource page will be rendered. */\n    model: ExtensionK8sModel;\n    /** The component to be rendered when the model matches */\n    component: CodeRef<React.ComponentType<CreateResourceComponentProps>>;\n  }\n>;\n\n// Type guards\n\nexport const isCreateResource = (e: Extension): e is CreateResource =>\n  e.type === 'console.resource/create';\n","import * as React from 'react';\nimport { JSONSchema7Type } from 'json-schema';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\n\nexport enum UserPreferenceFieldType {\n  dropdown = 'dropdown',\n  checkbox = 'checkbox',\n  custom = 'custom',\n}\n\nexport type UserPreferenceDropdownField = {\n  type: UserPreferenceFieldType.dropdown;\n  userSettingsKey: string;\n  defaultValue?: string;\n  options: {\n    value: string;\n    label: string;\n  }[];\n};\n\nexport type UserPreferenceCheckboxFieldValue = string | number | boolean;\n\nexport type UserPreferenceCheckboxField = {\n  type: UserPreferenceFieldType.checkbox;\n  userSettingsKey: string;\n  label: string;\n  trueValue: UserPreferenceCheckboxFieldValue;\n  falseValue: UserPreferenceCheckboxFieldValue;\n  defaultValue?: UserPreferenceCheckboxFieldValue;\n};\n\nexport type UserPreferenceCustomField = {\n  type: UserPreferenceFieldType.custom;\n  component: CodeRef<React.ComponentType>;\n  props?: { [key: string]: JSONSchema7Type };\n};\n\nexport type UserPreferenceField =\n  | UserPreferenceDropdownField\n  | UserPreferenceCheckboxField\n  | UserPreferenceCustomField;\n\nexport type UserPreferenceGroup = ExtensionDeclaration<\n  'console.user-preference/group',\n  {\n    /** ID used to identify the user preference group. */\n    id: string;\n    /** The label of the user preference group */\n    label: string;\n    /** ID of user preference group before which this group should be placed */\n    insertBefore?: string;\n    /** ID of user preference group after which this group should be placed */\n    insertAfter?: string;\n  }\n>;\n\nexport type UserPreferenceItem = ExtensionDeclaration<\n  'console.user-preference/item',\n  {\n    /** ID used to identify the user preference item and referenced in insertAfter and insertBefore to define the item order. */\n    id: string;\n    /** IDs used to identify the user preference groups the item would belong to. */\n    groupId?: string;\n    /** The label of the user preference */\n    label: string;\n    /** The description of the user preference. */\n    description: string;\n    /** The input field options used to render the values to set the user preference. */\n    field: UserPreferenceField;\n    /** ID of user preference item before which this item should be placed */\n    insertBefore?: string;\n    /** ID of user preference item after which this item should be placed */\n    insertAfter?: string;\n  }\n>;\n\n// Type guards\n\nexport const isUserPreferenceItem = (e: Extension): e is UserPreferenceItem => {\n  return e.type === 'console.user-preference/item';\n};\n\nexport const isUserPreferenceGroup = (e: Extension): e is UserPreferenceGroup => {\n  return e.type === 'console.user-preference/group';\n};\n","import { ExtensionK8sKindVersionModel } from '../api/common-types';\nimport { Extension, ExtensionDeclaration, CodeRef } from '../types';\nimport { K8sResourceCommon } from './console-types';\n\nexport type PageComponentProps<R extends K8sResourceCommon = K8sResourceCommon> = {\n  filters?: any;\n  selected?: any;\n  match?: any;\n  obj?: R;\n  params?: any;\n  customData?: any;\n  showTitle?: boolean;\n  fieldSelector?: string;\n};\n\nexport type HorizontalNavTab = ExtensionDeclaration<\n  'console.tab/horizontalNav',\n  {\n    /** The model for which this provider show tab. */\n    model: ExtensionK8sKindVersionModel;\n    /** The page to be show in horizontal tab. It takes tab name as name and href of the tab */\n    page: {\n      name: string;\n      href: string;\n    };\n    /** The component to be rendered when the route matches. */\n    component: CodeRef<React.ComponentType<PageComponentProps>>;\n  }\n>;\n\n// Type Guards\nexport const isHorizontalNavTab = (e: Extension): e is HorizontalNavTab =>\n  e.type === 'console.tab/horizontalNav';\n","import { K8sModel } from '../../api/common-types';\nimport {\n  GetAPIVersionForModel,\n  GetGroupVersionKindForResource,\n  GetGroupVersionKindForModel,\n} from '../../api/k8s-types';\nimport { K8sGroupVersionKind, K8sResourceKindReference } from '../../extensions/console-types';\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind Pass K8sGroupVersionKind which will have group, version, and kind of a k8s resource.\n * @param K8sGroupVersionKind.group Pass group of k8s resource or model.\n * @param K8sGroupVersionKind.version Pass version of k8s resource or model.\n * @param K8sGroupVersionKind.kind Pass kind of k8s resource or model.\n * @return The reference for any k8s resource i.e `group~version~kind`.\n * If the group will not be present then \"core\" will be returned as part of the group in reference.\n * * */\nexport const getReference = ({\n  group,\n  version,\n  kind,\n}: K8sGroupVersionKind): K8sResourceKindReference => [group || 'core', version, kind].join('~');\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * @see getGroupVersionKindForModel\n * Provides a reference string that uniquely identifies the group, version, and kind of a k8s model.\n * @param model k8s model\n * @return The reference for model i.e `group~version~kind`.\n * * */\nexport const getReferenceForModel = (model: K8sModel): K8sResourceKindReference =>\n  getReference({ group: model.apiGroup, version: model.apiVersion, kind: model.kind });\n\n/**\n * Provides apiVersion for a k8s model.\n * @param model k8s model\n * @return The apiVersion for the model i.e `group/version`.\n * * */\nexport const getAPIVersionForModel: GetAPIVersionForModel = (model) =>\n  !model?.apiGroup ? model.apiVersion : `${model.apiGroup}/${model.apiVersion}`;\n\n/**\n * Provides a group, version, and kind for a resource.\n * @param resource k8s resource\n * @return The group, version, kind for the provided resource.\n * If the resource does not have an API group, group \"core\" will be returned.\n * If the resource has an invalid apiVersion then it'll throw Error.\n * * */\nexport const getGroupVersionKindForResource: GetGroupVersionKindForResource = (resource) => {\n  const { apiVersion, kind } = resource;\n  const apiVersionSplit = apiVersion.split('/');\n  const apiVersionSplitLen = apiVersionSplit.length;\n  if (apiVersionSplitLen > 2) throw new Error('Provided resource has invalid apiVersion.');\n\n  return {\n    ...(apiVersionSplitLen === 2 && {\n      group: apiVersionSplit[0],\n    }),\n    version: apiVersionSplitLen === 2 ? apiVersionSplit[1] : apiVersion,\n    kind,\n  };\n};\n\n/**\n * Provides a group, version, and kind for a k8s model.\n * @param model k8s model\n * @return The group, version, kind for the provided model.\n * If the model does not have an apiGroup, group \"core\" will be returned.\n * * */\nexport const getGroupVersionKindForModel: GetGroupVersionKindForModel = ({\n  apiGroup,\n  apiVersion: version,\n  kind,\n}) => ({\n  ...(apiGroup && { group: apiGroup }),\n  version,\n  kind,\n});\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a group, version, and kind for a reference.\n * @param reference reference for group, version, kind i.e `group~version~kind`.\n * @return The group, version, kind for the provided reference.\n * If the group's value is \"core\" it denotes resource does not have an API group.\n * * */\nexport const getGroupVersionKindForReference = (\n  reference: K8sResourceKindReference,\n): K8sGroupVersionKind => {\n  const referenceSplit = reference.split('~');\n  if (referenceSplit.length > 3) throw new Error('Provided reference is invalid.');\n\n  const [group, version, kind] = referenceSplit;\n  return {\n    group,\n    version,\n    kind,\n  };\n};\n\n/**\n * @deprecated - This will become obsolete when we move away from K8sResourceKindReference to K8sGroupVersionKind\n * Provides a reference string that uniquely identifies the group, version, and kind of K8sGroupVersionKind.\n * @param kind kind can be of type K8sResourceKindReference or K8sGroupVersionKind\n * @return The reference i.e `group~version~kind`.\n * * */\nexport const transformGroupVersionKindToReference = (\n  kind: K8sResourceKindReference | K8sGroupVersionKind,\n): K8sResourceKindReference =>\n  kind && typeof kind !== 'string' ? getReference(kind) : (kind as K8sResourceKindReference);\n","/* eslint-disable */\nimport {\n  ConsoleFetch,\n  ConsoleFetchJSON,\n  ConsoleFetchText,\n  UseResolvedExtensions,\n  UseActivePerspective,\n} from '../extensions/console-types';\nimport { K8sGet, K8sCreate, K8sUpdate, K8sPatch, K8sDelete, K8sList } from './k8s-types';\n\nexport const useResolvedExtensions: UseResolvedExtensions = require('@console/dynamic-plugin-sdk/src/api/useResolvedExtensions')\n  .useResolvedExtensions;\nexport const consoleFetch: ConsoleFetch = require('@console/dynamic-plugin-sdk/src/utils/fetch')\n  .consoleFetch;\nexport const consoleFetchJSON: ConsoleFetchJSON = require('@console/dynamic-plugin-sdk/src/utils/fetch')\n  .consoleFetchJSON;\nexport const consoleFetchText: ConsoleFetchText = require('@console/dynamic-plugin-sdk/src/utils/fetch')\n  .consoleFetchText;\n\nexport const useActivePerspective: UseActivePerspective = require('@console/dynamic-plugin-sdk/src/perspective/useActivePerspective')\n  .default;\n\n// Expose K8s CRUD utilities as below\nexport const k8sGet: K8sGet = require('@console/dynamic-plugin-sdk/src/utils/k8s').k8sGetResource;\nexport const k8sCreate: K8sCreate = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sCreateResource;\nexport const k8sUpdate: K8sUpdate = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sUpdateResource;\nexport const k8sPatch: K8sPatch = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sPatchResource;\nexport const k8sDelete: K8sDelete = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sDeleteResource;\nexport const k8sList: K8sList = require('@console/dynamic-plugin-sdk/src/utils/k8s')\n  .k8sListResource;\nexport {\n  getAPIVersionForModel,\n  getGroupVersionKindForResource,\n  getGroupVersionKindForModel,\n} from '@console/dynamic-plugin-sdk/src/utils/k8s/k8s-ref';\n","import * as React from 'react';\nimport { PerspectiveType } from '../extensions';\n\nexport type PerspectiveContextType = {\n  activePerspective?: PerspectiveType;\n  setActivePerspective?: React.Dispatch<React.SetStateAction<PerspectiveType>>;\n};\n\nexport const PerspectiveContext = React.createContext<PerspectiveContextType>({});\n","import { useContext } from 'react';\nimport { UseActivePerspective } from '../extensions';\nimport { PerspectiveContext, PerspectiveContextType } from './perspective-context';\n\nconst useActivePerspective: UseActivePerspective = () => {\n  const { activePerspective, setActivePerspective } = useContext<PerspectiveContextType>(\n    PerspectiveContext,\n  );\n  return [activePerspective, setActivePerspective];\n};\n\nexport default useActivePerspective;\n","/**\n * Allows to easily extend a base class to create custom applicative errors.\n *\n * example:\n * ```\n * class HttpError extends CustomError {\n * \tpublic constructor(\n * \t\tpublic code: number,\n * \t\tmessage?: string,\n * \t) {\n * \t\tsuper(message)\n * \t}\n * }\n *\n * new HttpError(404, 'Not found')\n * ```\n */\nexport class CustomError extends Error {\n  name: string;\n\n  constructor(message?: string) {\n    super(message);\n    // set error name as constructor name, make it not enumerable to keep native Error behavior\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n    Object.defineProperty(this, 'name', {\n      value: new.target.name,\n      enumerable: false,\n      configurable: true,\n    });\n    // Use captureStackTrace when available to remove contructor from stack trace\n    // Add message to the stack trace\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n    // fix the extended error prototype chain\n    // because typescript __extends implementation can't\n    // see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { CustomError } from './custom-error';\n\n/**\n * Http error\n *\n * Usage: throw HttpError.fromCode(404)\n */\nexport class HttpError extends CustomError {\n  protected static messages = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required', // RFC 7235\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed', // RFC 7232\n    413: 'Payload Too Large', // RFC 7231\n    414: 'URI Too Long', // RFC 7231\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable', // RFC 7233\n    417: 'Expectation Failed',\n    418: \"I'm a teapot\", // RFC 2324\n    421: 'Misdirected Request', // RFC 7540\n    426: 'Upgrade Required',\n    428: 'Precondition Required', // RFC 6585\n    429: 'Too Many Requests', // RFC 6585\n    431: 'Request Header Fields Too Large', // RFC 6585\n    451: 'Unavailable For Legal Reasons', // RFC 7725\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n    506: 'Variant Also Negotiates', // RFC 2295\n    510: 'Not Extended', // RFC 2774\n    511: 'Network Authentication Required', // RFC 6585\n  };\n\n  public constructor(\n    message: string,\n    public code?: number,\n    public response?: Response,\n    public json?: any,\n  ) {\n    super(message);\n  }\n\n  public static fromCode(code: number) {\n    return new HttpError(HttpError.messages[code], code);\n  }\n}\n\nexport class TimeoutError extends CustomError {\n  public constructor(public url: string, public ms: number) {\n    super(`Call to ${url} timed out after ${ms}ms.`);\n  }\n}\n\nexport class RetryError extends CustomError {}\n","import * as _ from 'lodash';\n// import { authSvc } from '@console/internal/module/auth';\nimport { RetryError, HttpError } from '../error/http-error';\n// import { InternalReduxStore } from '../redux';\n\nconst InternalReduxStore = null;\n\nconst cookiePrefix = 'csrf-token=';\nexport const getCSRFToken = () =>\n  document &&\n  document.cookie &&\n  document.cookie\n    .split(';')\n    .map((c) => _.trim(c))\n    .filter((c) => c.startsWith(cookiePrefix))\n    .map((c) => c.slice(cookiePrefix.length))\n    .pop();\n\n// TODO: url can be url or path, but shouldLogout only handles paths\nexport const shouldLogout = (url: string): boolean => {\n  const k8sRegex = new RegExp(`^${window.SERVER_FLAGS.basePath}api/kubernetes/`);\n  // 401 from k8s. show logout screen\n  if (k8sRegex.test(url)) {\n    // Don't let 401s from proxied services log out users\n    const proxyRegex = new RegExp(`^${window.SERVER_FLAGS.basePath}api/kubernetes/api/v1/proxy/`);\n    if (proxyRegex.test(url)) {\n      return false;\n    }\n    const serviceRegex = new RegExp(\n      `^${window.SERVER_FLAGS.basePath}api/kubernetes/api/v1/namespaces/\\\\w+/services/\\\\w+/proxy/`,\n    );\n    if (serviceRegex.test(url)) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\n\nexport const validateStatus = async (\n  response: Response,\n  url: string,\n  method: string,\n  retry: boolean,\n) => {\n  if (response.ok) {\n    return response;\n  }\n\n  if (retry && response.status === 429) {\n    throw new RetryError();\n  }\n\n  if (response.status === 401 && shouldLogout(url)) {\n    // authSvc.logout(window.location.pathname);\n    console.error('// authSvc.logout(window.location.pathname);');\n  }\n\n  const contentType = response.headers.get('content-type');\n  if (!contentType || contentType.indexOf('json') === -1) {\n    throw new HttpError(response.statusText, response.status, response);\n  }\n\n  if (response.status === 403) {\n    return response.json().then((json) => {\n      throw new HttpError(\n        json.message || 'Access denied due to cluster policy.',\n        response.status,\n        response,\n        json,\n      );\n    });\n  }\n\n  return response.json().then((json) => {\n    // retry 409 conflict errors due to ClustResourceQuota / ResourceQuota\n    // https://bugzilla.redhat.com/show_bug.cgi?id=1920699\n    if (\n      retry &&\n      method === 'POST' &&\n      response.status === 409 &&\n      ['resourcequotas', 'clusterresourcequotas'].includes(json.details?.kind)\n    ) {\n      throw new RetryError();\n    }\n    const cause = json.details?.causes?.[0];\n    let reason;\n    if (cause) {\n      reason = `Error \"${cause.message}\" for field \"${cause.field}\".`;\n    }\n    if (!reason) {\n      reason = json.message;\n    }\n    if (!reason) {\n      reason = json.error;\n    }\n    if (!reason) {\n      reason = response.statusText;\n    }\n\n    throw new HttpError(reason, response.status, response, json);\n  });\n};\n\ntype ImpersonateHeaders = {\n  'Impersonate-User': string;\n};\nexport const getImpersonateHeaders = (): ImpersonateHeaders => {\n  if (!InternalReduxStore) return undefined;\n  const { kind, name } = InternalReduxStore.getState().UI.get('impersonate', {});\n  if ((kind === 'User' || kind === 'Group') && name) {\n    // Even if we are impersonating a group, we still need to set Impersonate-User to something or k8s will complain\n    const headers = {\n      'Impersonate-User': name,\n    };\n    if (kind === 'Group') {\n      headers['Impersonate-Group'] = name;\n    }\n    return headers;\n  }\n  return undefined;\n};\n","import * as _ from 'lodash';\n// import 'whatwg-fetch';\nimport { ConsoleFetchText, ConsoleFetchJSON, ConsoleFetch } from '../../extensions/console-types';\nimport { TimeoutError, RetryError } from '../error/http-error';\nimport { getCSRFToken, validateStatus, getImpersonateHeaders } from './console-fetch-utils';\n\nconst initDefaults = {\n  headers: {},\n  credentials: 'same-origin',\n};\n\nconst consoleFetchInternal = (\n  url: string,\n  options: RequestInit,\n  timeout: number,\n  retry: boolean,\n): Promise<Response> => {\n  const allOptions = _.defaultsDeep({}, initDefaults, options);\n  if (allOptions.method !== 'GET') {\n    allOptions.headers['X-CSRFToken'] = getCSRFToken();\n  }\n\n  // If the URL being requested is absolute (and therefore, not a local request),\n  // remove the authorization header to prevent credentials from leaking.\n  if (url.indexOf('://') >= 0) {\n    delete allOptions.headers.Authorization;\n    delete allOptions.headers['X-CSRFToken'];\n  }\n\n  const fetchPromise = fetch(url, allOptions).then((response) =>\n    validateStatus(response, url, allOptions.method, retry),\n  );\n\n  // return fetch promise directly if timeout <= 0\n  if (timeout < 1) {\n    return fetchPromise;\n  }\n\n  const timeoutPromise: Promise<Response> = new Promise((unused, reject) =>\n    setTimeout(() => reject(new TimeoutError(url, timeout)), timeout),\n  );\n\n  // Initiate both the fetch promise and a timeout promise\n  return Promise.race([fetchPromise, timeoutPromise]);\n};\n\n/**\n * A custom wrapper around `fetch` that adds console specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws appropriate error or logs out the user if required.\n * @param url The URL to fetch\n * @param method  The HTTP method to use\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @return A promise that resolves to the response\n * * */\nexport const consoleFetch: ConsoleFetch = async (url, options = {}, timeout = 60000) => {\n  let attempt = 0;\n  let response;\n  let retry = true;\n  while (retry) {\n    retry = false;\n    attempt++;\n    try {\n      // have to disable for retry logic\n      // eslint-disable-next-line no-await-in-loop\n      response = await consoleFetchInternal(url, options, timeout, attempt < 3);\n    } catch (e) {\n      if (e instanceof RetryError) {\n        retry = true;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  return response;\n};\n\nconst consoleFetchCommon = async (\n  url: string,\n  method: string = 'GET',\n  options: RequestInit = {},\n  timeout?: number,\n) => {\n  const headers = getImpersonateHeaders() || {};\n  // Pass headers last to let callers to override Accept.\n  const allOptions = _.defaultsDeep({ method }, options, { headers });\n  const response = await consoleFetch(url, allOptions, timeout);\n  const text = await response.text();\n  const isPlainText = response.headers.get('Content-Type') === 'text/plain';\n  if (!text) {\n    return isPlainText ? '' : {};\n  }\n  return isPlainText || !response.ok ? text : JSON.parse(text);\n};\n\n/**\n * A custom wrapper around `fetch` that adds console specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws appropriate error or logs out the user if required.\n * It returns the response as a JSON object.\n * Uses consoleFetch internally.\n * @param url The URL to fetch\n * @param method  The HTTP method to use. Defaults to GET\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as JSON object.\n * * */\nexport const consoleFetchJSON: ConsoleFetchJSON = (url, method = 'GET', options = {}, timeout) => {\n  const allOptions = _.defaultsDeep({}, options, { headers: { Accept: 'application/json' } });\n  return consoleFetchCommon(url, method, allOptions, timeout);\n};\n\n/**\n * A custom wrapper around `fetch` that adds console specific headers and allows for retries and timeouts.\n * It also validates the response status code and throws appropriate error or logs out the user if required.\n * It returns the response as a text.\n * Uses consoleFetch internally.\n * @param url The URL to fetch\n * @param method  The HTTP method to use. Defaults to GET\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * @returns A promise that resolves to the response as text.\n * * */\nexport const consoleFetchText: ConsoleFetchText = (url, options = {}, timeout) => {\n  return consoleFetchCommon(url, 'GET', options, timeout);\n};\n\nconst consoleFetchSendJSON = (\n  url: string,\n  method: string,\n  json = null,\n  options: RequestInit = {},\n  timeout: number,\n) => {\n  const allOptions: Record<string, any> = {\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': `application/${\n        method === 'PATCH' ? 'json-patch+json' : 'json'\n      };charset=UTF-8`,\n    },\n  };\n  if (json) {\n    allOptions.body = JSON.stringify(json);\n  }\n  return consoleFetchJSON(url, method, _.defaultsDeep(allOptions, options), timeout);\n};\n\n/**\n * A custom DELETE method of consoleFetchJSON.\n * It sends an optional JSON object as the body of the request and adds extra headers for patch request.\n * @param url The URL to delete the object\n * @param json The JSON to delete the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.delete = (url, json = null, options = {}, timeout) => {\n  return json\n    ? consoleFetchSendJSON(url, 'DELETE', json, options, timeout)\n    : consoleFetchJSON(url, 'DELETE', options, timeout);\n};\n\n/**\n * A custom POST method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to post the object\n * @param json The JSON to POST the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.post = (url: string, json, options = {}, timeout) =>\n  consoleFetchSendJSON(url, 'POST', json, options, timeout);\n\n/**\n * A custom PUT method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to put the object\n * @param json The JSON to PUT the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.put = (url: string, json, options = {}, timeout) =>\n  consoleFetchSendJSON(url, 'PUT', json, options, timeout);\n\n/**\n * A custom PATCH method of consoleFetchJSON.\n * It sends the JSON object as the body of the request.\n * @param url The URL to patch the object\n * @param json The JSON to PATCH the object\n * @param options The options to pass to fetch\n * @param timeout The timeout in milliseconds\n * * */\nconsoleFetchJSON.patch = (url: string, json, options = {}, timeout) =>\n  consoleFetchSendJSON(url, 'PATCH', json, options, timeout);\n","export const k8sBasePath = `${window.SERVER_FLAGS.basePath}api/kubernetes`;\n","import * as _ from 'lodash';\nimport { K8sModel, MatchExpression, MatchLabels, Selector } from '../../api/common-types';\nimport { Options } from '../../api/internal-types';\nimport { k8sBasePath } from './k8s';\n\nconst getK8sAPIPath = ({ apiGroup = 'core', apiVersion }: K8sModel): string => {\n  const isLegacy = apiGroup === 'core' && apiVersion === 'v1';\n  let p = isLegacy ? '/api/' : '/apis/';\n\n  if (!isLegacy && apiGroup) {\n    p += `${apiGroup}/`;\n  }\n\n  p += apiVersion;\n  return p;\n};\n\nexport const getK8sResourcePath = (model: K8sModel, options: Options): string => {\n  let u = getK8sAPIPath(model);\n\n  if (options.ns) {\n    u += `/namespaces/${options.ns}`;\n  }\n  u += `/${model.plural}`;\n  if (options.name) {\n    // Some resources like Users can have special characters in the name.\n    u += `/${encodeURIComponent(options.name)}`;\n  }\n  if (options.path) {\n    u += `/${options.path}`;\n  }\n  if (!_.isEmpty(options.queryParams)) {\n    const q = _.map(options.queryParams, function(v, k) {\n      return `${k}=${v}`;\n    });\n    u += `?${q.join('&')}`;\n  }\n\n  return u;\n};\n\nexport const resourceURL = (model: K8sModel, options: Options): string =>\n  `${k8sBasePath}${getK8sResourcePath(model, options)}`;\n\nconst toArray = (value) => (Array.isArray(value) ? value : [value]);\n\nexport const requirementToString = (requirement: MatchExpression): string => {\n  if (requirement.operator === 'Equals') {\n    return `${requirement.key}=${requirement.values[0]}`;\n  }\n\n  if (requirement.operator === 'NotEquals') {\n    return `${requirement.key}!=${requirement.values[0]}`;\n  }\n\n  if (requirement.operator === 'Exists') {\n    return requirement.key;\n  }\n\n  if (requirement.operator === 'DoesNotExist') {\n    return `!${requirement.key}`;\n  }\n\n  if (requirement.operator === 'In') {\n    return `${requirement.key} in (${toArray(requirement.values).join(',')})`;\n  }\n\n  if (requirement.operator === 'NotIn') {\n    return `${requirement.key} notin (${toArray(requirement.values).join(',')})`;\n  }\n\n  if (requirement.operator === 'GreaterThan') {\n    return `${requirement.key} > ${requirement.values[0]}`;\n  }\n\n  if (requirement.operator === 'LessThan') {\n    return `${requirement.key} < ${requirement.values[0]}`;\n  }\n\n  return '';\n};\n\nexport const createEquals = (key: string, value: string): MatchExpression => ({\n  key,\n  operator: 'Equals',\n  values: [value],\n});\n\nconst isOldFormat = (selector: Selector | MatchLabels) =>\n  !selector.matchLabels && !selector.matchExpressions;\n\nexport const toRequirements = (selector: Selector = {}): MatchExpression[] => {\n  const requirements = [];\n  const matchLabels = isOldFormat(selector) ? selector : selector.matchLabels;\n  const { matchExpressions } = selector;\n\n  Object.keys(matchLabels || {})\n    .sort()\n    .forEach(function(k) {\n      requirements.push(createEquals(k, matchLabels[k]));\n    });\n\n  (matchExpressions || []).forEach(function(me) {\n    requirements.push(me);\n  });\n\n  return requirements;\n};\n\nexport const selectorToString = (selector: Selector): string => {\n  const requirements = toRequirements(selector);\n  return requirements.map(requirementToString).join(',');\n};\n","import * as _ from 'lodash';\nimport { K8sModel } from '../../api/common-types';\nimport { Options } from '../../api/internal-types';\nimport { K8sResourceCommon, Patch } from '../../extensions/console-types';\nimport { consoleFetchJSON as coFetchJSON } from '../fetch';\nimport { selectorToString, resourceURL } from './k8s-utils';\n\n/**\n * An adapter function to call the underlying APIs with provided options.\n * @param func The function to be called.\n * @param knownArgs  The list of arguments to be provided to underlying API in order.\n * @return The function called with provided arguments.\n * * */\nconst adapterFunc = (func: Function, knownArgs: string[]) => {\n  return (options: Record<string, any>) => {\n    const args = knownArgs.map((arg) => {\n      // forming opts to match underlying API signature if it's there in knownArgs\n      if (arg === 'opts') {\n        const { name, ns, path, queryParams } = options || {};\n        return {\n          ...(name && { name }),\n          ...(ns && { ns }),\n          ...(path && { path }),\n          ...(queryParams && { queryParams }),\n        };\n      }\n      return options[arg];\n    });\n    return func(...args);\n  };\n};\n\n/**\n * It fetches a resource from the cluster, based on the provided model, name, namespace.\n * If the name is provided it returns one resource else it returns all the resources matching the model.\n * @param model k8s model\n * @param name The name of the resource, if not provided then it'll look for all the resources matching the model.\n * @param ns The namespace to look into, should not be specified for cluster-scoped resources.\n * @param opts The options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response as JSON object with a resource if the name is provided\n * else it returns all the resouces matching the model. In case of failure, the promise gets rejected with HTTP error response.\n * * */\nexport const k8sGet = (\n  model: K8sModel,\n  name: string,\n  ns?: string,\n  opts?: Options,\n  requestInit?: RequestInit,\n) => coFetchJSON(resourceURL(model, Object.assign({ ns, name }, opts)), 'GET', requestInit);\n\n/**\n * It fetches a resource from the cluster, based on the provided options.\n * If the name is provided it returns one resource else it returns all the resources matching the model.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model k8s model\n * @param options.name The name of the resource, if not provided then it'll look for all the resources matching the model.\n * @param options.ns The namespace to look into, should not be specified for cluster-scoped resources.\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @param options.requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response as JSON object with a resource if the name is provided\n * else it returns all the resources matching the model. In case of failure, the promise gets rejected with HTTP error response.\n * * */\nexport const k8sGetResource = adapterFunc(k8sGet, ['model', 'name', 'ns', 'opts', 'requestInit']);\n\n/**\n * It creates a resource in the cluster, based on the provided model and payload.\n * @param model k8s model\n * @param data The payload for the resource to be created.\n * @param opts The options to pass.\n * @return A promise that resolves to the response of the resource created.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sCreate = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  data: R,\n  opts: Options = {},\n) => {\n  return coFetchJSON.post(\n    resourceURL(model, Object.assign({ ns: data?.metadata?.namespace }, opts)),\n    data,\n  );\n};\n\n/**\n * It creates a resource in the cluster, based on the provided options.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model k8s model\n * @param options.data payload for the resource to be created\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @return A promise that resolves to the response of the resource created.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sCreateResource = adapterFunc(k8sCreate, ['model', 'data', 'opts']);\n\n/**\n * It updates the entire resource in the cluster, based on the provided model, data, name, namespace.\n * When a client needs to replace an existing resource entirely, they can use k8sUpdate.\n * Alternatively can use k8sPatch to perform the partial update.\n * @param model k8s model\n * @param data payload for the resource to be updated.\n * @param ns namespace to look into, it should not be specified for cluster-scoped resources.\n * @param name resource name to be updated.\n * @param opts The options to pass\n * @return A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sUpdate = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  data: R,\n  ns?: string,\n  name?: string,\n  opts?: Options,\n): Promise<R> =>\n  coFetchJSON.put(\n    resourceURL(model, {\n      ns: ns || data.metadata.namespace,\n      name: name || data.metadata.name,\n      ...opts,\n    }),\n    data,\n  );\n\n/**\n * It updates the entire resource in the cluster, based on provided options.\n * When a client needs to replace an existing resource entirely, they can use k8sUpdate.\n * Alternatively can use k8sPatch to perform the partial update.\n * @param options which are passed as key-value pair in the map\n * @param options.model k8s model\n * @param options.data payload for the resource to be updated\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @return A promise that resolves to the response of the resource updated.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sUpdateResource = adapterFunc(k8sUpdate, ['model', 'data', 'ns', 'name', 'opts']);\n\n/**\n * It patches any resource in the cluster, based on provided model, resource, data.\n * When a client needs to perform the partial update, they can use k8sPatch.\n * Alternatively can use k8sUpdate to replace an existing resource entirely.\n * See more {@link https://datatracker.ietf.org/doc/html/rfc6902}\n * @param model k8s model\n * @param resource The resource to be patched\n * @param data Only the data to be patched on existing resource with the operation, path, and value\n * @param opts The options to pass\n * @return A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sPatch = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  resource: R,\n  data: Patch[],\n  opts: Options = {},\n) => {\n  const patches = _.compact(data);\n\n  if (_.isEmpty(patches)) {\n    return Promise.resolve(resource);\n  }\n\n  return coFetchJSON.patch(\n    resourceURL(\n      model,\n      Object.assign(\n        {\n          ns: resource.metadata.namespace,\n          name: resource.metadata.name,\n        },\n        opts,\n      ),\n    ),\n    patches,\n  );\n};\n\n/**\n * It patches any resource in the cluster, based on provided options.\n * When a client needs to perform the partial update, they can use k8sPatch.\n * Alternatively can use k8sUpdate to replace an existing resource entirely.\n * See more {@link https://datatracker.ietf.org/doc/html/rfc6902}\n * @param options Which are passed as key-value pairs in the map.\n * @param options.model k8s model\n * @param options.resource The resource to be patched.\n * @param options.data Only the data to be patched on existing resource with the operation, path, and value.\n * @param options.path Appends as subpath if provided.\n * @param options.queryParams The query parameters to be included in the URL.\n * @return A promise that resolves to the response of the resource patched.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sPatchResource = adapterFunc(k8sPatch, ['model', 'resource', 'data', 'opts']);\n\n/**\n * It deletes resources from the cluster, based on the provided model, resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with propagationPolicy property in provided model or passed in json.\n * See more {@link https://kubernetes.io/docs/concepts/architecture/garbage-collection/}\n * @param model k8s model\n * @param resource The resource to be deleted.\n * @param opts The Options to pass\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @param options.json Can control garbage collection of resource explicitly if provided else will default to model's \"propagationPolicy\".\n * @example\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * @return A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sKill = <R extends K8sResourceCommon>(\n  model: K8sModel,\n  resource: R,\n  opts: Options = {},\n  requestInit: RequestInit = {},\n  json: Record<string, any> = null,\n) => {\n  const { propagationPolicy } = model;\n  const jsonData =\n    json ?? (propagationPolicy && { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy });\n  return coFetchJSON.delete(\n    resourceURL(\n      model,\n      Object.assign({ ns: resource.metadata.namespace, name: resource.metadata.name }, opts),\n    ),\n    jsonData,\n    requestInit,\n  );\n};\n\n/**\n * It deletes resources from the cluster, based on the provided model, resource.\n * The garbage collection works based on 'Foreground' | 'Background', can be configured with propagationPolicy property in provided model or passed in json.\n * @param options which are passed as key-value pair in the map.\n * @param options.model k8s model\n * @param options.resource The resource to be deleted.\n * @param options.path Appends as subpath if provided\n * @param options.queryParams The query parameters to be included in the URL.\n * @param options.requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @param options.json Can control garbage collection of resources explicitly if provided else will default to model's \"propagationPolicy\".\n * @example\n * { kind: 'DeleteOptions', apiVersion: 'v1', propagationPolicy }\n * @return A promise that resolves to the response of kind Status.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sDeleteResource = adapterFunc(k8sKill, [\n  'model',\n  'resource',\n  'opts',\n  'requestInit',\n  'json',\n]);\n\n/**\n * It lists the resources as an array in the cluster, based on the provided model, queryParams(label selector).\n * @param model k8s model\n * @param queryParams The query parameters to be included in the URL and can pass label selector's as well with key \"labelSelector\".\n * @param raw If true then returns raw data i.e if the query is for Pod then resolved resources will not be in an array but a resource will be returned of kind PodList\n * and it will have a key \"item\" which will be an array of Pod kind.\n * @param requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response with the resources in an array.\n * In case of failure promise gets rejected with HTTP error response.\n * * */\nexport const k8sList = (\n  model: K8sModel,\n  queryParams: { [key: string]: any } = {},\n  raw = false,\n  requestInit: RequestInit = {},\n) => {\n  const query = _.map(_.omit(queryParams, 'ns'), (v, k) => {\n    let newVal;\n    if (k === 'labelSelector') {\n      newVal = selectorToString(v);\n    }\n    return `${encodeURIComponent(k)}=${encodeURIComponent(newVal ?? v)}`;\n  }).join('&');\n\n  const listURL = resourceURL(model, { ns: queryParams.ns });\n  return coFetchJSON(`${listURL}?${query}`, 'GET', requestInit).then((result) => {\n    const typedItems = result.items?.map((i) => ({\n      kind: model.kind,\n      apiVersion: result.apiVersion,\n      ...i,\n    }));\n    return raw ? { ...result, items: typedItems } : typedItems;\n  });\n};\n\n/**\n * It lists the resources as an array in the cluster, based on provided options.\n * @param options Which are passed as key-value pairs in the map\n * @param options.model k8s model\n * @param options.queryParams The query parameters to be included in the URL and can pass label selector's as well with key \"labelSelector\".\n * @param options.requestInit The fetch init object to use. This can have request headers, method, redirect, etc.\n * See more {@link https://microsoft.github.io/PowerBI-JavaScript/interfaces/_node_modules_typedoc_node_modules_typescript_lib_lib_dom_d_.requestinit.html}\n * @return A promise that resolves to the response\n * * */\nexport const k8sListResource = adapterFunc(k8sList, ['model', 'queryParams', 'raw', 'requestInit']);\n","import * as _ from 'lodash';\n\nconst isPlainNonReactObject = (obj: any) => _.isPlainObject(obj) && !obj.$$typeof;\n\n/**\n * Recursive equivalent of `_.forOwn` function that traverses plain objects and arrays.\n */\nexport const deepForOwn = <T = any>(\n  obj: {},\n  predicate: (value: any) => value is T,\n  valueCallback: (value: T, key: string, container: {}) => void,\n) => {\n  const visitValue = (value: any, key: string, container: {}) => {\n    if (predicate(value)) {\n      valueCallback(value, key, container);\n    } else if (isPlainNonReactObject(value)) {\n      deepForOwn(value, predicate, valueCallback);\n    }\n  };\n\n  _.forOwn<any>(obj, (value, key, container) => {\n    if (Array.isArray(value)) {\n      value.forEach((arrayElement, index) => {\n        visitValue(arrayElement, index.toString(), value);\n      });\n    } else {\n      visitValue(value, key, container);\n    }\n  });\n};\n","/**\n * Unwrap the result of `Promise.allSettled` call as `[fulfilledValues, rejectedReasons, results]` tuple.\n */\nconst unwrapPromiseSettledResults = <T = any>(\n  results: PromiseSettledResult<T>[],\n): [T[], any[], PromiseSettledResult<T>[]] => {\n  const fulfilledValues = results\n    .filter((r) => r.status === 'fulfilled')\n    .map((r: PromiseFulfilledResult<T>) => r.value);\n\n  const rejectedReasons = results\n    .filter((r) => r.status === 'rejected')\n    .map((r: PromiseRejectedResult) => r.reason);\n\n  return [fulfilledValues, rejectedReasons, results];\n};\n\n/**\n * Await `Promise.allSettled(promises)` and unwrap the resulting objects.\n *\n * `Promise.allSettled` never rejects, therefore the resulting `Promise` never rejects.\n */\nexport const settleAllPromises = async <T = any>(promises: Promise<T>[]) => {\n  const results = await Promise.allSettled(promises);\n  return unwrapPromiseSettledResults(results);\n};\n","/* eslint-disable global-require */\n/* eslint-disable @typescript-eslint/no-require-imports */\n\nimport { SharedModuleResolution, RemoteEntryModule } from './types';\n\nconst modules: SharedModuleResolution = {\n  '@openshift-console/dynamic-plugin-sdk': async () => () =>\n    require('@console/dynamic-plugin-sdk/src/lib-core'),\n  // '@openshift-console/dynamic-plugin-sdk-internal': async () => () =>\n  //   require('@console/dynamic-plugin-sdk/src/lib-internal'),\n  // '@openshift-console/dynamic-plugin-sdk-internal-kubevirt': async () => () =>\n  //   require('@console/dynamic-plugin-sdk/src/lib-internal-kubevirt'),\n  '@patternfly/react-core': async () => () => require('@patternfly/react-core'),\n  '@patternfly/react-table': async () => () => require('@patternfly/react-table'),\n  react: async () => () => require('react'),\n  'react-helmet': async () => () => require('react-helmet'),\n  'react-i18next': async () => () => require('react-i18next'),\n  'react-router': async () => () => require('react-router'),\n  'react-router-dom': async () => () => require('react-router-dom'),\n};\n\nconst sharedScope = Object.keys(modules).reduce(\n  (acc, moduleRequest) => ({\n    ...acc,\n    [moduleRequest]: {\n      // The '*' semver range means \"this shared module matches all requested versions\",\n      // i.e. make sure the plugin always uses the Console-provided shared module version\n      '*': {\n        get: modules[moduleRequest],\n        // Indicates that Console has already loaded the shared module\n        loaded: true,\n      },\n    },\n  }),\n  {},\n);\n\n/**\n * At runtime, the Console application will initialize shared modules for each\n * dynamic plugin before loading any of the modules exposed by the given plugin.\n *\n * Currently, module sharing is strictly unidirectional (Console -> plugins).\n *\n * Note: `__webpack_init_sharing__` global function is available in webpack 5+ builds.\n * Once Console gets built with webpack 5, evaluate if we need this global in order to\n * allow plugins to attempt to provide shared modules into the application shared scope.\n *\n * @see https://webpack.js.org/concepts/module-federation/#dynamic-remote-containers\n */\nexport const initSharedPluginModules = (entryModule: RemoteEntryModule) => {\n  if (typeof entryModule.override === 'function') {\n    // Support plugins built with webpack 5.0.0-beta.16\n    entryModule.override(modules);\n    return;\n  }\n\n  entryModule.init(sharedScope);\n};\n","/* eslint-disable no-console */\n\nimport * as _ from 'lodash';\nimport { PluginStore } from '@console/plugin-sdk/src/store';\nimport { resolveEncodedCodeRefs } from '../coderefs/coderef-resolver';\nimport { remoteEntryFile } from '../constants';\nimport { ConsolePluginManifestJSON } from '../schema/plugin-manifest';\nimport { initSharedPluginModules } from '../shared-modules-init';\nimport { RemoteEntryModule } from '../types';\nimport { resolveURL } from '../utils/url';\nimport { fetchPluginManifest } from './plugin-manifest';\n\ntype ConsolePluginData = {\n  /** The manifest containing plugin metadata and extension declarations. */\n  manifest: ConsolePluginManifestJSON;\n  /** Indicates if `window.loadPluginEntry` callback has been fired for this plugin. */\n  entryCallbackFired: boolean;\n};\n\nconst pluginMap = new Map<string, ConsolePluginData>();\n\nexport const scriptIDPrefix = 'console-plugin';\n\nexport const getPluginID = (m: ConsolePluginManifestJSON) => `${m.name}@${m.version}`;\n\nexport const getScriptElementID = (m: ConsolePluginManifestJSON) => `${scriptIDPrefix}-${m.name}`;\n\nexport const loadDynamicPlugin = (baseURL: string, manifest: ConsolePluginManifestJSON) =>\n  new Promise<string>((resolve, reject) => {\n    const pluginID = getPluginID(manifest);\n\n    const existingPluginData = Array.from(pluginMap.values()).find(\n      (p) => p.manifest.name === manifest.name,\n    );\n\n    if (existingPluginData) {\n      const existingPluginID = getPluginID(existingPluginData.manifest);\n      reject(new Error(`Attempt to reload plugin ${existingPluginID} with ${pluginID}`));\n      return;\n    }\n\n    pluginMap.set(pluginID, { manifest, entryCallbackFired: false });\n\n    const script = document.createElement('script');\n    script.id = getScriptElementID(manifest);\n    script.src = resolveURL(baseURL, remoteEntryFile);\n    script.async = true;\n\n    script.onload = () => {\n      if (pluginMap.get(pluginID).entryCallbackFired) {\n        resolve(pluginID);\n      } else {\n        reject(new Error(`Entry script for plugin ${pluginID} loaded without callback`));\n      }\n    };\n\n    script.onerror = (event) => {\n      console.error(event);\n      reject(new Error(`Error while loading entry script for plugin ${pluginID}`));\n    };\n\n    console.info(`Loading entry script for plugin ${pluginID} from ${script.src}`);\n    document.head.appendChild(script);\n  });\n\nexport const getPluginEntryCallback = (\n  pluginStore: PluginStore,\n  initSharedPluginModulesCallback: typeof initSharedPluginModules,\n  resolveEncodedCodeRefsCallback: typeof resolveEncodedCodeRefs,\n) => (pluginID: string, entryModule: RemoteEntryModule) => {\n  if (!pluginMap.has(pluginID)) {\n    console.error(`Received callback for unknown plugin ${pluginID}`);\n    return;\n  }\n\n  const pluginData = pluginMap.get(pluginID);\n\n  if (pluginData.entryCallbackFired) {\n    console.error(`Received callback for already loaded plugin ${pluginID}`);\n    return;\n  }\n\n  pluginData.entryCallbackFired = true;\n\n  try {\n    initSharedPluginModulesCallback(entryModule);\n  } catch (error) {\n    console.error(`Failed to initialize shared modules for plugin ${pluginID}`, error);\n    return;\n  }\n\n  const resolvedExtensions = resolveEncodedCodeRefsCallback(\n    pluginData.manifest.extensions,\n    entryModule,\n    pluginID,\n    () => {\n      console.error(`Code reference resolution failed for plugin ${pluginID}`);\n      pluginStore.setDynamicPluginEnabled(pluginID, false);\n    },\n  );\n\n  pluginStore.addDynamicPlugin(pluginID, pluginData.manifest, resolvedExtensions);\n};\n\nexport const registerPluginEntryCallback = (pluginStore: PluginStore) => {\n  window.loadPluginEntry = getPluginEntryCallback(\n    pluginStore,\n    initSharedPluginModules,\n    resolveEncodedCodeRefs,\n  );\n};\n\nexport const loadPluginFromURL = async (baseURL: string) => {\n  const manifest = await fetchPluginManifest(baseURL);\n  return loadDynamicPlugin(baseURL, manifest);\n};\n\nexport const loadAndEnablePlugin = async (\n  pluginName: string,\n  pluginStore: PluginStore,\n  onError: VoidFunction = _.noop,\n) => {\n  const url = `${window.SERVER_FLAGS.basePath}api/plugins/${pluginName}/`;\n\n  try {\n    const pluginID = await loadPluginFromURL(url);\n    pluginStore.setDynamicPluginEnabled(pluginID, true);\n  } catch (e) {\n    console.error(`Error while loading plugin from ${url}`, e);\n    onError();\n  }\n};\n\nexport const getStateForTestPurposes = () => ({\n  pluginMap,\n});\n\nexport const resetStateAndEnvForTestPurposes = () => {\n  pluginMap.clear();\n\n  document.querySelectorAll(`[id^=\"${scriptIDPrefix}\"]`).forEach((element) => {\n    element.remove();\n  });\n\n  window.loadPluginEntry = undefined;\n};\n","import * as _ from 'lodash';\nimport { Store } from 'redux';\n// import { RootState } from '@console/internal/redux';\nimport { initSubscriptionService } from '@console/plugin-sdk/src/api/pluginSubscriptionService';\nimport { PluginStore } from '@console/plugin-sdk/src/store';\nimport { registerPluginEntryCallback, /* loadAndEnablePlugin */ } from './plugin-loader';\n\nexport const initConsolePlugins = _.once(\n  (pluginStore: PluginStore, reduxStore: Store/* <RootState> */) => {\n    initSubscriptionService(pluginStore, reduxStore);\n    registerPluginEntryCallback(pluginStore);\n\n    // pluginStore.getAllowedDynamicPluginNames().forEach((pluginName) => {\n    //   loadAndEnablePlugin(pluginName, pluginStore, () => {\n    //     // TODO(vojtech): add new entry into the notification drawer\n    //     pluginStore.registerFailedDynamicPlugin(pluginName);\n    //   });\n    // });\n  },\n);\n","/**\n * This is the entirety of the `redux-thunk` library.\n * It hasn't changed since 2016 and has problems with it's TypeScript definitions\n * (https://github.com/reduxjs/redux-thunk/issues/231), so just including it here.\n */\nfunction createThunkMiddleware(extraArgument?) {\n  return ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState, extraArgument);\n      }\n\n      return next(action);\n    };\n}\n\nconst thunk = createThunkMiddleware();\n(thunk as any).withExtraArgument = createThunkMiddleware;\n\nexport default thunk;\n","import flags from './flags';\n\nexport const baseReducers = Object.freeze({\n  FLAGS: flags,\n});\n","export type FLAGS = { [key: string]: boolean };\n\n/**\n * TODO: Use the regular flags reducer\n */\nconst flags = (state: FLAGS, action): FLAGS => {\n  if (!state) {\n    return {};\n  }\n\n  switch (action.type) {\n    case 'setFlag':\n      return (state[action.payload.flag] = action.payload.value);\n    default:\n      return state;\n  }\n};\n\nexport default flags;\n","import { applyMiddleware, combineReducers, compose, createStore, Store } from 'redux';\nimport thunk from './middleware/thunk';\nimport { baseReducers } from './reducers';\nimport { RootState } from './types';\n\nconst composeEnhancers = (process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nlet cachedStore: Store<RootState> = null;\nconst useReduxStore = (): Store<RootState> => {\n  if (!cachedStore) {\n    const store = createStore(combineReducers<RootState>(baseReducers), {}, composeEnhancers(applyMiddleware(thunk)));\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Expose Redux store for debugging\n      window.store = store;\n    }\n\n    cachedStore = store;\n  }\n\n  return cachedStore;\n};\n\nexport default useReduxStore;\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { initConsolePlugins } from '@console/dynamic-plugin-sdk/src/runtime/plugin-init';\nimport { /* ActivePlugin, */ PluginStore } from '@console/plugin-sdk';\nimport { useReduxStore } from '../../redux';\nimport { getEnabledDynamicPluginNames } from './utils';\nimport { loadDynamicPlugin } from '@console/dynamic-plugin-sdk/src/runtime/plugin-loader';\n\nexport type EnabledPlugin = {\n  name: string;\n  pathPrefix?: string;\n};\n\ntype PluginProps = {\n  enabledPlugins?: EnabledPlugin[];\n  onPluginRegister?: Function;\n  base?: String;\n};\n\nconst IncludePlugins = ({ enabledPlugins, onPluginRegister = noop, base }: PluginProps) => {\n  const [pluginStore, setPluginStore] = React.useState<PluginStore>();\n  const store = useReduxStore();\n\n  React.useEffect(() => {\n    if (pluginStore) {\n      enabledPlugins &&\n        enabledPlugins.forEach(async ({ name: item, pathPrefix = '/api/plugins' }) => {\n          const manifest = await (await fetch(`${base}${pathPrefix}/${item}/plugin-manifest.json`)).json();\n          loadDynamicPlugin(`${base}${pathPrefix}/${item}/`, manifest).then((pluginName) => {\n            pluginStore.setDynamicPluginEnabled(pluginName, true);\n          });\n        });\n    }\n  }, [enabledPlugins, pluginStore]);\n\n  React.useEffect(() => {\n    if (store) {\n      const activePlugins = [];\n      // process.env.NODE_ENV !== 'test'\n      //   ? /* eslint-disable global-require, @typescript-eslint/no-require-imports */\n      //     // eslint-disable-next-line import/no-unresolved\n      //     (require('@console/active-plugins').default as ActivePlugin[])\n      //   : [];\n      const dynamicPluginNames = getEnabledDynamicPluginNames();\n      const initialPluginStore = new PluginStore(activePlugins, dynamicPluginNames);\n\n      initConsolePlugins(initialPluginStore, store, onPluginRegister);\n      setPluginStore(initialPluginStore);\n    }\n  }, [onPluginRegister, store]);\n\n  return null;\n};\n\nexport default IncludePlugins;\n","import * as _ from 'lodash';\n\n/**\n * Resolve URL string using `base` and `to` URLs.\n *\n * If `base` is missing the protocol, it's considered to be relative to document origin.\n *\n * @param base Base URL.\n * @param to Target resource URL.\n * @param options Resolution options.\n */\nexport const resolveURL = (\n  base: string,\n  to: string,\n  getDocumentOrigin: () => string = _.constant(window.location.origin),\n) => {\n  const baseAbsoluteURL = base.indexOf('://') === -1 ? getDocumentOrigin() + base : base;\n  return new URL(to, baseAbsoluteURL).toString();\n};\n","export const extensionsFile = 'console-extensions.json';\nexport const pluginManifestFile = 'plugin-manifest.json';\nexport const remoteEntryFile = 'plugin-entry.js';\n","import compact from 'lodash/compact';\n\n/** TODO: Copied right now -- duplicate definition */\nconst getURLSearchParams = () => {\n  const all: any = {};\n  const params = new URLSearchParams(window.location.search);\n\n  for (const [k, v] of params.entries()) {\n    all[k] = v;\n  }\n\n  return all;\n};\n\nexport const getEnabledDynamicPluginNames = () => {\n  const allPluginNames = window.SERVER_FLAGS.consolePlugins;\n  const disabledPlugins = getURLSearchParams()['disable-plugins'];\n\n  if (!disabledPlugins) {\n    return allPluginNames;\n  }\n\n  if (disabledPlugins === '') {\n    return [];\n  }\n\n  const disabledPluginNames = compact(disabledPlugins.split(','));\n  return allPluginNames.filter((pluginName) => !disabledPluginNames.includes(pluginName));\n};\n","import * as _ from 'lodash';\nimport { Store } from 'redux';\n// import { RootState } from '@console/internal/redux';\nimport { isExtensionInUse, PluginStore, DynamicPluginInfo } from '../store';\nimport { Extension, ExtensionTypeGuard, LoadedExtension } from '../typings';\n\nlet subscriptionServiceInitialized = false;\n\nconst extensionSubscriptions: ExtensionSubscription[] = [];\nconst dynamicPluginListeners: DynamicPluginListener[] = [];\n\nlet onExtensionSubscriptionAdded: (sub: ExtensionSubscription) => void = _.noop;\nlet onDynamicPluginListenerAdded: (listener: DynamicPluginListener) => void = _.noop;\n\nconst subscribe = <T>(sub: T, subList: T[], invokeListener: VoidFunction): VoidFunction => {\n  let isSubscribed = true;\n\n  subList.push(sub);\n  invokeListener();\n\n  return () => {\n    if (isSubscribed) {\n      isSubscribed = false;\n      subList.splice(subList.indexOf(sub), 1);\n    }\n  };\n};\n\nexport const initSubscriptionService = (pluginStore: PluginStore, reduxStore: Store/* <RootState> */) => {\n  if (subscriptionServiceInitialized) {\n    throw new Error('Subscription service is already initialized');\n  }\n\n  subscriptionServiceInitialized = true;\n\n  const getExtensionsInUse = () => pluginStore.getExtensionsInUse();\n  const getFlags = () => reduxStore.getState().FLAGS;\n\n  type FeatureFlags = ReturnType<typeof getFlags>;\n\n  const invokeExtensionListener = (\n    sub: ExtensionSubscription,\n    currentExtensions: Extension[],\n    currentFlags: FeatureFlags,\n  ) => {\n    // Narrow extensions according to type guards\n    const matchedExtensions = _.flatMap(sub.typeGuards.map((tg) => currentExtensions.filter(tg)));\n\n    // Gate matched extensions by relevant feature flags\n    const extensionsInUse = matchedExtensions.filter((e) =>\n      isExtensionInUse(e, currentFlags),\n    );\n\n    // Invoke listener only if the extension list has changed\n    if (!_.isEqual(extensionsInUse, sub.listenerLastArgs)) {\n      sub.listenerLastArgs = extensionsInUse;\n      sub.listener(extensionsInUse);\n    }\n  };\n\n  onExtensionSubscriptionAdded = (sub) => {\n    invokeExtensionListener(sub, getExtensionsInUse(), getFlags());\n  };\n\n  onDynamicPluginListenerAdded = (listener) => {\n    listener(pluginStore.getDynamicPluginInfo());\n  };\n\n  let lastExtensions: Extension[] = null;\n  let lastFlags: FeatureFlags = null;\n\n  const invokeAllExtensionListeners = () => {\n    if (extensionSubscriptions.length === 0) {\n      return;\n    }\n\n    const nextExtensions = getExtensionsInUse();\n    const nextFlags = getFlags();\n\n    if (_.isEqual(nextExtensions, lastExtensions) && nextFlags === lastFlags) {\n      return;\n    }\n\n    lastExtensions = nextExtensions;\n    lastFlags = nextFlags;\n\n    extensionSubscriptions.forEach((sub) => {\n      invokeExtensionListener(sub, nextExtensions, nextFlags);\n    });\n  };\n\n  let lastPluginEntries: DynamicPluginInfo[] = null;\n\n  const invokeAllDynamicPluginListeners = () => {\n    if (dynamicPluginListeners.length === 0) {\n      return;\n    }\n\n    const nextPluginEntries = pluginStore.getDynamicPluginInfo();\n\n    if (_.isEqual(nextPluginEntries, lastPluginEntries)) {\n      return;\n    }\n\n    lastPluginEntries = nextPluginEntries;\n\n    dynamicPluginListeners.forEach((listener) => {\n      listener(nextPluginEntries);\n    });\n  };\n\n  // Subscribe to changes in Console plugins and Redux\n  pluginStore.subscribe(invokeAllExtensionListeners);\n  pluginStore.subscribe(invokeAllDynamicPluginListeners);\n  reduxStore.subscribe(invokeAllExtensionListeners);\n\n  // Invoke listeners registered prior to initializing subscription service\n  invokeAllExtensionListeners();\n  invokeAllDynamicPluginListeners();\n};\n\n/**\n * Subscription based mechanism for consuming Console extensions.\n *\n * Provided listener will be invoked immediately to allow processing existing extensions.\n * It will also be invoked whenever the computed list of extension instances changes.\n *\n * _Tip: need to access extensions in a React component?_\n * - **Yes**\n *   - Functional components: use `useExtensions` hook.\n *   - Class components: use `withExtensions` higher-order component.\n * - **No**\n *   - Use `subscribeToExtensions` function.\n *\n * @param listener Listener invoked when the list of extension instances which are\n * currently in use, narrowed by the given type guard(s), changes.\n *\n * @param typeGuards Type guard(s) used to narrow the extension instances.\n *\n * @returns Function that unsubscribes the listener.\n */\nexport const subscribeToExtensions = <E extends Extension>(\n  listener: ExtensionListener<LoadedExtension<E>>,\n  ...typeGuards: ExtensionTypeGuard<E>[]\n) => {\n  if (typeGuards.length === 0) {\n    throw new Error('You must pass at least one type guard to subscribeToExtensions');\n  }\n\n  const sub: ExtensionSubscription<E> = { listener, typeGuards };\n\n  return subscribe<ExtensionSubscription>(sub, extensionSubscriptions, () => {\n    onExtensionSubscriptionAdded(sub);\n  });\n};\n\n/**\n * Subscribe to changes related to processing Console dynamic plugins.\n *\n * @param listener Listener invoked when the runtime status of a dynamic plugin changes.\n *\n * @returns Function that unsubscribes the listener.\n */\nexport const subscribeToDynamicPlugins = (listener: DynamicPluginListener) => {\n  return subscribe<DynamicPluginListener>(listener, dynamicPluginListeners, () => {\n    onDynamicPluginListenerAdded(listener);\n  });\n};\n\n/**\n * `ExtensionListener` adapter that computes the difference between the calls.\n */\nexport const extensionDiffListener = <E extends Extension>(\n  listener: (added: E[], removed: E[]) => void,\n): ExtensionListener<E> => {\n  let prevExtensions: E[] = [];\n\n  return (nextExtensions: E[]) => {\n    listener(\n      _.difference(nextExtensions, prevExtensions),\n      _.difference(prevExtensions, nextExtensions),\n    );\n\n    prevExtensions = nextExtensions;\n  };\n};\n\ntype ExtensionListener<E extends Extension> = (extensions: E[]) => void;\n\ntype ExtensionSubscription<E extends Extension = Extension> = {\n  listener: ExtensionListener<E>;\n  typeGuards: ExtensionTypeGuard<E>[];\n  listenerLastArgs?: E[];\n};\n\ntype DynamicPluginListener = (pluginInfoEntries: DynamicPluginInfo[]) => void;\n","// import { TFunction } from 'i18next';\nimport { deepForOwn } from '@console/dynamic-plugin-sdk/src/utils/object';\nimport { Extension } from '../typings';\n\nexport const isTranslatableString = (value): value is string => {\n  return (\n    typeof value === 'string' && value.length > 2 && value.startsWith('%') && value.endsWith('%')\n  );\n};\n\nexport const getTranslationKey = (value: string) =>\n  isTranslatableString(value) ? value.substr(1, value.length - 2) : undefined;\n\n/**\n * Recursively updates the extension's properties, replacing all translatable string values\n * via the provided `t` function.\n */\nexport const translateExtension = <E extends Extension>(extension: E, t: (t: string) => string): E => {\n  deepForOwn(extension.properties, isTranslatableString, (value, key, obj) => {\n    obj[key] = t(value);\n  });\n\n  return extension;\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { Extension, ExtensionTypeGuard, LoadedExtension } from '../typings';\nimport { translateExtension } from '../utils/extension-i18n';\n// import useTranslationExt from '../utils/useTranslationExt';\nimport { subscribeToExtensions } from './pluginSubscriptionService';\n\n// Copied from '@console/shared/src/hooks/useForceRender'\nconst useForceRender = () => React.useReducer((s: boolean) => !s, false)[1] as VoidFunction;\n\n/**\n * React hook for consuming Console extensions.\n *\n * This hook takes extension type guard(s) as its argument(s) and returns a list\n * of extension instances, narrowed by the given type guard(s), which are currently\n * in use.\n *\n * An extension is considered to be in use when\n *\n * - it is an always-on extension, i.e. not gated by any feature flags\n * - all feature flags referenced by its `flags` object are resolved to the right\n *   values\n *\n * When the list of matching extensions changes, the React component is re-rendered\n * with the hook returning an up-to-date list of extensions.\n *\n * Example usage:\n *\n * ```ts\n * const Example = () => {\n *   const navItemExtensions = useExtensions<NavItem>(isNavItem);\n *   // process extensions and render your component\n * };\n * ```\n *\n * The hook's result is guaranteed to be referentially stable across re-renders.\n *\n * @param typeGuards Type guard(s) used to narrow the extension instances.\n *\n * @returns List of extension instances which are currently in use, narrowed by the\n * given type guard(s).\n */\nexport const useExtensions = <E extends Extension>(\n  ...typeGuards: ExtensionTypeGuard<E>[]\n): LoadedExtension<E>[] => {\n  if (typeGuards.length === 0) {\n    throw new Error('You must pass at least one type guard to useExtensions');\n  }\n\n  const forceRender = useForceRender();\n\n  const isMountedRef = React.useRef(true);\n  const unsubscribeRef = React.useRef<VoidFunction>(null);\n  const extensionsInUseRef = React.useRef<LoadedExtension<E>[]>([]);\n  const latestTypeGuardsRef = React.useRef<ExtensionTypeGuard<E>[]>(typeGuards);\n  // const { t } = useTranslationExt();\n  const t = (v) => v;\n\n  const trySubscribe = React.useCallback(() => {\n    if (unsubscribeRef.current === null) {\n      unsubscribeRef.current = subscribeToExtensions<E>((extensions) => {\n        extensionsInUseRef.current = extensions.map((e) => translateExtension(e, t));\n        isMountedRef.current && forceRender();\n      }, ...latestTypeGuardsRef.current);\n    }\n  }, [forceRender, t]);\n\n  const tryUnsubscribe = React.useCallback(() => {\n    if (unsubscribeRef.current !== null) {\n      unsubscribeRef.current();\n      unsubscribeRef.current = null;\n    }\n  }, []);\n\n  if (!_.isEqual(latestTypeGuardsRef.current, typeGuards)) {\n    latestTypeGuardsRef.current = typeGuards;\n    tryUnsubscribe();\n  }\n\n  trySubscribe();\n\n  React.useEffect(\n    () => () => {\n      isMountedRef.current = false;\n      tryUnsubscribe();\n    },\n    [tryUnsubscribe],\n  );\n\n  return extensionsInUseRef.current;\n};\n","/* eslint-disable no-console */\n\nimport * as _ from 'lodash';\nimport { ConsolePluginManifestJSON } from '@console/dynamic-plugin-sdk/src/schema/plugin-manifest';\nimport { Extension, LoadedExtension, ActivePlugin } from './typings';\n\nexport const sanitizeExtension = <E extends Extension>(e: E): E => {\n  e.flags = e.flags || {};\n  e.flags.required = _.uniq(e.flags.required || []);\n  e.flags.disallowed = _.uniq(e.flags.disallowed || []);\n  return e;\n};\n\nexport const augmentExtension = <E extends Extension>(\n  e: E,\n  pluginID: string,\n  pluginName: string,\n  index: number,\n): LoadedExtension<E> =>\n  Object.assign(e, {\n    pluginID,\n    pluginName,\n    uid: `${pluginID}[${index}]`,\n  });\n\nexport const isExtensionInUse = (e: Extension, flags: FlagsObject): boolean =>\n  e.flags.required.every((f) => flags[f] === true) &&\n  e.flags.disallowed.every((f) => flags[f] === false);\n\nexport const getGatingFlagNames = (extensions: Extension[]): string[] =>\n  _.uniq([\n    ..._.flatMap(extensions.map((e) => e.flags.required)),\n    ..._.flatMap(extensions.map((e) => e.flags.disallowed)),\n  ]);\n\n/**\n * Provides access to Console plugins and their extensions.\n *\n * Only plugins listed via `allowedDynamicPluginNames` can be added dynamically at runtime.\n *\n * Subscribed `listeners` are invoked upon any of the following events:\n *\n * - when the list of extensions which are currently in use changes\n * - when the runtime status of a dynamic plugin changes\n *\n * In development, this object is exposed as `window.pluginStore` for easier debugging.\n */\nexport class PluginStore {\n  // Extensions contributed by static plugins which are currently in use\n  private staticPluginExtensions: LoadedExtension[];\n\n  // Extensions contributed by dynamic plugins which are currently in use\n  private dynamicPluginExtensions: LoadedExtension[];\n\n  private readonly staticPlugins: StaticPlugin[];\n\n  // Static plugins that were disabled by loading replacement dynamic plugins\n  private readonly disabledStaticPluginNames = new Set<string>();\n\n  private readonly allowedDynamicPluginNames: Set<string>;\n\n  // Dynamic plugins that were loaded successfully\n  private readonly loadedDynamicPlugins = new Map<string, LoadedDynamicPlugin>();\n\n  // Dynamic plugins that failed to load properly\n  private readonly failedDynamicPluginNames = new Set<string>();\n\n  private readonly listeners: VoidFunction[] = [];\n\n  constructor(staticPlugins: ActivePlugin[] = [], allowedDynamicPluginNames: string[] = []) {\n    this.staticPlugins = staticPlugins.map((plugin) => ({\n      name: plugin.name,\n      extensions: plugin.extensions.map((e, index) =>\n        Object.freeze(\n          augmentExtension(sanitizeExtension({ ...e }), plugin.name, plugin.name, index),\n        ),\n      ),\n    }));\n\n    this.allowedDynamicPluginNames = new Set(allowedDynamicPluginNames);\n    this.updateExtensions();\n  }\n\n  getExtensionsInUse() {\n    return [...this.staticPluginExtensions, ...this.dynamicPluginExtensions];\n  }\n\n  getAllowedDynamicPluginNames() {\n    return Array.from(this.allowedDynamicPluginNames);\n  }\n\n  subscribe(listener: VoidFunction): VoidFunction {\n    let isSubscribed = true;\n    this.listeners.push(listener);\n\n    return () => {\n      if (isSubscribed) {\n        isSubscribed = false;\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n      }\n    };\n  }\n\n  private invokeListeners() {\n    this.listeners.forEach((listener) => {\n      listener();\n    });\n  }\n\n  addDynamicPlugin(\n    pluginID: string,\n    manifest: ConsolePluginManifestJSON,\n    resolvedExtensions: Extension[],\n  ) {\n    if (this.loadedDynamicPlugins.has(pluginID)) {\n      console.warn(`Attempt to re-add plugin ${pluginID}`);\n      return;\n    }\n\n    if (!this.allowedDynamicPluginNames.has(manifest.name)) {\n      console.warn(`Attempt to add unexpected plugin ${pluginID}`);\n      return;\n    }\n\n    if (this.failedDynamicPluginNames.has(manifest.name)) {\n      console.warn(`Attempt to add plugin ${pluginID} previously marked as failed`);\n      return;\n    }\n\n    this.loadedDynamicPlugins.set(pluginID, {\n      manifest: Object.freeze(manifest),\n      processedExtensions: resolvedExtensions.map((e, index) =>\n        Object.freeze(augmentExtension(sanitizeExtension(e), pluginID, manifest.name, index)),\n      ),\n      enabled: false,\n    });\n\n    (manifest.disableStaticPlugins || [])\n      .filter(\n        (pluginName) =>\n          !this.disabledStaticPluginNames.has(pluginName) &&\n          this.staticPlugins.some((plugin) => plugin.name === pluginName),\n      )\n      .forEach((pluginName) => {\n        console.log(`Static plugin ${pluginName} will be disabled`);\n        this.disabledStaticPluginNames.add(pluginName);\n      });\n\n    this.updateExtensions();\n    this.invokeListeners();\n\n    console.log(`Added plugin ${pluginID}`);\n  }\n\n  private updateExtensions() {\n    const dynamicPlugins = Array.from(this.loadedDynamicPlugins.values());\n\n    this.staticPluginExtensions = this.staticPlugins\n      .filter((plugin) => !this.disabledStaticPluginNames.has(plugin.name))\n      .reduce((acc, plugin) => [...acc, ...plugin.extensions], [] as LoadedExtension[]);\n\n    this.dynamicPluginExtensions = dynamicPlugins.reduce(\n      (acc, plugin) => (plugin.enabled ? [...acc, ...plugin.processedExtensions] : acc),\n      [] as LoadedExtension[],\n    );\n  }\n\n  setDynamicPluginEnabled(pluginID: string, enabled: boolean) {\n    if (!this.loadedDynamicPlugins.has(pluginID)) {\n      console.warn(\n        `Attempt to ${\n          enabled ? 'enable' : 'disable'\n        } plugin ${pluginID} that has not been loaded yet`,\n      );\n      return;\n    }\n\n    const plugin = this.loadedDynamicPlugins.get(pluginID);\n\n    if (plugin.enabled !== enabled) {\n      plugin.enabled = enabled;\n\n      this.updateExtensions();\n      this.invokeListeners();\n\n      console.log(`Plugin ${pluginID} is now ${enabled ? 'enabled' : 'disabled'}`);\n    }\n  }\n\n  private isDynamicPluginLoaded(pluginName: string) {\n    return Array.from(this.loadedDynamicPlugins.values()).some(\n      (plugin) => plugin.manifest.name === pluginName,\n    );\n  }\n\n  registerFailedDynamicPlugin(pluginName: string) {\n    if (!this.allowedDynamicPluginNames.has(pluginName)) {\n      console.warn(`Attempt to register unexpected plugin ${pluginName} as failed`);\n      return;\n    }\n\n    if (this.isDynamicPluginLoaded(pluginName)) {\n      console.warn(`Attempt to register an already loaded plugin ${pluginName} as failed`);\n      return;\n    }\n\n    this.failedDynamicPluginNames.add(pluginName);\n    this.invokeListeners();\n  }\n\n  getDynamicPluginInfo(): DynamicPluginInfo[] {\n    const loadedPluginEntries = Array.from(this.loadedDynamicPlugins.keys()).reduce(\n      (acc, pluginID) => {\n        const plugin = this.loadedDynamicPlugins.get(pluginID);\n        acc.push({\n          status: 'Loaded',\n          pluginID,\n          metadata: _.omit(plugin.manifest, 'extensions'),\n          enabled: plugin.enabled,\n        });\n        return acc;\n      },\n      [] as LoadedDynamicPluginInfo[],\n    );\n\n    const failedPluginEntries = Array.from(this.failedDynamicPluginNames.values()).reduce(\n      (acc, pluginName) => {\n        acc.push({\n          status: 'Failed',\n          pluginName,\n        });\n        return acc;\n      },\n      [] as NotLoadedDynamicPluginInfo[],\n    );\n\n    const pendingPluginEntries = Array.from(this.allowedDynamicPluginNames.values())\n      .filter(\n        (pluginName) =>\n          !this.isDynamicPluginLoaded(pluginName) && !this.failedDynamicPluginNames.has(pluginName),\n      )\n      .reduce((acc, pluginName) => {\n        acc.push({\n          status: 'Pending',\n          pluginName,\n        });\n        return acc;\n      }, [] as NotLoadedDynamicPluginInfo[]);\n\n    return [...loadedPluginEntries, ...failedPluginEntries, ...pendingPluginEntries];\n  }\n\n  getStateForTestPurposes() {\n    return {\n      staticPluginExtensions: this.staticPluginExtensions,\n      dynamicPluginExtensions: this.dynamicPluginExtensions,\n      staticPlugins: this.staticPlugins,\n      disabledStaticPluginNames: this.disabledStaticPluginNames,\n      loadedDynamicPlugins: this.loadedDynamicPlugins,\n      failedDynamicPluginNames: this.failedDynamicPluginNames,\n      listeners: this.listeners,\n    };\n  }\n}\n\ntype FlagsObject = { [key: string]: boolean };\n\ntype StaticPlugin = {\n  name: string;\n  extensions: LoadedExtension[];\n};\n\ntype DynamicPluginManifest = Readonly<ConsolePluginManifestJSON>;\n\ntype DynamicPluginMetadata = Omit<DynamicPluginManifest, 'extensions'>;\n\ntype LoadedDynamicPlugin = {\n  manifest: DynamicPluginManifest;\n  processedExtensions: Readonly<LoadedExtension[]>;\n  enabled: boolean;\n};\n\nexport type LoadedDynamicPluginInfo = {\n  status: 'Loaded';\n  pluginID: string;\n  metadata: DynamicPluginMetadata;\n  enabled: boolean;\n};\n\nexport type NotLoadedDynamicPluginInfo = {\n  status: 'Pending' | 'Failed';\n  pluginName: string;\n};\n\nexport type DynamicPluginInfo = LoadedDynamicPluginInfo | NotLoadedDynamicPluginInfo;\n\nexport const isLoadedDynamicPluginInfo = (i: DynamicPluginInfo): i is LoadedDynamicPluginInfo =>\n  i.status === 'Loaded';\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware.filter(Boolean),\n  ]);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","exports.default = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"extensions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/SupportedExtension\"\n      },\n      \"description\": \"List of extensions contributed by the plugin.\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"Plugin name. Should be the same as `metadata.name` of the corresponding `ConsolePlugin` resource used to represent the plugin on the cluster.\"\n    },\n    \"version\": {\n      \"type\": \"string\",\n      \"description\": \"Plugin version. Must be semver compliant.\"\n    },\n    \"displayName\": {\n      \"type\": \"string\",\n      \"description\": \"User-friendly plugin name.\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"User-friendly plugin description.\"\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"@console/pluginAPI\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"@console/pluginAPI\"\n      ],\n      \"additionalProperties\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Plugin API and other plugins required for this plugin to work.\"\n    },\n    \"disableStaticPlugins\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Disable the given static plugins when this plugin gets loaded.\"\n    }\n  },\n  \"required\": [\n    \"dependencies\",\n    \"extensions\",\n    \"name\",\n    \"version\"\n  ],\n  \"description\": \"Schema of Console plugin's `plugin-manifest.json` file.\",\n  \"definitions\": {\n    \"SupportedExtension\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/FeatureFlag\"\n        },\n        {\n          \"$ref\": \"#/definitions/ModelFeatureFlag\"\n        },\n        {\n          \"$ref\": \"#/definitions/ReduxReducer\"\n        },\n        {\n          \"$ref\": \"#/definitions/ContextProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/StandaloneRoutePage\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCCreateProp\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCStatus\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCAlert\"\n        },\n        {\n          \"$ref\": \"#/definitions/PVCDelete\"\n        },\n        {\n          \"$ref\": \"#/definitions/YAMLTemplate\"\n        },\n        {\n          \"$ref\": \"#/definitions/AddAction\"\n        },\n        {\n          \"$ref\": \"#/definitions/AddActionGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/ClusterGlobalConfig\"\n        },\n        {\n          \"$ref\": \"#/definitions/HrefNavItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceNSNavItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceClusterNavItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/Separator\"\n        },\n        {\n          \"$ref\": \"#/definitions/NavSection\"\n        },\n        {\n          \"$ref\": \"#/definitions/FileUpload\"\n        },\n        {\n          \"$ref\": \"#/definitions/ModelMetadata\"\n        },\n        {\n          \"$ref\": \"#/definitions/AlertAction\"\n        },\n        {\n          \"$ref\": \"#/definitions/StorageProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/TelemetryListener\"\n        },\n        {\n          \"$ref\": \"#/definitions/SupportedCatalogExtensions\"\n        },\n        {\n          \"$ref\": \"#/definitions/SupportedActionExtensions\"\n        },\n        {\n          \"$ref\": \"#/definitions/SupportedTopologyDetailsExtensions\"\n        },\n        {\n          \"$ref\": \"#/definitions/RoutePage\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceListPage\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceTabPage\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceDetailsPage\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsTab\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsCard\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthPrometheusSubsystem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthURLSubsystem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthResourceSubsystem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewHealthOperator\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsInventoryItemGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewInventoryItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/DashboardsOverviewResourceActivity\"\n        },\n        {\n          \"$ref\": \"#/definitions/TopologyDecoratorProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/TopologyRelationshipProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/CreateResource\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceItem\"\n        },\n        {\n          \"$ref\": \"#/definitions/Perspective\"\n        },\n        {\n          \"$ref\": \"#/definitions/HorizontalNavTab\"\n        }\n      ]\n    },\n    \"FeatureFlag\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.flag\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"handler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Used to set/unset arbitrary feature flags.\"\n            }\n          },\n          \"required\": [\n            \"handler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Gives full control over Console feature flags.\"\n    },\n    \"EncodedCodeRef\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"$codeRef\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"$codeRef\"\n      ],\n      \"additionalProperties\": false,\n      \"description\": \"Code reference, encoded as an object literal.\\n\\nThe value of the `$codeRef` property should be formatted as `moduleName.exportName` (referring to a named export) or `moduleName` (referring to the `default` export).\"\n    },\n    \"ExtensionFlags\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"required\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"disallowed\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"Console feature flags used to gate extension instances.\"\n    },\n    \"ModelFeatureFlag\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.flag/model\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"flag\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the flag to set once the CRD is detected.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model which refers to a `CustomResourceDefinition`.\"\n            }\n          },\n          \"required\": [\n            \"flag\",\n            \"model\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new Console feature flag driven by the presence of a CRD on the cluster.\"\n    },\n    \"ExtensionK8sModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"group\",\n        \"version\",\n        \"kind\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"ReduxReducer\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.redux-reducer\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"scope\": {\n              \"type\": \"string\",\n              \"description\": \"The key to represent the reducer-managed substate within the Redux state object.\"\n            },\n            \"reducer\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The reducer function, operating on the reducer-managed substate.\"\n            }\n          },\n          \"required\": [\n            \"scope\",\n            \"reducer\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new reducer to Console Redux store which operates on `plugins.<scope>` substate.\"\n    },\n    \"ContextProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.context-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Context Provider component.\"\n            },\n            \"useValueHook\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Hook for the Context value.\"\n            }\n          },\n          \"required\": [\n            \"provider\",\n            \"useValueHook\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new React context provider to Console application root.\"\n    },\n    \"StandaloneRoutePage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/route/standalone\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            },\n            \"path\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Valid URL path or array of paths that `path-to-regexp@^1.7.0` understands.\"\n            },\n            \"exact\": {\n              \"type\": \"boolean\",\n              \"description\": \"When true, will only match if the path matches the `location.pathname` exactly.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"path\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new standalone page (rendered outside the common page layout) to Console router.\"\n    },\n    \"PVCCreateProp\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/create-prop\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"Label for the create prop action.\"\n            },\n            \"path\": {\n              \"type\": \"string\",\n              \"description\": \"Path for the create prop action.\"\n            }\n          },\n          \"required\": [\n            \"label\",\n            \"path\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"PVCStatus\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/status\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"priority\": {\n              \"type\": \"number\",\n              \"description\": \"Priority for the status component. Bigger value means higher priority.\"\n            },\n            \"status\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The status component.\"\n            },\n            \"predicate\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Predicate that tells whether to render the status component or not.\"\n            }\n          },\n          \"required\": [\n            \"priority\",\n            \"status\",\n            \"predicate\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"PVCAlert\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/alert\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"alert\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The alert component.\"\n            }\n          },\n          \"required\": [\n            \"alert\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"PVCDelete\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.pvc/delete\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"predicate\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Predicate that tells whether to use the extension or not.\"\n            },\n            \"onPVCKill\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Method for the PVC delete operation.\"\n            },\n            \"alert\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Alert component to show additional information.\"\n            }\n          },\n          \"required\": [\n            \"predicate\",\n            \"onPVCKill\",\n            \"alert\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"YAMLTemplate\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.yaml-template\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"Model associated with the template.\"\n            },\n            \"template\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The YAML template.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the template. Use the name `default` to mark this as the default template.\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"template\",\n            \"name\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"YAML templates for editing resources via the yaml editor.\"\n    },\n    \"AddAction\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"dev-console.add/action\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the action.\"\n            },\n            \"groupId\": {\n              \"type\": \"string\",\n              \"description\": \"IDs used to identify the action groups the action would belong to.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label of the action\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"The description of the action.\"\n            },\n            \"href\": {\n              \"type\": \"string\",\n              \"description\": \"The href to navigate to.\"\n            },\n            \"icon\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The perspective display icon.\"\n            },\n            \"accessReview\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/AccessReviewResourceAttributes\"\n              },\n              \"description\": \"Optional access review to control visibility / enablement of the action.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\",\n            \"description\",\n            \"href\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"AccessReviewResourceAttributes\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"resource\": {\n          \"type\": \"string\"\n        },\n        \"subresource\": {\n          \"type\": \"string\"\n        },\n        \"verb\": {\n          \"$ref\": \"#/definitions/K8sVerb\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"namespace\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"K8sVerb\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"create\",\n        \"get\",\n        \"list\",\n        \"update\",\n        \"patch\",\n        \"delete\",\n        \"deletecollection\",\n        \"watch\"\n      ]\n    },\n    \"AddActionGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"dev-console.add/action-group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the action group.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the action group\"\n            },\n            \"insertBefore\": {\n              \"type\": \"string\",\n              \"description\": \"ID of action group before which this group should be placed\"\n            },\n            \"insertAfter\": {\n              \"type\": \"string\",\n              \"description\": \"ID of action group after which this group should be placed\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ClusterGlobalConfig\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.global-config\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"Unique identifier for the cluster config resource instance.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the cluster config resource instance.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model which refers to a cluster config resource.\"\n            },\n            \"namespace\": {\n              \"type\": \"string\",\n              \"description\": \"The namespace of the cluster config resource instance.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"model\",\n            \"namespace\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"HrefNavItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/href\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of this item.\"\n            },\n            \"href\": {\n              \"type\": \"string\",\n              \"description\": \"The link href value.\"\n            },\n            \"namespaced\": {\n              \"type\": \"boolean\",\n              \"description\": \"if true, adds /ns/active-namespace to the end\"\n            },\n            \"prefixNamespaced\": {\n              \"type\": \"boolean\",\n              \"description\": \"if true, adds /k8s/ns/active-namespace to the begining\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"startsWith\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Mark this item as active when the URL starts with one of these paths.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"href\",\n            \"id\",\n            \"name\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ResourceNSNavItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/resource-ns\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Overrides the default name. If not supplied the name of the link will equal the plural value of the model.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model for which this nav item links to.\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"startsWith\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Mark this item as active when the URL starts with one of these paths.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ResourceClusterNavItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/resource-cluster\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Overrides the default name. If not supplied the name of the link will equal the plural value of the model.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model for which this nav item links to.\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"startsWith\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Mark this item as active when the URL starts with one of these paths.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"Separator\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/separator\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"section\": {\n              \"type\": \"string\",\n              \"description\": \"Navigation section to which this item belongs to. If not specified, render this item as a top level link.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"NavSection\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.navigation/section\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"Name of this section. If not supplied, only a separator will be shown above the section.\"\n            },\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this item.\"\n            },\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective ID to which this item belongs to. If not specified, contributes to the default perspective.\"\n            },\n            \"dataAttributes\": {\n              \"type\": \"object\",\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Adds data attributes to the DOM.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. `insertBefore` takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"FileUpload\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.file-upload\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"fileExtensions\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Supported file extensions.\"\n            },\n            \"handler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Function which handles the file drop action.\"\n            }\n          },\n          \"required\": [\n            \"fileExtensions\",\n            \"handler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"ModelMetadata\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.resource-metadata\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupModel\",\n              \"description\": \"The model to customize. May specify only a group, or optional version and kind.\"\n            },\n            \"badge\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"tech\",\n                \"dev\"\n              ],\n              \"description\": \"Whether to consider this model reference as tech preview or dev preview.\"\n            },\n            \"color\": {\n              \"type\": \"string\",\n              \"description\": \"The color to associate to this model.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"Override the label. Requires `kind` be provided.\"\n            },\n            \"labelPlural\": {\n              \"type\": \"string\",\n              \"description\": \"Override the plural label. Requires `kind` be provided.\"\n            },\n            \"abbr\": {\n              \"type\": \"string\",\n              \"description\": \"Customize the abbreviation. Defaults to All uppercase chars in the kind up to 4 characters long. Requires `kind` be provided.\"\n            }\n          },\n          \"required\": [\n            \"model\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Customize the display of models by overriding values retrieved and generated through API discovery.\"\n    },\n    \"ExtensionK8sGroupModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"group\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"AlertAction\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.alert-action\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"alert\": {\n              \"type\": \"string\"\n            },\n            \"text\": {\n              \"type\": \"string\"\n            },\n            \"action\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            }\n          },\n          \"required\": [\n            \"alert\",\n            \"text\",\n            \"action\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"StorageProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.storage-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"type\": \"string\"\n            },\n            \"Component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            }\n          },\n          \"required\": [\n            \"name\",\n            \"Component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"TelemetryListener\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.telemetry/listener\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"listener\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Listen for telemetry events\"\n            }\n          },\n          \"required\": [\n            \"listener\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"SupportedCatalogExtensions\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/CatalogItemType\"\n        },\n        {\n          \"$ref\": \"#/definitions/CatalogItemProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/CatalogItemFilter\"\n        }\n      ]\n    },\n    \"CatalogItemType\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.catalog/item-type\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type for the catalog item.\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title for the catalog item.\"\n            },\n            \"catalogDescription\": {\n              \"type\": \"string\",\n              \"description\": \"Description for the type specific catalog.\"\n            },\n            \"typeDescription\": {\n              \"type\": \"string\",\n              \"description\": \"Description for the catalog item type.\"\n            },\n            \"filters\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/CatalogItemAttribute\"\n              },\n              \"description\": \"Custom filters specific to the catalog item.\"\n            },\n            \"groupings\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/CatalogItemAttribute\"\n              },\n              \"description\": \"Custom groupings specific to the catalog item.\"\n            }\n          },\n          \"required\": [\n            \"type\",\n            \"title\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"CatalogItemAttribute\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"attribute\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"label\",\n        \"attribute\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"CatalogItemProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.catalog/item-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"catalogId\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"The unique identifier for the catalog this provider contributes to.\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type ID for the catalog item type.\"\n            },\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Fetch items and normalize it for the catalog. Value is a react effect hook.\"\n            },\n            \"priority\": {\n              \"type\": \"number\",\n              \"description\": \"Priority for this provider. Defaults to 0. Higher priority providers may override catalog items provided by other providers.\"\n            }\n          },\n          \"required\": [\n            \"catalogId\",\n            \"type\",\n            \"provider\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"CatalogItemFilter\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.catalog/item-filter\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"catalogId\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"The unique identifier for the catalog this provider contributes to.\"\n            },\n            \"type\": {\n              \"type\": \"string\",\n              \"description\": \"Type ID for the catalog item type.\"\n            },\n            \"filter\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Filters items of a specific type. Value is a function that takes CatalogItem[] and returns a subset based on the filter criteria.\"\n            }\n          },\n          \"required\": [\n            \"catalogId\",\n            \"type\",\n            \"filter\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"SupportedActionExtensions\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/ActionProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/ResourceActionProvider\"\n        },\n        {\n          \"$ref\": \"#/definitions/ActionGroup\"\n        },\n        {\n          \"$ref\": \"#/definitions/ActionFilter\"\n        }\n      ]\n    },\n    \"ActionProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"contextId\": {\n              \"type\": \"string\",\n              \"description\": \"The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm\"\n            },\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"A react hook which returns actions for the given scope. If contextId = `resource` then the scope will always be a K8s resource object\"\n            }\n          },\n          \"required\": [\n            \"contextId\",\n            \"provider\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ActionProvider contributes a hook that returns list of actions for specific context\"\n    },\n    \"ResourceActionProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/resource-provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sKindVersionModel\",\n              \"description\": \"The model for which this provider provides actions for.\"\n            },\n            \"provider\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"A react hook which returns actions for the given resource model\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"provider\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ResourceActionProvider contributes a hook that returns list of actions for specific resource model\"\n    },\n    \"ExtensionK8sKindVersionModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"version\",\n        \"kind\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"ActionGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the action section.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label to display in the UI. Required for submenus.\"\n            },\n            \"submenu\": {\n              \"type\": \"boolean\",\n              \"description\": \"Whether this group should be displayed as submenu\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. insertBefore takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ActionGroup contributes an action group that can also be a submenu\"\n    },\n    \"ActionFilter\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.action/filter\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"contextId\": {\n              \"type\": \"string\",\n              \"description\": \"The context ID helps to narrow the scope of contributed actions to a particular area of the application. Ex - topology, helm\"\n            },\n            \"filter\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"A function which will filter actions based on some conditions. scope: The scope in which actions should be provided for. Note: hook may be required if we want to remove the ModifyCount action from a deployment with HPA\"\n            }\n          },\n          \"required\": [\n            \"contextId\",\n            \"filter\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"ActionFilter can be used to filter an action\"\n    },\n    \"SupportedTopologyDetailsExtensions\": {\n      \"$ref\": \"#/definitions/DetailsTab\",\n      \"description\": \"NetworkAdpater contributes an adapter to adapt element to data that can be used by Networking component\"\n    },\n    \"DetailsTab\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.topology/details/tab\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique identifier for this details tab.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The tab label to display in the UI.\"\n            },\n            \"insertBefore\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item before the item referenced here. For arrays, the first one found in order is used.\"\n            },\n            \"insertAfter\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Insert this item after the item referenced here. For arrays, the first one found in order is used. insertBefore takes precedence.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"DetailsTab contributes a tab for the topology details panel.\"\n    },\n    \"RoutePage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/route\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"perspective\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective to which this page belongs to. If not specified, contributes to all perspectives.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            },\n            \"path\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              ],\n              \"description\": \"Valid URL path or array of paths that `path-to-regexp@^1.7.0` understands.\"\n            },\n            \"exact\": {\n              \"type\": \"boolean\",\n              \"description\": \"When true, will only match if the path matches the `location.pathname` exactly.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"path\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new page to Console router.\"\n    },\n    \"ResourceListPage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/resource/list\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupKindModel\",\n              \"description\": \"The model for which this resource page links to.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new resource list page to Console router.\"\n    },\n    \"ExtensionK8sGroupKindModel\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"group\": {\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"type\": \"string\"\n        },\n        \"kind\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"group\",\n        \"kind\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"ResourceTabPage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/resource/tab\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The name of the tab.\"\n            },\n            \"href\": {\n              \"type\": \"string\",\n              \"description\": \"The optional href for the tab link. If not provided, the first `path` is used.\"\n            },\n            \"exact\": {\n              \"type\": \"boolean\",\n              \"description\": \"When true, will only match if the path matches the `location.pathname` exactly.\"\n            },\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupKindModel\",\n              \"description\": \"The model for which this resource page links to.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"model\",\n            \"name\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new resource tab page to Console router.\"\n    },\n    \"ResourceDetailsPage\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.page/resource/details\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sGroupKindModel\",\n              \"description\": \"The model for which this resource page links to.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            }\n          },\n          \"required\": [\n            \"component\",\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds new resource details page to Console router.\"\n    },\n    \"DashboardsTab\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/tab\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"A unique tab identifier, used as tab link `href` and when adding cards to this tab.\"\n            },\n            \"navSection\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"home\",\n                \"storage\"\n              ],\n              \"description\": \"NavSection to which the tab belongs to\"\n            },\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the tab.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"navSection\",\n            \"title\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a new dashboard tab, placed after the Overview tab.\"\n    },\n    \"DashboardsCard\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/card\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"tab\": {\n              \"type\": \"string\",\n              \"description\": \"The id of the dashboard tab to which the card will be added.\"\n            },\n            \"position\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"LEFT\",\n                \"RIGHT\",\n                \"MAIN\"\n              ],\n              \"description\": \"The grid position of the card on the dashboard.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Dashboard card component.\"\n            },\n            \"span\": {\n              \"$ref\": \"#/definitions/DashboardCardSpan\",\n              \"description\": \"Card's vertical span in the column. Ignored for small screens, defaults to 12.\"\n            }\n          },\n          \"required\": [\n            \"tab\",\n            \"position\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a new dashboard card.\"\n    },\n    \"DashboardCardSpan\": {\n      \"type\": \"number\",\n      \"enum\": [\n        4,\n        6,\n        12\n      ]\n    },\n    \"DashboardsOverviewHealthPrometheusSubsystem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/prometheus\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The display name of the subsystem.\"\n            },\n            \"queries\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"The Prometheus queries\"\n            },\n            \"healthHandler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolve the subsystem's health.\"\n            },\n            \"additionalResource\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Additional resource which will be fetched and passed to `healthHandler`.\"\n            },\n            \"popupComponent\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content.\"\n            },\n            \"popupTitle\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the popover.\"\n            },\n            \"disallowedProviders\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"description\": \"Cloud providers which for which the subsystem should be hidden.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"queries\",\n            \"healthHandler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is Prometheus.\"\n    },\n    \"DashboardsOverviewHealthURLSubsystem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/url\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The display name of the subsystem.\"\n            },\n            \"url\": {\n              \"type\": \"string\",\n              \"description\": \"The URL to fetch data from. It will be prefixed with base k8s URL.\"\n            },\n            \"healthHandler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolve the subsystem's health.\"\n            },\n            \"additionalResource\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Additional resource which will be fetched and passed to `healthHandler`.\"\n            },\n            \"popupComponent\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content.\"\n            },\n            \"popupTitle\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the popover.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"url\",\n            \"healthHandler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API.\"\n    },\n    \"DashboardsOverviewHealthResourceSubsystem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/resource\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"The display name of the subsystem.\"\n            },\n            \"resources\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Kubernetes resources which will be fetched and passed to `healthHandler`.\"\n            },\n            \"healthHandler\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolve the subsystem's health.\"\n            },\n            \"popupComponent\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup content. If defined, a health item will be represented as a link which opens popup with given content.\"\n            },\n            \"popupTitle\": {\n              \"type\": \"string\",\n              \"description\": \"The title of the popover.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"resources\",\n            \"healthHandler\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s Resource.\"\n    },\n    \"DashboardsOverviewHealthOperator\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/health/operator\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\n              \"type\": \"string\",\n              \"description\": \"Title of operators section in the popup.\"\n            },\n            \"resources\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Kubernetes resources which will be fetched and passed to `healthHandler`.\"\n            },\n            \"getOperatorsWithStatuses\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Resolves status for the operators.\"\n            },\n            \"operatorRowLoader\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Loader for popup row component.\"\n            },\n            \"viewAllLink\": {\n              \"type\": \"string\",\n              \"description\": \"Links to all resources page. If not provided then a list page of the first resource from resources prop is used.\"\n            }\n          },\n          \"required\": [\n            \"title\",\n            \"resources\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a health subsystem to the status card of Overview dashboard where the source of status is a K8s REST API.\"\n    },\n    \"DashboardsInventoryItemGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/inventory/item/group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"The id of the status group.\"\n            },\n            \"icon\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"React component representing the status group icon.\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"icon\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds an inventory status group.\"\n    },\n    \"DashboardsOverviewInventoryItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/inventory/item\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"additionalProperties\": false,\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The model for `resource` which will be fetched. Used to get the model's `label` or `abbr`.\"\n            },\n            \"mapper\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Function which maps various statuses to groups.\"\n            },\n            \"additionalResources\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Additional resources which will be fetched and passed to the `mapper` function.\"\n            }\n          },\n          \"required\": [\n            \"model\"\n          ]\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds a resource tile to the overview inventory card.\"\n    },\n    \"DashboardsOverviewResourceActivity\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.dashboards/overview/activity/resource\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"k8sResource\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The utilization item to be replaced.\"\n            },\n            \"isActivity\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Function which determines if the given resource represents the action. If not defined, every resource represents activity.\"\n            },\n            \"getTimestamp\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"Timestamp for the given action, which will be used for ordering.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The action component.\"\n            }\n          },\n          \"required\": [\n            \"k8sResource\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Adds an activity to the Activity Card of Overview Dashboard where the triggering of activity is based on watching a K8s resource.\"\n    },\n    \"TopologyDecoratorProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.topology/decorator/provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"priority\": {\n              \"type\": \"number\"\n            },\n            \"quadrant\": {\n              \"$ref\": \"#/definitions/TopologyDecoratorQuadrant\"\n            },\n            \"decorator\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"priority\",\n            \"quadrant\",\n            \"decorator\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Topology Decorator Provider Extension\"\n    },\n    \"TopologyDecoratorQuadrant\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"upperLeft\",\n        \"upperRight\",\n        \"lowerLeft\",\n        \"lowerRight\"\n      ]\n    },\n    \"TopologyRelationshipProvider\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.topology/relationship/provider\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"provides\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            },\n            \"tooltip\": {\n              \"type\": \"string\"\n            },\n            \"create\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\"\n            },\n            \"priority\": {\n              \"type\": \"number\"\n            }\n          },\n          \"required\": [\n            \"provides\",\n            \"tooltip\",\n            \"create\",\n            \"priority\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ],\n      \"description\": \"Topology relationship provider connector extension\"\n    },\n    \"CreateResource\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.resource/create\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sModel\",\n              \"description\": \"The model for which this create resource page will be rendered.\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the model matches\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"UserPreferenceGroup\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.user-preference/group\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the user preference group.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label of the user preference group\"\n            },\n            \"insertBefore\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference group before which this group should be placed\"\n            },\n            \"insertAfter\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference group after which this group should be placed\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"UserPreferenceItem\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.user-preference/item\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"ID used to identify the user preference item and referenced in insertAfter and insertBefore to define the item order.\"\n            },\n            \"groupId\": {\n              \"type\": \"string\",\n              \"description\": \"IDs used to identify the user preference groups the item would belong to.\"\n            },\n            \"label\": {\n              \"type\": \"string\",\n              \"description\": \"The label of the user preference\"\n            },\n            \"description\": {\n              \"type\": \"string\",\n              \"description\": \"The description of the user preference.\"\n            },\n            \"field\": {\n              \"$ref\": \"#/definitions/UserPreferenceField\",\n              \"description\": \"The input field options used to render the values to set the user preference.\"\n            },\n            \"insertBefore\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference item before which this item should be placed\"\n            },\n            \"insertAfter\": {\n              \"type\": \"string\",\n              \"description\": \"ID of user preference item after which this item should be placed\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"label\",\n            \"description\",\n            \"field\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"UserPreferenceField\": {\n      \"anyOf\": [\n        {\n          \"$ref\": \"#/definitions/UserPreferenceDropdownField\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxField\"\n        },\n        {\n          \"$ref\": \"#/definitions/UserPreferenceCustomField\"\n        }\n      ]\n    },\n    \"UserPreferenceDropdownField\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"dropdown\"\n        },\n        \"userSettingsKey\": {\n          \"type\": \"string\"\n        },\n        \"defaultValue\": {\n          \"type\": \"string\"\n        },\n        \"options\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\"\n              },\n              \"label\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": [\n              \"value\",\n              \"label\"\n            ],\n            \"additionalProperties\": false\n          }\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"userSettingsKey\",\n        \"options\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"UserPreferenceCheckboxField\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"checkbox\"\n        },\n        \"userSettingsKey\": {\n          \"type\": \"string\"\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"trueValue\": {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxFieldValue\"\n        },\n        \"falseValue\": {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxFieldValue\"\n        },\n        \"defaultValue\": {\n          \"$ref\": \"#/definitions/UserPreferenceCheckboxFieldValue\"\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"userSettingsKey\",\n        \"label\",\n        \"trueValue\",\n        \"falseValue\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"UserPreferenceCheckboxFieldValue\": {\n      \"type\": [\n        \"string\",\n        \"number\",\n        \"boolean\"\n      ]\n    },\n    \"UserPreferenceCustomField\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"custom\"\n        },\n        \"component\": {\n          \"$ref\": \"#/definitions/EncodedCodeRef\"\n        },\n        \"props\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/JSONSchema7Type\"\n          }\n        }\n      },\n      \"required\": [\n        \"type\",\n        \"component\"\n      ],\n      \"additionalProperties\": false\n    },\n    \"JSONSchema7Type\": {\n      \"anyOf\": [\n        {\n          \"type\": \"string\"\n        },\n        {\n          \"type\": \"number\"\n        },\n        {\n          \"type\": \"boolean\"\n        },\n        {\n          \"$ref\": \"#/definitions/JSONSchema7Object\"\n        },\n        {\n          \"$ref\": \"#/definitions/JSONSchema7Array\"\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"Primitive type\"\n    },\n    \"JSONSchema7Object\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/JSONSchema7Type\"\n      }\n    },\n    \"JSONSchema7Array\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/JSONSchema7Type\"\n      }\n    },\n    \"Perspective\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.perspective\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective identifier.\"\n            },\n            \"name\": {\n              \"type\": \"string\",\n              \"description\": \"The perspective display name.\"\n            },\n            \"icon\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The perspective display icon.\"\n            },\n            \"default\": {\n              \"type\": \"boolean\",\n              \"description\": \"Whether the perspective is the default. There can only be one default.\"\n            },\n            \"defaultPins\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ExtensionK8sModel\"\n              },\n              \"description\": \"Default pinned resources on the nav\"\n            },\n            \"landingPageURL\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The function to get perspective landing page URL.\"\n            },\n            \"importRedirectURL\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The function to get redirect URL for import flow.\"\n            },\n            \"usePerspectiveDetection\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The hook to detect default perspective\"\n            }\n          },\n          \"required\": [\n            \"id\",\n            \"name\",\n            \"icon\",\n            \"landingPageURL\",\n            \"importRedirectURL\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    },\n    \"HorizontalNavTab\": {\n      \"type\": \"object\",\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"type\": {\n          \"type\": \"string\",\n          \"const\": \"console.tab/horizontalNav\"\n        },\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"model\": {\n              \"$ref\": \"#/definitions/ExtensionK8sKindVersionModel\",\n              \"description\": \"The model for which this provider show tab.\"\n            },\n            \"page\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"href\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"name\",\n                \"href\"\n              ],\n              \"additionalProperties\": false,\n              \"description\": \"The page to be show in horizontal tab. It takes tab name as name and href of the tab\"\n            },\n            \"component\": {\n              \"$ref\": \"#/definitions/EncodedCodeRef\",\n              \"description\": \"The component to be rendered when the route matches.\"\n            }\n          },\n          \"required\": [\n            \"model\",\n            \"page\",\n            \"component\"\n          ],\n          \"additionalProperties\": false\n        },\n        \"flags\": {\n          \"$ref\": \"#/definitions/ExtensionFlags\"\n        }\n      },\n      \"required\": [\n        \"properties\",\n        \"type\"\n      ]\n    }\n  }\n};"],"names":["module","exports","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","DynamicRoute","Routes","fallback","Bullseye","Spinner","Switch","Route","path","component","exact","Redirect","to","history","useHistory","chrome","useChrome","store","register","notifications","on","onChromeEvent","init","unregister","event","domEvent","push","href","replace","getActivePlugins","isBeta","appName","fetch","json","e","console","error","useResolvedExtensions","typeGuards","extensions","resolvedExtensions","setResolvedExtensions","resolved","setResolved","errors","setErrors","disposed","map","then","fulfilledValues","rejectedReasons","length","codeRefSymbol","Symbol","isEncodedCodeRef","obj","Object","getOwnPropertyNames","$codeRef","isExecutableCodeRef","getOwnPropertySymbols","codeRefErrorSymbol","resolveEncodedCodeRefs","entryModule","pluginID","errorCallback","properties","ref","key","loader","applyCodeRefSymbol","moduleName","exportName","value","match","parseEncodedCodeRefValue","requestedModule","get","loadReferencedObject","defineProperty","resolveExtension","extension","valueResolutions","isCodeRefError","getCodeRefError","resolvedValue","catch","setCodeRefError","isAddAction","type","isAddActionGroup","isCatalogItemType","isCatalogItemProvider","isCatalogItemFilter","isClusterGlobalConfig","isContextProvider","isDashboardsTab","isDashboardsCard","isDashboardsOverviewHealthPrometheusSubsystem","isResolvedDashboardsOverviewHealthPrometheusSubsystem","isDashboardsOverviewHealthURLSubsystem","isResolvedDashboardsOverviewHealthURLSubsystem","isDashboardsOverviewHealthResourceSubsystem","isResolvedDashboardsOverviewHealthResourceSubsystem","isDashboardsOverviewHealthOperator","isResolvedDashboardsOverviewHealthOperator","isDashboardsInventoryItemGroup","isDashboardsOverviewInventoryItem","isDashboardsOverviewInventoryItemReplacement","isProjectDashboardInventoryItem","isDashboardsOverviewResourceActivity","isDashboardsOverviewPrometheusActivity","isDashboardsOverviewHealthSubsystem","isFeatureFlag","isModelFeatureFlag","isFileUpload","isHrefNavItem","isResourceNSNavItem","isResourceClusterNavItem","isSeparator","isNavSection","isNavItem","isRoutePage","isStandaloneRoutePage","isResourceListPage","isResourceDetailsPage","isResourceTabPage","isPerspective","isPVCCreateProp","isPVCAlert","isPVCStatus","isPVCDelete","isReduxReducer","isModelMetadata","isTelemetryListener","isYAMLTemplate","isAlertAction","InventoryStatusGroup","HealthState","isStorageProvider","isActionProvider","isResourceActionProvider","isActionGroup","isActionFilter","isDetailsTab","isTopologyDecoratorProvider","isTopologyRelationshipProvider","isCreateResource","UserPreferenceFieldType","isUserPreferenceItem","isUserPreferenceGroup","isHorizontalNavTab","getAPIVersionForModel","model","apiGroup","apiVersion","getGroupVersionKindForResource","resource","kind","apiVersionSplit","split","apiVersionSplitLen","Error","group","version","getGroupVersionKindForModel","consoleFetch","consoleFetchJSON","consoleFetchText","useActivePerspective","k8sGet","k8sCreate","k8sUpdate","k8sPatch","k8sDelete","k8sList","PerspectiveContext","activePerspective","setActivePerspective","useContext","CustomError","constructor","message","super","this","name","enumerable","configurable","captureStackTrace","stack","setPrototypeOf","prototype","HttpError","code","response","static","messages","TimeoutError","url","ms","RetryError","cookiePrefix","validateStatus","method","retry","ok","status","RegExp","window","SERVER_FLAGS","basePath","test","shouldLogout","contentType","headers","indexOf","statusText","includes","details","cause","causes","reason","field","initDefaults","credentials","consoleFetchInternal","options","timeout","allOptions","document","cookie","c","filter","startsWith","slice","pop","Authorization","fetchPromise","timeoutPromise","Promise","unused","reject","setTimeout","race","attempt","consoleFetchCommon","text","isPlainText","JSON","parse","Accept","consoleFetchSendJSON","body","stringify","delete","post","put","patch","k8sBasePath","resourceURL","u","isLegacy","p","getK8sAPIPath","ns","plural","encodeURIComponent","queryParams","v","k","join","getK8sResourcePath","toArray","Array","isArray","requirementToString","requirement","operator","values","adapterFunc","func","knownArgs","args","arg","k8sGetResource","opts","requestInit","assign","k8sCreateResource","data","metadata","namespace","k8sUpdateResource","k8sPatchResource","patches","resolve","k8sDeleteResource","propagationPolicy","jsonData","k8sListResource","raw","query","newVal","selector","requirements","matchLabels","matchExpressions","isOldFormat","keys","sort","forEach","me","toRequirements","selectorToString","listURL","result","typedItems","items","i","deepForOwn","predicate","valueCallback","visitValue","container","$$typeof","isPlainNonReactObject","arrayElement","index","toString","settleAllPromises","promises","results","allSettled","r","modules","react","sharedScope","reduce","acc","moduleRequest","loaded","initSharedPluginModules","override","pluginMap","Map","getPluginID","m","initConsolePlugins","pluginStore","reduxStore","loadPluginEntry","initSharedPluginModulesCallback","resolveEncodedCodeRefsCallback","has","pluginData","entryCallbackFired","manifest","setDynamicPluginEnabled","addDynamicPlugin","getPluginEntryCallback","registerPluginEntryCallback","createThunkMiddleware","extraArgument","dispatch","getState","next","action","thunk","withExtraArgument","baseReducers","freeze","FLAGS","state","payload","flag","composeEnhancers","cachedStore","enabledPlugins","onPluginRegister","base","setPluginStore","item","pathPrefix","baseURL","existingPluginData","from","find","existingPluginID","set","script","createElement","id","src","getDocumentOrigin","location","origin","baseAbsoluteURL","URL","async","onload","onerror","info","head","appendChild","loadDynamicPlugin","pluginName","activePlugins","dynamicPluginNames","allPluginNames","consolePlugins","disabledPlugins","all","params","URLSearchParams","search","entries","getURLSearchParams","disabledPluginNames","getEnabledDynamicPluginNames","initialPluginStore","subscriptionServiceInitialized","extensionSubscriptions","dynamicPluginListeners","onExtensionSubscriptionAdded","onDynamicPluginListenerAdded","initSubscriptionService","getExtensionsInUse","getFlags","invokeExtensionListener","sub","currentExtensions","currentFlags","extensionsInUse","tg","listenerLastArgs","listener","getDynamicPluginInfo","lastExtensions","lastFlags","invokeAllExtensionListeners","nextExtensions","nextFlags","lastPluginEntries","invokeAllDynamicPluginListeners","nextPluginEntries","subscribe","subscribeToExtensions","subList","invokeListener","isSubscribed","splice","isTranslatableString","endsWith","useExtensions","forceRender","s","isMountedRef","unsubscribeRef","extensionsInUseRef","latestTypeGuardsRef","t","trySubscribe","current","translateExtension","tryUnsubscribe","sanitizeExtension","flags","required","disallowed","augmentExtension","uid","isExtensionInUse","every","f","PluginStore","staticPlugins","allowedDynamicPluginNames","disabledStaticPluginNames","Set","loadedDynamicPlugins","failedDynamicPluginNames","listeners","plugin","updateExtensions","staticPluginExtensions","dynamicPluginExtensions","getAllowedDynamicPluginNames","invokeListeners","warn","processedExtensions","enabled","disableStaticPlugins","some","log","add","dynamicPlugins","isDynamicPluginLoaded","registerFailedDynamicPlugin","getStateForTestPurposes","registry","middleware","errorDescriptionKey","Boolean"],"sourceRoot":""}