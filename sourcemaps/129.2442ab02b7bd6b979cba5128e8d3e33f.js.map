{"version":3,"file":"js/129.f12a67b69e330c5d7a54.js","mappings":"iFACAA,EAAOC,QAAU,I,8FCGjB,MAcA,EAd6B,IAEzB,gBAAC,EAAAC,WAAU,KACT,gBAAC,EAAAC,eAAc,CAACC,KAAM,OACtB,gBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAK,MAAI,eAGlC,gBAAC,EAAAC,eAAc,KACb,mD,2VCLR,MAyDA,EAzDgD,EAAGC,OAAAA,MACjD,MAAOC,EAAUC,GAAe,YAAe,GAEzCC,EAAYC,IAChB,GAAIC,MAAMC,QAAQF,GAChB,OAAOA,EAAuBG,IAAIJ,GAGpC,MAAM,WACJK,EAAU,KACVC,EAAI,SACJC,GAIEN,EAFF,EAEEA,EAAsB,UAFxB,cAAYO,GAAa,EAAKC,EAAQ,IAA5B,mBACPC,EAAQ,EACTT,EAPE,6CASN,OAAO,OAAP,QACEI,WAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAE,SAAAA,GACGC,IAIP,OAAKb,EAKH,uBAAKc,MAAO,CAAEC,SAAU,SAAUC,UAAWf,OAAWgB,EAAY,IAAKC,SAAU,WAAYC,WAAY,KACxGC,KAAKC,UAAUlB,EAASH,GAAS,KAAM,GACvCC,EACC,uBAAKqB,QAAS,IAAMpB,GAAY,GAAQY,MAAO,CAAES,OAAQ,UAAWC,IAAK,EAAGC,MAAO,OAAQP,SAAU,WAAYQ,UAAW,WAAU,uBAItI,uBACEJ,QAAS,IAAMpB,GAAY,GAC3BY,MAAO,CACLS,OAAQ,UACRI,WAAY,qCACZC,OAAQ,EACRH,MAAO,OACPI,OAAQ,OACRX,SAAU,WACVQ,UAAW,WACZ,sBArBA,mDCVX,EAfsD,EAAGI,mBAAAA,EAAoBC,WAAAA,EAAYC,eAAAA,KAClFF,EAGDC,EACEC,EACK,KAGF,yCAGF,gBAAC,EAAAC,QAAO,MAVN,KCTEC,EAA+B,CAC1C1B,WAAY,KACZE,SAAU,uBACVD,KAAM,UACN0B,OAAQ,YAGGC,EAAmC,CAC9C5B,WAAY,WACZC,KAAM,cACNC,SAAU,uBACVyB,OAAQ,gBC+FV,EAhGsC,EAAGE,UAAAA,MACvC,MAAOC,EAAGC,GAAQ,WAAe,OAC1BC,EAAOC,GAAY,WAAe,OAClCC,EAAQC,GAAW,YAAe,IAClCC,EAAMC,GAAW,aA0DxB,OAxDA,aAAgB,KACd,IAAIC,EACJ,GAAIF,EAAM,CACR,IAAIG,EAAWH,EACX,QAAQI,KAAKJ,KAEfG,EAAWH,EAAKK,MAAM,IAExBH,EAAK,IAAI,EAAAI,iBAAiB,mBAAoB,CAC5CN,KAAMG,IAERD,EAAGK,QAAO,KACRR,GAAQ,MAEVG,EAAGM,SAASC,IACVC,QAAQC,MAAM,QAASF,MAEzBP,EAAGU,WAAWC,IACZ,IACE,IAAIJ,EAEFA,EADgC,iBAAvBI,EACFrC,KAAKsC,MAAMD,GAEXA,EAET,MAAM,KAAEE,EAAI,OAAE3D,GAAWqD,GAAQ,GAG7Bd,EADG,YADCoB,EAEC,KAGA3D,GAETsD,QAAQC,MAAM,UAAWI,EAAM3D,GAC/B,MAAO4D,GAGP,OAFAN,QAAQd,MAAM,0BAA2BoB,QACzCnB,EAAS,yCAIbK,EAAGe,SAASR,IACVV,GAAQ,GACRJ,EAAK,MACLM,OAAQ5B,GAGRqC,QAAQC,MAAM,QAASF,EAAM,QAASA,EAAKS,SAI/C,MAAO,KACLhB,MAAAA,GAAAA,EAAIiB,UACJjB,EAAK,QAEN,CAACF,IAGF,gCACE,gBAAC,EAAAhD,MAAK,CAACC,aAAa,KAAKC,KAAK,MAAI,cAGlC,yFACE8C,IACCP,EACC,gCACE,6DACA,gBAAC,EAAA2B,OAAM,CACL1C,QAAS,KACPuB,GAAQ,IAAAoB,mBAAkB7B,OAAkBnB,EAAW,CAAEiD,GAAI7B,MAE/D8B,QAAQ,WAAS,iBAMrB,8CAEJ,gBAAC,EAAc,CAACrC,qBAAsBc,EAAMb,WAAYW,EAAQV,iBAAkBM,IACjFI,IAAWJ,GAAK,2EAChBE,GACC,gBAAC,EAAA4B,MAAK,CAACD,QAAQ,SAASE,MAAM,mBAC3B7B,GAGJF,GAAK,gBAAC,EAAW,CAACtC,OAAQsC,MCvFjC,IAAKgC,GAAL,SAAKA,GACH,kBACA,YACA,gBACA,YACA,kBALF,CAAKA,IAAAA,EAAU,KAYf,MAuHA,EAvH4C,EAAGjC,UAAAA,MAC7C,MAAOC,EAAGC,GAAQ,WAAe,OAC1BgC,EAAMC,GAAW,WAAuB,SACxCC,EAAQC,GAAa,WAAuB,KAC5CC,EAAQC,GAAa,WAAkC,OACvDC,EAAiBC,GAAsB,WAAuB,MA4FrE,OA1FA,aAAgB,KACd,MAAMC,EAA0B,CAC9BR,KAAAA,EACAL,GAAI7B,GAEA2C,EAAkE,CACtExE,WAAY,GAAG4B,EAAiB1B,YAAY0B,EAAiB5B,aAC7DC,KAAM2B,EAAiB3B,KACvBG,SAAU,CACR2D,KAAAA,EACAlC,UAAAA,IAIJ,IAAI4C,EAAU,KACd,OAAQN,GACN,KAAKL,EAAWY,OACdD,GAAU,IAAAE,mBAAkB,CAC1BC,MAAOhD,EACPiD,aAAcN,EACdlE,SAAUmE,IAEZ,MACF,KAAKV,EAAWgB,IACdL,GAAU,IAAAM,gBAAe,CACvBH,MAAOhD,EACPiD,aAAcN,IACbS,MAAMnC,I,MAEP,OADAyB,EAAiC,QAAd,EAAAzB,MAAAA,OAAI,EAAJA,EAAMzC,gBAAQ,eAAEiE,iBAC5BxB,KAET,MACF,KAAKiB,EAAWmB,MACdR,GAAU,IAAAS,kBAAiB,CACzBN,MAAOhD,EACPiD,aAAcN,EACdY,QAAS,CACP,CACEC,GAAI,UACJhD,KAAM,QACNiD,MAAO,YAIb,MACF,KAAKvB,EAAWwB,IACdb,GAAU,IAAAc,mBAAkB,CAC1BX,MAAOhD,EACPiD,aAAcN,EACdlE,SAAU,OAAF,wBACHmE,GAAmB,CACtBpE,SAAU,OAAF,wBACHoE,EAAoBpE,UAAQ,CAC/BiE,gBAAAA,QAGHW,MAAMnC,I,MAEP,OADAyB,EAAiC,QAAd,EAAAzB,MAAAA,OAAI,EAAJA,EAAMzC,gBAAQ,eAAEiE,iBAC5BxB,KAET,MACF,KAAKiB,EAAW0B,OACdf,GAAU,IAAAgB,mBAAkB,CAC1Bb,MAAOhD,EACPiD,aAAcN,IAEhB,MACF,KAAK,KAEH,MACF,QAEE,MAAM,IAAImB,MAAM,UAEpBjB,MAAAA,GAAAA,EACIO,MAAMnC,IACNqB,EAAU,GAAGC,eACbpC,EAAKc,GACLC,QAAQC,MAAM,OAAOoB,KAAWtB,MAEjC8C,OAAOC,IACN9C,QAAQd,MAAM,cAAcmC,IAAUyB,GACtC1B,EAAU,gBAAgB0B,EAAIC,WAC9B9D,EAAK,SAEN+D,SAAQ,KACP1B,EAAU,WAEb,CAACD,EAAQJ,EAAMlC,EAAWwC,IAG3B,gCACE,gBAAC,EAAAjF,MAAK,CAACC,aAAa,KAAKC,KAAK,MAAI,eAGlC,gBAAC,EAAAyG,UAAS,CAACC,YAAY,mBAAmBC,SAAWC,GAAMlC,EAAQkC,GAAIb,MAAOtB,IAC9E,2BACE,wHACCoC,OAAOC,OAAOtC,GAAY/D,KAAKmG,GAC9B,gBAAC,WAAc,CAACG,IAAKH,GACnB,gBAAC,EAAA1C,OAAM,CAAC8C,WAAYJ,IAAMpC,EAAWwB,KAA2B,OAApBjB,EAA0BvD,QAAS,IAAMsD,EAAU8B,IAC5FA,GACO,QAIhB,2BAAMjC,GACLnC,GAAK,gBAAC,EAAW,CAACtC,OAAQsC,MC3FjC,EAzC8D,EAAGD,UAAAA,EAAW0E,aAAAA,MAC1E,MAAOvE,EAAOC,GAAY,WAAuB,MAE3CuE,GAAY,IAAAC,oBAqBlB,OApBA,aAAgB,KACVD,IACF,IAAAE,sBAAqB,CACnB9B,MAAOlD,IAENsD,MAAM2B,I,MACL,MAAMjD,EAAa,QAAR,EAAAiD,EAAM,UAAE,eAAEvG,SAAS2D,KAE1BL,EACF6C,EAAa7C,GAEbzB,EAAS,iGAGZ0D,OAAOvC,IACNnB,EAAS,mCAAmCmB,MAAAA,OAAC,EAADA,EAAGyC,gBAGpD,CAACW,EAAWD,IAEXvE,EAEA,gBAAC,EAAA4B,MAAK,CAACD,QAAQ,SAASiD,UAAQ,EAAC/C,MAAM,+BACpC7B,GAKAH,EACL,yB,sBAAuBA,GAEvB,gCACE,gBAAC,EAAAJ,QAAO,M,uBC8Bd,EAjE0C,EAAGI,UAAAA,MAC3C,MAAOkC,EAAMC,GAAW,WAAuB,QAEzC6C,EAAkB,CACtBC,QAAQ,EACRC,iBAAkB,CAChBC,MAAO,uBACPC,QAAS,WACThH,KAAM,eAER8D,KAAAA,EACAlC,UAAAA,IAiBKgB,EAAMqE,EAAQlF,IAAS,IAAAmF,qBAAoBN,GAC5CO,EAAmBF,KAAYlF,EAerC,OAdIoF,GACFtE,QAAQuE,IAAI,kCAAmCxE,GAc/C,gCACE,gBAAC,EAAAzD,MAAK,CAACC,aAAa,KAAKC,KAAK,MAAI,mCAGlC,gBAAC,EAAAyG,UAAS,CAACC,YAAY,mBAAmBC,SAAWC,GAAMlC,EAAQkC,GAAIb,MAAOtB,IAC9E,2BACE,yB,gDAAiDA,E,MAC/CqD,GAAoB,gDACrBA,GAAoBvE,GAAQ,4CAC5BuE,IAAqBvE,GAAQ,0ECrCtC,EApB0B,KACxB,MAAOhB,EAAW0E,GAAgB,aAElC,OACE,gBAAC,EAAAe,YAAW,KACV,gBAAC,EAAkB,CAACzF,UAAWA,EAAW0E,aAAcA,IACvD1E,GACC,gCACE,sBAAIvB,MAAO,CAAEiH,OAAQ,MACrB,gBAAC,EAAS,CAAC1F,UAAWA,IACtB,sBAAIvB,MAAO,CAAEiH,OAAQ,MACrB,gBAAC,EAAQ,CAAC1F,UAAWA,IACrB,sBAAIvB,MAAO,CAAEiH,OAAQ,MACrB,gBAAC,EAAM,CAAC1F,UAAWA,OCdvB2F,EAAe,QAAW,IAAM,oFAEzBC,EAAmB,IAC9B,gBAAC,WAAc,CACbC,SACE,gBAAC,EAAAC,SAAQ,KACP,gBAAC,EAAAlG,QAAO,QAIZ,gBAAC,EAAAmG,OAAM,KACL,gBAAC,EAAAC,MAAK,CAACC,OAAK,EAAC1F,KAAK,WAAW2F,UAAW,IACxC,gBAAC,EAAAF,MAAK,CAACzF,KAAK,gBAAgB2F,UAAWP,IACvC,gBAAC,EAAAK,MAAK,CAACC,OAAK,EAAC1F,KAAK,IAAI2F,UAAW,IACjC,gBAAC,EAAAF,MAAK,KACJ,gBAAC,EAAAG,SAAQ,CAACC,GAAG,S,sDCXrB,MA6BA,EA7BsB,KACpB,MAAMC,GAAU,IAAAC,cAEVC,GAAS,EAAAC,EAAA,KACTC,GAAQ,IAAAC,YAiBd,OAfA,aAAgB,MACG,UACRC,SAAS,CAAEC,cAAe,OACnC,MAAQC,GAAIC,GAAkBP,MAAAA,OAAM,EAANA,EAAQQ,OAEhCC,EAAaF,EAAc,kBAAmBG,IAC9CA,EAAMC,UACRb,EAAQc,KAAK,GAAGF,EAAMC,SAASE,KAAKC,QAAQ,OAAQ,UAGxD,MAAO,KACLL,OAED,CAACX,EAASE,IAGX,gBAAC,WAAc,KACb,gBAAC,KAAmB,CAACE,MAAOA,IAC5B,gBAACb,EAAM,S,mFChCb,MAMA,EANe,IACb,gBAAC,EAAAE,SAAQ,KACP,gBAAC,EAAAlG,QAAO,OCYL,MAAM,UAAoBiE,MAG/ByD,YAAYtD,GACVuD,MAAMvD,GAGNM,OAAOkD,eAAeC,KAAM,OAAQ,CAClCjE,iBAAkBtB,KAClBwF,YAAY,EACZC,cAAc,IAIuB,mBAA5B9D,MAAM+D,kBACf/D,MAAM+D,kBAAkBH,KAAMA,KAAKH,aAEnCG,KAAKI,MAAQ,IAAIhE,MAAMG,GAAS6D,MAKlCvD,OAAOwD,eAAeL,gBAAiBM,YChCpC,MAAMC,UAAkB,EAsC7B,YAAmBhE,EAAwBvC,EAAsBwG,EAA4BC,GAC3FX,MAAMvD,GADmC,KAAAvC,KAAAA,EAAsB,KAAAwG,SAAAA,EAA4B,KAAAC,KAAAA,EAItFC,gBAAgB1G,GACrB,OAAO,IAAIuG,EAAUA,EAAUI,SAAS3G,GAAOA,IA1ChC,EAAA2G,SAAW,CAC1B,IAAK,cACL,IAAK,eACL,IAAK,mBACL,IAAK,YACL,IAAK,YACL,IAAK,qBACL,IAAK,iBACL,IAAK,gCACL,IAAK,kBACL,IAAK,WACL,IAAK,OACL,IAAK,kBACL,IAAK,sBACL,IAAK,oBACL,IAAK,eACL,IAAK,yBACL,IAAK,wBACL,IAAK,qBACL,IAAK,eACL,IAAK,sBACL,IAAK,mBACL,IAAK,wBACL,IAAK,oBACL,IAAK,kCACL,IAAK,gCACL,IAAK,wBACL,IAAK,kBACL,IAAK,cACL,IAAK,sBACL,IAAK,kBACL,IAAK,6BACL,IAAK,0BACL,IAAK,eACL,IAAK,mC,0SCxCT,MA8CaC,EACVC,GACD,CAAOC,EAAaC,IAA4C,OAAD,6BAC7D,MAAMC,QAAcH,EAAKI,WACzB,IAAKD,EACH,OAAOE,QAAQC,OAAO,kDAGxB,MAAMC,EAAa,OAAH,wBACXL,GAAO,CACVM,QAAS,OAAF,wBACFN,EAAQM,SAAO,CAClBC,OAAQ,mBACRC,cAAe,UAAUP,QAI7B,IACE,IAAIQ,EAAUV,EAKd,MAJI,QAAQ5H,KAAK4H,KAEfU,EAAUV,EAAI3H,MAAM,IA7DSqH,QA+DHiB,MAAM,IAAIC,QAAQ,WAAiBF,IAAW,CAAEG,YAAa,YAAcP,GA/DjD,OAAD,6BACzD,GAAIZ,EAASoB,GACX,OAAOpB,EAGT,GAAwB,MAApBA,EAAS7F,OACX,MAAM,IAAI4F,EAAU,sDAAuDC,EAAS7F,OAAQ6F,GAG9F,MAAMqB,EAAcrB,EAASa,QAAQS,IAAI,gBACzC,IAAKD,IAAgD,IAAjCA,EAAYE,QAAQ,QACtC,MAAM,IAAIxB,EAAUC,EAASwB,WAAYxB,EAAS7F,OAAQ6F,GAG5D,OAAwB,MAApBA,EAAS7F,OACJ6F,EAASC,OAAO/E,MAAM+E,IAC3B,MAAM,IAAIF,EAAUE,EAAKlE,SAAW,uCAAwCiE,EAAS7F,OAAQ6F,EAAUC,MAIpGD,EAASC,OAAO/E,MAAM+E,I,QAC3B,MAAMwB,EAA4B,QAApB,EAAY,QAAZ,EAAAxB,EAAKyB,eAAO,eAAEC,cAAM,eAAG,GACrC,IAAIC,EAcJ,MAbIH,IACFG,EAAS,UAAUH,EAAM1F,uBAAuB0F,EAAMI,WAEnDD,IACHA,EAAS3B,EAAKlE,SAEX6F,IACHA,EAAS3B,EAAK/H,OAEX0J,IACHA,EAAS5B,EAASwB,YAGd,IAAIzB,EAAU6B,EAAQ5B,EAAS7F,OAAQ6F,EAAUC,SA4BrD,MAAO3G,GACP,OAAOoH,QAAQC,OAAOrH,GAjEE,IAAO0G,KCJxB8B,EAA0BtB,GAE9B,CAAC,yCALDuB,KAIoBvB,GAJTpB,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KAAK4C,MAAM,IAAK,GAAG,KAKR,wB,0BCGlE,MAyBA,EAzB4B,KAC1B,MAAM,KAAE3B,IAAS,EAAA9B,EAAA,MACV0D,EAAmBC,GAAwB,WAAyC,MAoB3F,OAlBA,aAAgB,KACV7B,IAAS4B,GACXC,EAAqB,CACnBC,SAAU/B,EAAYC,GACtB+B,cAAe,KAAY,O,OAAA,E,OAAA,E,EAAA,YACzB,MAAM5B,QAAcH,EAAKI,WACzB,MAAO,CACL4B,KAAM,SAASC,SAASD,eACxBE,aAAcT,EAAuBtB,GAErCgC,WAAalC,GAAQ,GAAGA,iB,YAND,K,+QAS3BmC,YAAW,kBAGd,CAACR,EAAmB,EAAAQ,YAAapC,IAE7B4B,GCbT,EAbgC,EAAGS,SAAAA,MACjC,MAAMT,EAAoB,IAE1B,OAAKA,EAOE,gBAAC,EAAAU,WAAU,CAACC,eAAgBX,GAAoBS,GAN9C,gBAAC,EAAM,Q,kHCHlB,IAAIG,EAEG,SAAS/D,KAAQgE,GAQtB,OAPAD,GAAW,QAAY,GAAI,CACzB,IACA,KACA,QAAwB,CAAEE,oBAAqB,CAAC,SAAU,cACvDD,EAAWE,OAAOC,WAEvBJ,EAASnE,SAAS,EAAAwE,aACXL,I","sources":["webpack:///./config/empty.js","webpack:///./src/poc-code/console-mount/src/components/foundation/static-routes/EmptyRoute.tsx","webpack:///./src/poc-code/testK8s/PrintObject.tsx","webpack:///./src/poc-code/testK8s/WSLoadingState.tsx","webpack:///./src/poc-code/testK8s/models.ts","webpack:///./src/poc-code/testK8s/WSTest.tsx","webpack:///./src/poc-code/testK8s/FetchTest.tsx","webpack:///./src/poc-code/testK8s/DetermineNamespace.tsx","webpack:///./src/poc-code/testK8s/HookTest.tsx","webpack:///./src/poc-code/testK8s/TestK8s.tsx","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/Utils/Loader.tsx","webpack:///./src/sdk/customError.ts","webpack:///./src/sdk/httpError.ts","webpack:///./src/sdk/commonFetch.ts","webpack:///./src/sdk/wsConfigs.ts","webpack:///./src/sdk/useAppConfiguration.ts","webpack:///./src/sdk/InitializeSDK.tsx","webpack:///./src/store/index.ts"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import * as React from 'react';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\n\nconst EmptyRoute: React.FC = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        Empty Route\n      </Title>\n      <EmptyStateBody>\n        <p>Nothing to see here.</p>\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default EmptyRoute;\n","import * as React from 'react';\nimport { K8sResourceCommon } from '@openshift/dynamic-plugin-sdk-utils';\n\ntype PrintObjectProps = {\n  object: K8sResourceCommon;\n};\n\nconst PrintObject: React.FC<PrintObjectProps> = ({ object }) => {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const sanitize = (resourceOrResourceList) => {\n    if (Array.isArray(resourceOrResourceList)) {\n      return resourceOrResourceList.map(sanitize);\n    }\n\n    const {\n      apiVersion,\n      kind,\n      apiGroup,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      metadata: { managedFields, ...metadata }, // drop managedFields\n      ...resource\n    } = resourceOrResourceList;\n\n    return {\n      apiVersion,\n      kind,\n      apiGroup,\n      metadata,\n      ...resource,\n    };\n  };\n\n  if (!object) {\n    return <div>No Object to Report</div>;\n  }\n\n  return (\n    <pre style={{ overflow: 'hidden', maxHeight: expanded ? undefined : 150, position: 'relative', paddingTop: 25 }}>\n      {JSON.stringify(sanitize(object), null, 2)}\n      {expanded ? (\n        <div onClick={() => setExpanded(false)} style={{ cursor: 'pointer', top: 0, width: '100%', position: 'absolute', textAlign: 'center' }}>\n          (Click to collapse)\n        </div>\n      ) : (\n        <div\n          onClick={() => setExpanded(true)}\n          style={{\n            cursor: 'pointer',\n            background: 'linear-gradient(transparent, gray)',\n            bottom: 0,\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            textAlign: 'center',\n          }}\n        >\n          (Click to expand)\n        </div>\n      )}\n    </pre>\n  );\n};\n\nexport default PrintObject;\n","import * as React from 'react';\nimport { Spinner } from '@patternfly/react-core';\n\ntype WSLoadingStateProps = {\n  socketBeingCreated: boolean;\n  socketOpen: boolean;\n  resourceLoaded: boolean;\n};\n\nconst WSLoadingState: React.FC<WSLoadingStateProps> = ({ socketBeingCreated, socketOpen, resourceLoaded }) => {\n  if (!socketBeingCreated) {\n    return null;\n  }\n  if (socketOpen) {\n    if (resourceLoaded) {\n      return null;\n    }\n\n    return <p>Socket Open.</p>;\n  }\n\n  return <Spinner />;\n};\n\nexport default WSLoadingState;\n","import { K8sModelCommon } from '@openshift/dynamic-plugin-sdk-utils';\n\nexport const ProjectModel: K8sModelCommon = {\n  apiVersion: 'v1',\n  apiGroup: 'project.openshift.io',\n  kind: 'Project',\n  plural: 'projects',\n};\n\nexport const ApplicationModel: K8sModelCommon = {\n  apiVersion: 'v1alpha1',\n  kind: 'Application',\n  apiGroup: 'appstudio.redhat.com',\n  plural: 'applications',\n};\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport { getK8sResourceURL, WebSocketFactory } from '@openshift/dynamic-plugin-sdk-utils';\nimport PrintObject from './PrintObject';\nimport { Alert, Button, Title } from '@patternfly/react-core';\nimport WSLoadingState from './WSLoadingState';\nimport { ApplicationModel } from './models';\n\ntype WSTestProps = {\n  namespace: string;\n};\n\nconst WSTest: React.FC<WSTestProps> = ({ namespace }) => {\n  const [r, setR] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [isOpen, setOpen] = React.useState(false);\n  const [path, setPath] = React.useState<string>();\n\n  React.useEffect(() => {\n    let ws: WebSocketFactory;\n    if (path) {\n      let safePath = path;\n      if (/^\\/\\//.test(path)) {\n        // https://github.com/openshift/dynamic-plugin-sdk/pull/55\n        safePath = path.slice(1);\n      }\n      ws = new WebSocketFactory('sample websocket', {\n        path: safePath,\n      });\n      ws.onOpen(() => {\n        setOpen(true);\n      });\n      ws.onError((data) => {\n        console.debug('error', data);\n      });\n      ws.onMessage((dataStringOrObject) => {\n        try {\n          let data;\n          if (typeof dataStringOrObject === 'string') {\n            data = JSON.parse(dataStringOrObject);\n          } else {\n            data = dataStringOrObject;\n          }\n          const { type, object } = data || {}; // current structure\n          switch (type) {\n            case 'DELETED':\n              setR(null);\n              break;\n            default:\n              setR(object);\n          }\n          console.debug('message', type, object);\n        } catch (e) {\n          console.error('>>> Web Socket Data Bad', e);\n          setError('Web Socket data unknown structure');\n          return;\n        }\n      });\n      ws.onClose((data) => {\n        setOpen(false);\n        setR(null);\n        setPath(undefined);\n        // https://www.rfc-editor.org/rfc/rfc6455#section-11.7\n        // 1006: https://stackoverflow.com/a/19305172\n        console.debug('close', data, 'code:', data.code);\n      });\n    }\n\n    return () => {\n      ws?.destroy();\n      ws = null;\n    };\n  }, [path]);\n\n  return (\n    <>\n      <Title headingLevel=\"h2\" size=\"xl\">\n        Websockets\n      </Title>\n      <p>Needs a created Application to successfully return details.</p>\n      {!path &&\n        (namespace ? (\n          <>\n            <p>Create Web Socket Connection to:</p>\n            <Button\n              onClick={() => {\n                setPath(getK8sResourceURL(ApplicationModel, undefined, { ns: namespace }));\n              }}\n              variant=\"primary\"\n            >\n              Applications\n            </Button>\n          </>\n        ) : (\n          <p>Need a namespace</p>\n        ))}\n      <WSLoadingState socketBeingCreated={!!path} socketOpen={isOpen} resourceLoaded={!!r} />\n      {isOpen && !r && <p>No response -- did you create the Application?</p>}\n      {error && (\n        <Alert variant=\"danger\" title=\"Websocket Error\">\n          {error}\n        </Alert>\n      )}\n      {r && <PrintObject object={r} />}\n    </>\n  );\n};\n\nexport default WSTest;\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport { Button, TextInput, Title } from '@patternfly/react-core';\nimport {\n  k8sCreateResource,\n  k8sDeleteResource,\n  k8sGetResource,\n  k8sPatchResource,\n  K8sResourceCommon,\n  k8sUpdateResource,\n} from '@openshift/dynamic-plugin-sdk-utils';\nimport { ApplicationModel } from './models';\n\nimport PrintObject from './PrintObject';\n\n// eslint-disable-next-line no-shadow\nenum ActionType {\n  CREATE = 'create',\n  GET = 'get',\n  PATCH = 'patch',\n  PUT = 'put',\n  DELETE = 'delete',\n}\n\ntype FetchTestProps = {\n  namespace: string;\n};\n\nconst FetchTest: React.FC<FetchTestProps> = ({ namespace }) => {\n  const [r, setR] = React.useState(null);\n  const [name, setName] = React.useState<string>('test');\n  const [status, setStatus] = React.useState<string>('');\n  const [action, setAction] = React.useState<ActionType | null>(null);\n  const [resourceVersion, setResourceVersion] = React.useState<string>(null);\n\n  React.useEffect(() => {\n    const testApplicationMetadata = {\n      name,\n      ns: namespace,\n    };\n    const testApplicationData: K8sResourceCommon & { [key: string]: any } = {\n      apiVersion: `${ApplicationModel.apiGroup}/${ApplicationModel.apiVersion}`,\n      kind: ApplicationModel.kind,\n      metadata: {\n        name,\n        namespace,\n      },\n    };\n\n    let promise = null;\n    switch (action) {\n      case ActionType.CREATE:\n        promise = k8sCreateResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n          resource: testApplicationData,\n        });\n        break;\n      case ActionType.GET:\n        promise = k8sGetResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n        }).then((data) => {\n          setResourceVersion(data?.metadata?.resourceVersion);\n          return data;\n        });\n        break;\n      case ActionType.PATCH:\n        promise = k8sPatchResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n          patches: [\n            {\n              op: 'replace',\n              path: '/test',\n              value: 'false',\n            },\n          ],\n        });\n        break;\n      case ActionType.PUT:\n        promise = k8sUpdateResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n          resource: {\n            ...testApplicationData,\n            metadata: {\n              ...testApplicationData.metadata,\n              resourceVersion,\n            },\n          },\n        }).then((data) => {\n          setResourceVersion(data?.metadata?.resourceVersion);\n          return data;\n        });\n        break;\n      case ActionType.DELETE:\n        promise = k8sDeleteResource({\n          model: ApplicationModel,\n          queryOptions: testApplicationMetadata,\n        });\n        break;\n      case null:\n        // ignore effect\n        break;\n      default:\n        // this shouldn't happen, catch state for missed cases\n        throw new Error('uh oh!');\n    }\n    promise\n      ?.then((data) => {\n        setStatus(`${action} response:`);\n        setR(data);\n        console.debug(`++++${action}!`, data);\n      })\n      .catch((err) => {\n        console.error(`++++failed ${action}`, err);\n        setStatus(`failed call: ${err.message}`);\n        setR(null);\n      })\n      .finally(() => {\n        setAction(null); // prevent the hook for re-firing on name change\n      });\n  }, [action, name, namespace, resourceVersion]);\n\n  return (\n    <>\n      <Title headingLevel=\"h2\" size=\"xl\">\n        Fetch Calls\n      </Title>\n      <TextInput placeholder=\"Application name\" onChange={(v) => setName(v)} value={name} />\n      <div>\n        <p>Test calls -- predefined data; use the above input to make/update/get multiple Applications</p>\n        {Object.values(ActionType).map((v) => (\n          <React.Fragment key={v}>\n            <Button isDisabled={v === ActionType.PUT && resourceVersion === null} onClick={() => setAction(v)}>\n              {v}\n            </Button>{' '}\n          </React.Fragment>\n        ))}\n      </div>\n      <div>{status}</div>\n      {r && <PrintObject object={r} />}\n    </>\n  );\n};\n\nexport default FetchTest;\n","import * as React from 'react';\nimport { isUtilsConfigSet, k8sListResourceItems } from '@openshift/dynamic-plugin-sdk-utils';\nimport { ProjectModel } from './models';\nimport { Alert, Spinner } from '@patternfly/react-core';\n\ntype DetermineNamespaceProps = {\n  namespace: string;\n  setNamespace: (namespace: string) => void;\n};\n\nconst DetermineNamespace: React.FC<DetermineNamespaceProps> = ({ namespace, setNamespace }) => {\n  const [error, setError] = React.useState<string>(null);\n\n  const hasConfig = isUtilsConfigSet();\n  React.useEffect(() => {\n    if (hasConfig) {\n      k8sListResourceItems({\n        model: ProjectModel,\n      })\n        .then((items) => {\n          const ns = items[0]?.metadata.name;\n\n          if (ns) {\n            setNamespace(ns);\n          } else {\n            setError('Could not find namespace; you are likely not able to do much as we are targeting \"default\"');\n          }\n        })\n        .catch((e) => {\n          setError(`Unknown issue loading namespace ${e?.message}`);\n        });\n    }\n  }, [hasConfig, setNamespace]);\n\n  if (error) {\n    return (\n      <Alert variant=\"danger\" isInline title=\"Determining Namespace Error\">\n        {error}\n      </Alert>\n    );\n  }\n\n  return namespace ? (\n    <p>Current namespace: {namespace}</p>\n  ) : (\n    <>\n      <Spinner /> Loading Namespace\n    </>\n  );\n};\n\nexport default DetermineNamespace;\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport { Title, TextInput } from '@patternfly/react-core';\nimport { useK8sWatchResource } from '@openshift/dynamic-plugin-sdk-utils';\n\n/* This component is currently used to verify the useK8sWatchResource hook. */\n\ntype HookTestProps = {\n  namespace: string;\n};\n\nconst HookTest: React.FC<HookTestProps> = ({ namespace }) => {\n  const [name, setName] = React.useState<string>('test');\n\n  const watchedResource = {\n    isList: false,\n    groupVersionKind: {\n      group: 'appstudio.redhat.com',\n      version: 'v1alpha1',\n      kind: 'Application',\n    },\n    name,\n    namespace,\n  };\n\n  // TODO: The following code can be uncommented when we are ready to test the useK8sWatchResources hook\n  // const watchedResources = {\n  //   application: {\n  //     isList: false,\n  //     groupVersionKind: {\n  //       group: 'appstudio.redhat.com',\n  //       version: 'v1alpha1',\n  //       kind: 'Application',\n  //     },\n  //     name: 'test',\n  //     namespace,\n  //   }\n  // };\n\n  const [data, loaded, error] = useK8sWatchResource(watchedResource);\n  const isResourceLoaded = loaded || !!error;\n  if (isResourceLoaded) {\n    console.log('data from useK8sWatchResource: ', data);\n  }\n\n  // TODO: The following code can be uncommented when we are ready to test the useK8sWatchResources hook\n  // const resources = useK8sWatchResources(watchedResources);\n  // const areResourcesLoaded =\n  //   Object.keys(resources).length > 0 &&\n  //   Object.values(resources).every((value) => value.loaded || !!value.loadError);\n  // const { data: resourceData } = resources.application;\n  // if (areResourcesLoaded) {\n  //   console.log(\"data from useK8sWatchResources: \", resourceData);\n  // }\n\n  return (\n    <>\n      <Title headingLevel=\"h2\" size=\"xl\">\n        Test hooks to watch Application\n      </Title>\n      <TextInput placeholder=\"Application name\" onChange={(v) => setName(v)} value={name} />\n      <div>\n        <p>Test useK8sWatchResource (watch Application: {name})</p>\n        {!isResourceLoaded && <p>Loading resource...</p>}\n        {isResourceLoaded && data && <p>Resource loaded</p>}\n        {isResourceLoaded && !data && <p>No data -- did you create the Application?</p>}\n      </div>\n      {/* <div> TODO: This can be uncommented when we are ready to test the useK8sWatchResource hook\n        <p>Test useK8sWatchResources (watch Application)</p>\n        {!areResourcesLoaded && <p>Loading resource...</p>}\n        {areResourcesLoaded && <p>Resource loaded</p>}\n      </div> */}\n    </>\n  );\n};\n\nexport default HookTest;\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport { PageSection } from '@patternfly/react-core';\nimport WSTest from './WSTest';\nimport FetchTest from './FetchTest';\nimport DetermineNamespace from './DetermineNamespace';\nimport HookTest from './HookTest';\n\nconst TestK8s: React.FC = () => {\n  const [namespace, setNamespace] = React.useState<string>();\n\n  return (\n    <PageSection>\n      <DetermineNamespace namespace={namespace} setNamespace={setNamespace} />\n      {namespace && (\n        <>\n          <hr style={{ margin: 20 }} />\n          <FetchTest namespace={namespace} />\n          <hr style={{ margin: 20 }} />\n          <HookTest namespace={namespace} />\n          <hr style={{ margin: 20 }} />\n          <WSTest namespace={namespace} />\n        </>\n      )}\n    </PageSection>\n  );\n};\n\nexport default TestK8s;\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport EmptyRoute from '@console/mount/src/components/foundation/static-routes/EmptyRoute';\nimport TestK8s from './poc-code/testK8s/TestK8s';\n\nconst DynamicRoute = React.lazy(() => import(/* webpackChunkName: \"DynamicRoute\" */ './Routes/DynamicRoute/DynamicRoute'));\n\nexport const Routes: React.FC = () => (\n  <React.Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      <Route exact path=\"/testK8s\" component={TestK8s} />\n      <Route path=\"/:dynamicPath\" component={DynamicRoute} />\n      <Route exact path=\"/\" component={EmptyRoute} />\n      <Route>\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  </React.Suspense>\n);\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useStore } from 'react-redux';\n\nconst App: React.FC = () => {\n  const history = useHistory();\n\n  const chrome = useChrome();\n  const store = useStore();\n\n  React.useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n    const { on: onChromeEvent } = chrome?.init();\n\n    const unregister = onChromeEvent('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`${event.domEvent.href.replace('/hac', '')}`);\n      }\n    });\n    return () => {\n      unregister();\n    };\n  }, [history, chrome]);\n\n  return (\n    <React.Fragment>\n      <NotificationsPortal store={store} />\n      <Routes />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import * as React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Loader = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n\nexport default Loader;\n","/**\n * Allows to easily extend a base class to create custom applicative errors.\n *\n * example:\n * ```\n * class HttpError extends CustomError {\n * \tpublic constructor(\n * \t\tpublic code: number,\n * \t\tmessage?: string,\n * \t) {\n * \t\tsuper(message)\n * \t}\n * }\n *\n * new HttpError(404, 'Not found')\n * ```\n */\nexport class CustomError extends Error {\n  name: string;\n\n  constructor(message?: string) {\n    super(message);\n    // set error name as constructor name, make it not enumerable to keep native Error behavior\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n    Object.defineProperty(this, 'name', {\n      value: new.target.name,\n      enumerable: false,\n      configurable: true,\n    });\n    // Use captureStackTrace when available to remove contructor from stack trace\n    // Add message to the stack trace\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      this.stack = new Error(message).stack;\n    }\n    // fix the extended error prototype chain\n    // because typescript __extends implementation can't\n    // see https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { CustomError } from './customError';\n\n/**\n * Http error\n *\n * Usage: throw HttpError.fromCode(404)\n */\nexport class HttpError extends CustomError {\n  protected static messages = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required', // RFC 7235\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed', // RFC 7232\n    413: 'Payload Too Large', // RFC 7231\n    414: 'URI Too Long', // RFC 7231\n    415: 'Unsupported Media Type',\n    416: 'Range Not Satisfiable', // RFC 7233\n    417: 'Expectation Failed',\n    418: \"I'm a teapot\", // RFC 2324\n    421: 'Misdirected Request', // RFC 7540\n    426: 'Upgrade Required',\n    428: 'Precondition Required', // RFC 6585\n    429: 'Too Many Requests', // RFC 6585\n    431: 'Request Header Fields Too Large', // RFC 6585\n    451: 'Unavailable For Legal Reasons', // RFC 7725\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n    506: 'Variant Also Negotiates', // RFC 2295\n    510: 'Not Extended', // RFC 2774\n    511: 'Network Authentication Required', // RFC 6585\n  };\n\n  public constructor(message: string, public code?: number, public response?: Response, public json?: any) {\n    super(message);\n  }\n\n  public static fromCode(code: number) {\n    return new HttpError(HttpError.messages[code], code);\n  }\n}\n\nexport class TimeoutError extends CustomError {\n  public constructor(public url: string, public ms: number) {\n    super(`Call to ${url} timed out after ${ms}ms.`);\n  }\n}\n\nexport class RetryError extends CustomError {}\n","import { HttpError } from './httpError';\n\nconst k8sBasePath = `/api/k8s`;\n\ntype AuthConfig = {\n  getToken: () => Promise<String>;\n};\n\nexport const validateStatus = async (response: Response) => {\n  if (response.ok) {\n    return response;\n  }\n\n  if (response.status === 401) {\n    throw new HttpError('Invalid token. Are you working with Prod SSO token?', response.status, response);\n  }\n\n  const contentType = response.headers.get('content-type');\n  if (!contentType || contentType.indexOf('json') === -1) {\n    throw new HttpError(response.statusText, response.status, response);\n  }\n\n  if (response.status === 403) {\n    return response.json().then((json) => {\n      throw new HttpError(json.message || 'Access denied due to cluster policy.', response.status, response, json);\n    });\n  }\n\n  return response.json().then((json) => {\n    const cause = json.details?.causes?.[0];\n    let reason;\n    if (cause) {\n      reason = `Error \"${cause.message}\" for field \"${cause.field}\".`;\n    }\n    if (!reason) {\n      reason = json.message;\n    }\n    if (!reason) {\n      reason = json.error;\n    }\n    if (!reason) {\n      reason = response.statusText;\n    }\n\n    throw new HttpError(reason, response.status, response, json);\n  });\n};\n\nexport const commonFetch =\n  (auth: AuthConfig) =>\n  async (url: string, options: RequestInit): Promise<Response> => {\n    const token = await auth.getToken();\n    if (!token) {\n      return Promise.reject('Could not make k8s call. Unable to find token.');\n    }\n\n    const allOptions = {\n      ...options,\n      headers: {\n        ...options.headers,\n        Accept: 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    };\n\n    try {\n      let safeURL = url;\n      if (/^\\/\\//.test(url)) {\n        // https://github.com/openshift/dynamic-plugin-sdk/pull/55\n        safeURL = url.slice(1);\n      }\n      return validateStatus(await fetch(new Request(`${k8sBasePath}${safeURL}`, { credentials: 'include' }), allOptions));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n","const base64 = (data: string): string => {\n  return btoa(data).replace(/\\+/g, '-').replace(/\\//g, '_').split('=', 1)[0];\n};\n\nexport const getWSTokenSubProtocols = (token: string): string[] => {\n  const base64Token = base64(token);\n  return [`base64url.bearer.authorization.k8s.io.${base64Token}`, 'base64.binary.k8s.io'];\n};\n","import * as React from 'react';\nimport { commonFetch } from './commonFetch';\nimport { getWSTokenSubProtocols } from './wsConfigs';\nimport { AppInitSDK } from '@openshift/dynamic-plugin-sdk-utils';\nimport { pluginStore } from 'Sdk/createStore';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\ntype AppConfigurations = React.ComponentProps<typeof AppInitSDK>['configurations'];\n\nconst useAppConfiguration = (): AppConfigurations | null => {\n  const { auth } = useChrome();\n  const [appConfigurations, setAppConfigurations] = React.useState<AppConfigurations | null>(null);\n\n  React.useEffect(() => {\n    if (auth && !appConfigurations) {\n      setAppConfigurations({\n        appFetch: commonFetch(auth),\n        wsAppSettings: async () => {\n          const token = await auth.getToken();\n          return {\n            host: `wss://${location.host}/wss/k8s`,\n            subProtocols: getWSTokenSubProtocols(token),\n            // TODO: check for `?` and use '&'\n            urlAugment: (url) => `${url}?watch=true`,\n          };\n        },\n        pluginStore,\n      });\n    }\n  }, [appConfigurations, pluginStore, auth]);\n\n  return appConfigurations;\n};\n\nexport default useAppConfiguration;\n","import * as React from 'react';\nimport { AppInitSDK } from '@openshift/dynamic-plugin-sdk-utils';\nimport Loader from '../Utils/Loader';\nimport useAppConfiguration from './useAppConfiguration';\n\nconst InitializeSDK: React.FC = ({ children }) => {\n  const appConfigurations = useAppConfiguration();\n\n  if (!appConfigurations) {\n    return <Loader />;\n  }\n\n  // TODO(SDK): Don't override children\n  // TODO(SDK): AppInitSDK doesn't work with no redux\n  // react_devtools_backend.js:4061 Error: could not find react-redux context value; please ensure the component is wrapped in a <Provider>\n  return <AppInitSDK configurations={appConfigurations}>{children as any}</AppInitSDK>;\n};\n\nexport default InitializeSDK;\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { SDKReducers } from '@openshift/dynamic-plugin-sdk-utils';\nimport thunk from 'redux-thunk';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    thunk,\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware.filter(Boolean),\n  ]);\n  registry.register(SDKReducers);\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n"],"names":["module","exports","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","object","expanded","setExpanded","sanitize","resourceOrResourceList","Array","isArray","map","apiVersion","kind","apiGroup","managedFields","metadata","resource","style","overflow","maxHeight","undefined","position","paddingTop","JSON","stringify","onClick","cursor","top","width","textAlign","background","bottom","height","socketBeingCreated","socketOpen","resourceLoaded","Spinner","ProjectModel","plural","ApplicationModel","namespace","r","setR","error","setError","isOpen","setOpen","path","setPath","ws","safePath","test","slice","WebSocketFactory","onOpen","onError","data","console","debug","onMessage","dataStringOrObject","parse","type","e","onClose","code","destroy","Button","getK8sResourceURL","ns","variant","Alert","title","ActionType","name","setName","status","setStatus","action","setAction","resourceVersion","setResourceVersion","testApplicationMetadata","testApplicationData","promise","CREATE","k8sCreateResource","model","queryOptions","GET","k8sGetResource","then","PATCH","k8sPatchResource","patches","op","value","PUT","k8sUpdateResource","DELETE","k8sDeleteResource","Error","catch","err","message","finally","TextInput","placeholder","onChange","v","Object","values","key","isDisabled","setNamespace","hasConfig","isUtilsConfigSet","k8sListResourceItems","items","isInline","watchedResource","isList","groupVersionKind","group","version","loaded","useK8sWatchResource","isResourceLoaded","log","PageSection","margin","DynamicRoute","Routes","fallback","Bullseye","Switch","Route","exact","component","Redirect","to","history","useHistory","chrome","useChrome","store","useStore","register","notifications","on","onChromeEvent","init","unregister","event","domEvent","push","href","replace","constructor","super","defineProperty","this","enumerable","configurable","captureStackTrace","stack","setPrototypeOf","prototype","HttpError","response","json","static","messages","commonFetch","auth","url","options","token","getToken","Promise","reject","allOptions","headers","Accept","Authorization","safeURL","fetch","Request","credentials","ok","contentType","get","indexOf","statusText","cause","details","causes","reason","field","getWSTokenSubProtocols","btoa","split","appConfigurations","setAppConfigurations","appFetch","wsAppSettings","host","location","subProtocols","urlAugment","pluginStore","children","AppInitSDK","configurations","registry","middleware","errorDescriptionKey","filter","Boolean","SDKReducers"],"sourceRoot":""}